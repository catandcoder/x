<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>清澄秋爽</title>
  
  <subtitle>苹果树下的思索者 书写是对思维的缓存</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.dashen.tech/"/>
  <updated>2022-01-15T12:21:23.925Z</updated>
  <id>http://www.dashen.tech/</id>
  
  <author>
    <name>fliter</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>跨平台构建 Docker 镜像</title>
    <link href="http://www.dashen.tech/2022/01/15/%E8%B7%A8%E5%B9%B3%E5%8F%B0%E6%9E%84%E5%BB%BA-Docker-%E9%95%9C%E5%83%8F/"/>
    <id>http://www.dashen.tech/2022/01/15/跨平台构建-Docker-镜像/</id>
    <published>2022-01-15T11:44:50.000Z</published>
    <updated>2022-01-15T12:21:23.925Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://blog.csdn.net/alex_yangchuansheng/article/details/103146303" target="_blank" rel="noopener">https://blog.csdn.net/alex_yangchuansheng/article/details/103146303</a></p><p>但在ubuntu上<em>apt-get update</em>命令总失败</p><p>尝试看下docker能不能像go build一样可以交叉编译</p><p><a href="https://blog.csdn.net/alex_yangchuansheng/article/details/103146303" target="_blank" rel="noopener">跨平台构建 Docker 镜像新姿势，x86、arm 一把梭</a></p><p><a href="https://www.jianshu.com/p/4dab04e6d1e4" target="_blank" rel="noopener">https://www.jianshu.com/p/4dab04e6d1e4</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/alex_yangchuansheng/article/details/103146303&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://blog.csdn.net/alex_y
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Rust时间和日期</title>
    <link href="http://www.dashen.tech/2022/01/08/Rust%E6%97%B6%E9%97%B4%E5%92%8C%E6%97%A5%E6%9C%9F/"/>
    <id>http://www.dashen.tech/2022/01/08/Rust时间和日期/</id>
    <published>2022-01-08T14:56:26.000Z</published>
    <updated>2022-01-08T16:14:45.603Z</updated>
    
    <content type="html"><![CDATA[<p>以下内容来自<a href></a></p><p>Rust的官方库*std::time::*不太好用，<a href="https://crates.io/crates/chrono" target="_blank" rel="noopener">chrono库</a>用的更多</p><p>Cargo.toml:</p><figure class="highlight toml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[package]</span></span><br><span class="line"><span class="attr">name</span> = <span class="string">"time-ex"</span></span><br><span class="line"><span class="attr">version</span> = <span class="string">"0.1.0"</span></span><br><span class="line"><span class="attr">edition</span> = <span class="string">"2018"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html</span></span><br><span class="line"></span><br><span class="line"><span class="section">[dependencies]</span></span><br><span class="line"><span class="attr">chrono</span> = <span class="string">"0.4.19"</span></span><br></pre></td></tr></table></figure><br><p><a href="http://main.rs" target="_blank" rel="noopener">main.rs</a>:</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">use</span> chrono::prelude::*;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">fn</span> <span class="title">main</span></span>() &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获取当前零时区的时间，以及当前所在时区的时间</span></span><br><span class="line">    <span class="keyword">let</span> utc: DateTime&lt;Utc&gt; = Utc::now();</span><br><span class="line">    <span class="built_in">println!</span>(<span class="string">"零时区的时间为：&#123;:?&#125;"</span>, utc);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> local: DateTime&lt;Local&gt; = Local::now();</span><br><span class="line">    <span class="built_in">println!</span>(<span class="string">"当前时区的时间为： &#123;:?&#125;"</span>, local)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="/2022/01/08/Rust时间和日期/0.png" width="80%" height="100%"><br><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">use</span> chrono::prelude::*;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">fn</span> <span class="title">main</span></span>() &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//格式化string</span></span><br><span class="line">    <span class="keyword">let</span> date_time = Utc.ymd(<span class="number">1993</span>, <span class="number">2</span>, <span class="number">17</span>).and_hms(<span class="number">5</span>, <span class="number">10</span>, <span class="number">23</span>);</span><br><span class="line">    <span class="built_in">println!</span>(<span class="string">"&#123;&#125;"</span>, date_time.format(<span class="string">"%Y-%m-%d %H:%M:%S"</span>).to_string());</span><br><span class="line">    <span class="built_in">println!</span>(<span class="string">"&#123;&#125;"</span>, date_time.format(<span class="string">"%Y年%m月%d日: %H小时%M分钟%S秒"</span>).to_string());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="/2022/01/08/Rust时间和日期/1.png" width="80%" height="100%"><br><p>从某个日期开始的下一个周五是几号？</p><p>如从2022.01.09号开始，下一个周五是几号(2022.01.14号)</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;以下内容来自&lt;a href&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Rust的官方库*std::time::*不太好用，&lt;a href=&quot;https://crates.io/crates/chrono&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;chrono库&lt;/a&gt;用
      
    
    </summary>
    
    
      <category term="Rust" scheme="http://www.dashen.tech/tags/Rust/"/>
    
  </entry>
  
  <entry>
    <title>Go使用通配符删除文件</title>
    <link href="http://www.dashen.tech/2022/01/05/Go%E4%BD%BF%E7%94%A8%E9%80%9A%E9%85%8D%E7%AC%A6%E5%88%A0%E9%99%A4%E6%96%87%E4%BB%B6/"/>
    <id>http://www.dashen.tech/2022/01/05/Go使用通配符删除文件/</id>
    <published>2022-01-05T08:27:42.000Z</published>
    <updated>2022-01-05T12:25:24.330Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.coder.work/article/198997" target="_blank" rel="noopener">https://www.coder.work/article/198997</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://www.coder.work/article/198997&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.coder.work/article/198997&lt;/a&gt;&lt;/p&gt;

      
    
    </summary>
    
    
      <category term="Todo" scheme="http://www.dashen.tech/tags/Todo/"/>
    
  </entry>
  
  <entry>
    <title>OBS推流</title>
    <link href="http://www.dashen.tech/2021/12/14/OBS%E6%8E%A8%E6%B5%81/"/>
    <id>http://www.dashen.tech/2021/12/14/OBS推流/</id>
    <published>2021-12-14T12:00:58.000Z</published>
    <updated>2021-12-25T14:31:18.590Z</updated>
    
    <content type="html"><![CDATA[<p>为深入理解rtmp，推流，互动直播，录制，特意尝试了下使用OBS来推流到(各大)直播平台。。</p><br><p>以斗鱼为例，申请<a href="https://mp.douyu.com/live/main" target="_blank" rel="noopener">成为主播后</a>，会得到<strong>rtmp地址</strong>和<strong>直播码</strong>，</p><img src="/2021/12/14/OBS推流/0.png" width="80%" height="50%"><p>下载OBS</p><img src="/2021/12/14/OBS推流/1.png" width="80%" height="50%"><p>右下角，设置-推流-自定义:</p><img src="/2021/12/14/OBS推流/2.png" width="80%" height="50%"><br><p>接着设置来源,即想要在直播平台上显示的东西</p><p>点击加号，选择 <em>显示器采集</em>， （之前版本坑叫<em>显示捕获</em>），这样整个屏幕都会被推到直播平台</p><p>点击右侧<em>开始推流</em>，就会将选定的”来源“（此处即显示器屏幕），推流到斗鱼的房间</p><img src="/2021/12/14/OBS推流/3.png" width="80%" height="50%"><p>使用<em>窗口采集</em>，则只会推这个窗口的信息</p><img src="/2021/12/14/OBS推流/4.png" width="80%" height="50%"><br><img src="/2021/12/14/OBS推流/5.jpeg" width="80%" height="50%"><br><p>还需要再解决下窗口显示不全的问题</p><br><p>更多参考：</p><p><a href="https://www.bilibili.com/read/cv5380911/" target="_blank" rel="noopener">OBS推流直播快速上手教程</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;为深入理解rtmp，推流，互动直播，录制，特意尝试了下使用OBS来推流到(各大)直播平台。。&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;以斗鱼为例，申请&lt;a href=&quot;https://mp.douyu.com/live/main&quot; target=&quot;_blank&quot; rel=&quot;noopener
      
    
    </summary>
    
    
      <category term="Tools" scheme="http://www.dashen.tech/tags/Tools/"/>
    
  </entry>
  
  <entry>
    <title>二进制分析工具</title>
    <link href="http://www.dashen.tech/2021/12/14/%E4%BA%8C%E8%BF%9B%E5%88%B6%E5%88%86%E6%9E%90%E5%B7%A5%E5%85%B7/"/>
    <id>http://www.dashen.tech/2021/12/14/二进制分析工具/</id>
    <published>2021-12-14T01:58:49.000Z</published>
    <updated>2021-12-14T02:00:12.920Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.google.com.hk/search?q=ar%2C+nm%2C+objdump&amp;oq=ar%2C+nm%2C+objdump&amp;aqs=chrome..69i57j69i61.160j0j1&amp;sourceid=chrome&amp;ie=UTF-8" target="_blank" rel="noopener">https://www.google.com.hk/search?q=ar%2C+nm%2C+objdump&amp;oq=ar%2C+nm%2C+objdump&amp;aqs=chrome..69i57j69i61.160j0j1&amp;sourceid=chrome&amp;ie=UTF-8</a></p><p><a href="https://blog.csdn.net/princess9/article/details/6785108" target="_blank" rel="noopener">https://blog.csdn.net/princess9/article/details/6785108</a></p><p>nm</p><p><a href="https://blog.csdn.net/K346K346/article/details/89088542" target="_blank" rel="noopener">https://blog.csdn.net/K346K346/article/details/89088542</a></p><p><a href="https://www.jianshu.com/p/a86bd1b8e4a5" target="_blank" rel="noopener">https://www.jianshu.com/p/a86bd1b8e4a5</a></p><p><a href="https://linuxtools-rst.readthedocs.io/zh_CN/latest/tool/nm.html" target="_blank" rel="noopener">https://linuxtools-rst.readthedocs.io/zh_CN/latest/tool/nm.html</a></p><hr><p><a href="https://blog.csdn.net/weixin_36094492/article/details/112657647" target="_blank" rel="noopener">https://blog.csdn.net/weixin_36094492/article/details/112657647</a></p><p><a href="https://www.google.com.hk/search?q=go+tool+nm%E5%91%BD%E4%BB%A4&amp;oq=go+tool+nm%E5%91%BD%E4%BB%A4&amp;aqs=chrome..69i57j69i64l2j69i60.187j0j4&amp;sourceid=chrome&amp;ie=UTF-8" target="_blank" rel="noopener">https://www.google.com.hk/search?q=go+tool+nm命令&amp;oq=go+tool+nm命令&amp;aqs=chrome..69i57j69i64l2j69i60.187j0j4&amp;sourceid=chrome&amp;ie=UTF-8</a></p><p><a href="https://segmentfault.com/a/1190000040043628" target="_blank" rel="noopener">https://segmentfault.com/a/1190000040043628</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://www.google.com.hk/search?q=ar%2C+nm%2C+objdump&amp;amp;oq=ar%2C+nm%2C+objdump&amp;amp;aqs=chrome..69i57j69i61.160j0j1&amp;amp;source
      
    
    </summary>
    
    
      <category term="Tools" scheme="http://www.dashen.tech/tags/Tools/"/>
    
  </entry>
  
  <entry>
    <title>协程调度顺序</title>
    <link href="http://www.dashen.tech/2021/12/12/%E5%8D%8F%E7%A8%8B%E8%B0%83%E5%BA%A6%E9%A1%BA%E5%BA%8F/"/>
    <id>http://www.dashen.tech/2021/12/12/协程调度顺序/</id>
    <published>2021-12-12T15:37:29.000Z</published>
    <updated>2021-12-17T15:20:14.439Z</updated>
    
    <content type="html"><![CDATA[<p>本文是对<a href="https://www.bilibili.com/video/BV19b4y1i74w" target="_blank" rel="noopener">卷卷面试题</a>的学习与记录</p><br><p>go 关键字会被编译器转化为对<em>runtime.newproc</em>函数的调用。该函数的主要逻辑：先切换到系统栈，然后调用<em>newproc1</em>函数，分配并初始化一个新的g，再通过<em>runqput</em>把新的g添加到当前P的本地runq中。</p><img src="/2021/12/12/协程调度顺序/0.png" width="100%" height="100%"><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"runtime"</span></span><br><span class="line"><span class="string">"sync"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 任一时刻，只允许一个M执行Go代码； 就像单核CPU上的多线程那样</span></span><br><span class="line">runtime.GOMAXPROCS(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> wg sync.WaitGroup</span><br><span class="line"></span><br><span class="line">wg.Add(<span class="number">3</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">go</span> <span class="function"><span class="keyword">func</span><span class="params">(n <span class="keyword">int</span>)</span></span> &#123;</span><br><span class="line"><span class="built_in">println</span>(n)</span><br><span class="line">wg.Done()</span><br><span class="line">&#125;(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">go</span> <span class="function"><span class="keyword">func</span><span class="params">(n <span class="keyword">int</span>)</span></span> &#123;</span><br><span class="line"><span class="built_in">println</span>(n)</span><br><span class="line">wg.Done()</span><br><span class="line">&#125;(<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">go</span> <span class="function"><span class="keyword">func</span><span class="params">(n <span class="keyword">int</span>)</span></span> &#123;</span><br><span class="line"><span class="built_in">println</span>(n)</span><br><span class="line">wg.Done()</span><br><span class="line">&#125;(<span class="number">3</span>)</span><br><span class="line"></span><br><span class="line">wg.Wait()</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出:</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">2</span></span><br></pre></td></tr></table></figure><br><p>之所以如此，是因为 P不仅有一个本地runq，还有一个runnext字段，用来保存下次要运行的g。 newproc1中调用runqput时会用到这个runnext</p><img src="/2021/12/12/协程调度顺序/1.png" width="100%" height="100%"><img src="/2021/12/12/协程调度顺序/2.png" width="100%" height="100%"><img src="/2021/12/12/协程调度顺序/3.png" width="100%" height="100%"><img src="/2021/12/12/协程调度顺序/4.png" width="100%" height="100%"><img src="/2021/12/12/协程调度顺序/5.png" width="100%" height="100%"><p>调度goroutine执行时，通过runqget获取待执行的g。runqget也会对runnext特殊处理：<strong>优先调度runnext这里记录的g，再按顺序调度本地runq中记录的g</strong></p><p>所以是3-1-2</p><img src="/2021/12/12/协程调度顺序/6.png" width="100%" height="100%"><br><p>如果创建更多的goroutine，结果也如此吗？</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"runtime"</span></span><br><span class="line"><span class="string">"sync"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 任一时刻，只允许一个M执行Go代码； 就像单核CPU上的多线程那样</span></span><br><span class="line">runtime.GOMAXPROCS(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> wg sync.WaitGroup</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i := <span class="number">1</span>; i &lt;= <span class="number">280</span>; i++ &#123;</span><br><span class="line">wg.Add(<span class="number">1</span>)</span><br><span class="line"><span class="keyword">go</span> <span class="function"><span class="keyword">func</span><span class="params">(n <span class="keyword">int</span>)</span></span> &#123;</span><br><span class="line"><span class="built_in">println</span>(n)</span><br><span class="line">wg.Done()</span><br><span class="line">&#125;(i)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">wg.Wait()</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>4个goroutine输出的是 4,1,2,3<br>5个goroutine输出的是 5,1,2,3,4</p><p>直到257个gorutine，都是这样的规律, 即  <em>N,1,2,…,(N-1)</em></p><br><p>当多于257个goutine时，</p><img src="/2021/12/12/协程调度顺序/7.png" width="100%" height="100%"><p>第258号goutine会把257号挤走，但本地runq已满，所以第257号goroutine，会和本地runq中前一半的g，一同进入到全局runq中，</p><img src="/2021/12/12/协程调度顺序/8.png" width="100%" height="100%"><p>先从本地runq中获取待执行的g，没有的话，再从全局runq获取。还没有的话，就去其他P那里steal一部分(一半)，</p><img src="/2021/12/12/协程调度顺序/9.png" width="100%" height="100%"><p>所以可能会以为，先执行258号，而后是129，130…,256。最后才是全局队列中的1，2，…128，257</p><p>实际并非如此…</p><p>实际执行会发现，第1号，2号goroutine，会穿插在258，129，…258之间被执行。</p><p>这个问题与runq的排队逻辑无关，属于调度逻辑的范畴</p><img src="/2021/12/12/协程调度顺序/10.png" width="100%" height="100%"><p>runtime.schedule，每隔61个schedtick，就会优先尝试从<strong>全局runq</strong>中获取goroutine，这是为了避免在每个P的本地runq都很繁忙时，全局runq中的goroutine迟迟得不到调度的情况。</p><br><ul><li><p>本地runq的排队逻辑(runnext)</p></li><li><p>全局runq，每隔61个schedtick会优先从全局runq中拿一个goroutine去执行</p></li></ul><br><p>更多阅读</p><p><a href="https://qcrao.com/2021/05/24/confusing-goroutine-running-orders/" target="_blank" rel="noopener">迷惑的 goroutine 执行顺序</a></p><p><a href="https://qcrao.com/2021/05/20/go-schedule-under-the-hood/" target="_blank" rel="noopener">Go 调度的本质</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;本文是对&lt;a href=&quot;https://www.bilibili.com/video/BV19b4y1i74w&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;卷卷面试题&lt;/a&gt;的学习与记录&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;go 关键字会被编译器转化为对&lt;em&gt;r
      
    
    </summary>
    
      <category term="runtime" scheme="http://www.dashen.tech/categories/runtime/"/>
    
    
      <category term="Go" scheme="http://www.dashen.tech/tags/Go/"/>
    
  </entry>
  
  <entry>
    <title>Go内存管理之内存分配</title>
    <link href="http://www.dashen.tech/2021/11/24/Go%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86%E4%B9%8B%E5%86%85%E5%AD%98%E5%88%86%E9%85%8D/"/>
    <id>http://www.dashen.tech/2021/11/24/Go内存管理之内存分配/</id>
    <published>2021-11-24T12:01:36.000Z</published>
    <updated>2021-12-20T01:54:44.447Z</updated>
    
    <content type="html"><![CDATA[<p>相关博文 <a href="https://dashen.tech/2019/06/28/golang%E4%B8%ADslice%E6%89%A9%E5%AE%B9%E4%B8%80%E5%AE%9A%E6%98%AFdouble%E6%88%961-25%E5%80%8D%E5%90%97/" target="_blank" rel="noopener">golang中slice扩容一定是double或1.25倍吗</a></p><p><a href="https://dashen.tech/2014/04/01/Go%E5%86%85%E5%AD%98%E8%AF%A6%E8%A7%A3/" target="_blank" rel="noopener">Go内存详解</a></p><br><p>较好博文：</p><p><a href="https://zhuanlan.zhihu.com/p/59125443" target="_blank" rel="noopener">图解Go语言内存分配</a></p><p><a href="https://zhuanlan.zhihu.com/p/266496735" target="_blank" rel="noopener">Go内存管理三部曲[1]- 内存分配</a></p><p><a href="https://draveness.me/golang/docs/part3-runtime/ch07-memory/golang-memory-allocator/" target="_blank" rel="noopener">https://draveness.me/golang/docs/part3-runtime/ch07-memory/golang-memory-allocator/</a></p><p><a href="https://blog.csdn.net/qq_31720329/article/details/121772876" target="_blank" rel="noopener">go 内存管理 设计与实现 图解</a></p><p>本篇是对以上内容的学习与记录：</p><blockquote><p>Go运行时的内存分配算法主要源自 Google 为 C 语言开发的TCMalloc算法，全称Thread-Caching Malloc。核心思想就是把内存分为多级管理，从而降低锁的粒度。它将可用的堆内存采用二级分配的方式进行管理：每个线程都会自行维护一个独立的内存池，进行内存分配时优先从该内存池中分配，当内存池不足时才会向全局内存池申请，以避免不同线程对全局内存池的频繁竞争。</p></blockquote><br><p>Go在程序启动时 先向操作系统申请一块内存，并将其分配到三个区域：</p><ul><li><p>arena区域(512GB，64位操作系统)，即堆区，Go动态分配的内存都在该区域，其将内存分割成8KB大小的页，一些页组合起来称为mspan</p></li><li><p>bitmap区域(16GB)，标识arena区域哪些地址保存了对象，并用4bit标志位表示对象是否包含指针、GC标记信息。bitmap中一个byte大小的内存对应arena区域中4个指针大小（指针大小为 8B ）的内存，所以bitmap区域的大小是512GB/(4*8B)=16GB</p></li><li><p>spans区域(512MB)：存放mspan（arena分割的页组合起来的内存管理基本单元）的指针，每个指针对应一页，所以spans区域的大小就是512GB/8KB*8B=512MB。(除以8KB是计算arena区域的页数，而最后乘以8是计算spans区域所有指针的大小。创建mspan的时候，按页填充对应的spans区域，在回收object时，根据地址很容易就能找到它所属的mspan)</p></li></ul><p>mspan 是Go内存管理的基本单元，mspan是由一片连续的8KB的页组成的大块内存。这里的页和操作系统本身的页不是一回事，它一般是操作系统页大小的几倍。即mspan是一个包含起始地址、mspan规格、页的数量等内容的<strong>双端链表</strong></p><p>细微的对象切割</p><p>极致的多级缓存</p><p>精准的位图管理</p><p>更多：</p><p><a href="https://github.com/coldnight/go-memory-allocator-visual-guide" target="_blank" rel="noopener">Go 内存分配器可视化指南</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;相关博文 &lt;a href=&quot;https://dashen.tech/2019/06/28/golang%E4%B8%ADslice%E6%89%A9%E5%AE%B9%E4%B8%80%E5%AE%9A%E6%98%AFdouble%E6%88%961-25%E5%80%8
      
    
    </summary>
    
      <category term="runtime" scheme="http://www.dashen.tech/categories/runtime/"/>
    
    
      <category term="Todo" scheme="http://www.dashen.tech/tags/Todo/"/>
    
  </entry>
  
  <entry>
    <title>Go内存优化</title>
    <link href="http://www.dashen.tech/2021/11/17/Go%E5%86%85%E5%AD%98%E4%BC%98%E5%8C%96/"/>
    <id>http://www.dashen.tech/2021/11/17/Go内存优化/</id>
    <published>2021-11-17T05:47:32.000Z</published>
    <updated>2021-11-17T05:47:48.761Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://wudaijun.com/2019/09/go-performance-optimization/" target="_blank" rel="noopener">https://wudaijun.com/2019/09/go-performance-optimization/</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://wudaijun.com/2019/09/go-performance-optimization/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://wudaijun.com/2019/09/go-perfor
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>关于零号协程</title>
    <link href="http://www.dashen.tech/2021/11/09/%E5%85%B3%E4%BA%8E%E9%9B%B6%E5%8F%B7%E5%8D%8F%E7%A8%8B/"/>
    <id>http://www.dashen.tech/2021/11/09/关于零号协程/</id>
    <published>2021-11-09T05:45:55.000Z</published>
    <updated>2021-12-17T15:11:02.906Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://mp.weixin.qq.com/s?__biz=Mzg2NTA2NzQ2Nw==&amp;mid=2247483873&amp;idx=1&amp;sn=724560a071a4ca6b620837d05e29a54e" target="_blank" rel="noopener">https://mp.weixin.qq.com/s?__biz=Mzg2NTA2NzQ2Nw==&amp;mid=2247483873&amp;idx=1&amp;sn=724560a071a4ca6b620837d05e29a54e</a></p><p><a href="https://zhuanlan.zhihu.com/p/344842279" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/344842279</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=Mzg2NTA2NzQ2Nw==&amp;amp;mid=2247483873&amp;amp;idx=1&amp;amp;sn=724560a071a4ca6b620837d05e29a54e&quot; target=&quot;
      
    
    </summary>
    
      <category term="runtime" scheme="http://www.dashen.tech/categories/runtime/"/>
    
    
      <category term="Todo" scheme="http://www.dashen.tech/tags/Todo/"/>
    
      <category term="Go" scheme="http://www.dashen.tech/tags/Go/"/>
    
  </entry>
  
  <entry>
    <title>统计某月有几篇博文</title>
    <link href="http://www.dashen.tech/2021/10/11/%E7%BB%9F%E8%AE%A1%E6%9F%90%E6%9C%88%E6%9C%89%E5%87%A0%E7%AF%87%E5%8D%9A%E6%96%87/"/>
    <id>http://www.dashen.tech/2021/10/11/统计某月有几篇博文/</id>
    <published>2021-10-11T15:24:31.000Z</published>
    <updated>2021-12-13T15:51:16.904Z</updated>
    
    <content type="html"><![CDATA[<p>有插件可以将各个月份博文的数量统计并附在其后，不太喜欢这种展示方式(认为展示出的参差数据，破坏和谐一致的感觉)，自己动手，只统计不展示</p><img src="/2021/10/11/统计某月有几篇博文/0.png" width="50%" height="100%"><br><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line"><span class="string">"io/ioutil"</span></span><br><span class="line"><span class="string">"regexp"</span></span><br><span class="line"><span class="string">"strings"</span></span><br><span class="line"><span class="string">"time"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> m = <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">int</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"></span><br><span class="line">basePath := <span class="string">"/Users/fliter/blog/source/_posts/"</span></span><br><span class="line"><span class="comment">// 获取某目录下的所有文件; 也可以用 files, _ := filepath.Glob("*")</span></span><br><span class="line">files, _ := ioutil.ReadDir(basePath)</span><br><span class="line"><span class="keyword">for</span> _, f := <span class="keyword">range</span> files &#123;</span><br><span class="line"><span class="keyword">if</span> strings.Contains(f.Name(), <span class="string">".md"</span>) &#123;</span><br><span class="line"><span class="comment">//fmt.Println(f.Name())</span></span><br><span class="line">deal(basePath + f.Name())</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">fmt.Println(m)</span><br><span class="line"></span><br><span class="line">fmt.Println()</span><br><span class="line">fmt.Println(<span class="string">"下面迭代时会乱序："</span>)</span><br><span class="line">fmt.Println()</span><br><span class="line"><span class="keyword">for</span> k, v := <span class="keyword">range</span> m &#123;</span><br><span class="line">fmt.Printf(<span class="string">"%s月有%d篇博文\n"</span>, k, v)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">deal</span><span class="params">(filePath <span class="keyword">string</span>)</span></span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//fmt.Println(filePath) // /Users/fliter/blog/source/_posts/16777619与FNV哈希算法.md</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// read the whole file at once</span></span><br><span class="line">b, err := ioutil.ReadFile(filePath)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="built_in">panic</span>(err)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">s := <span class="keyword">string</span>(b)</span><br><span class="line"><span class="comment">//fmt.Println(s)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 进行正则匹配</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// go - 如何获得两个已知单词之间的字符串？ https://www.coder.work/article/212986</span></span><br><span class="line"><span class="comment">// 或者可以预先将换行符及空格等全部清除掉</span></span><br><span class="line">re := regexp.MustCompile(<span class="string">`date: (.*?)</span></span><br><span class="line"><span class="string">tags:`</span>)</span><br><span class="line"></span><br><span class="line">date := re.FindStringSubmatch(s)[<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment">//fmt.Println(date) // 2021-08-09 22:30:47</span></span><br><span class="line">t, _ := time.Parse(<span class="string">"2006-01-02 15:04:05"</span>, date)</span><br><span class="line">month := time.Unix(t.Unix(), <span class="number">0</span>).Format(<span class="string">"2006-01"</span>)</span><br><span class="line"><span class="comment">//fmt.Println(month) // 2021-08</span></span><br><span class="line"></span><br><span class="line">m[month] = m[month] + <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//os.Exit(11)</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="/2021/10/11/统计某月有几篇博文/1.png" width="50%" height="100%"><p>执行结果如下：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">map</span>[<span class="number">1093</span><span class="number">-02</span>:<span class="number">23</span> <span class="number">2010</span><span class="number">-03</span>:<span class="number">9</span> <span class="number">2011</span><span class="number">-04</span>:<span class="number">1</span> <span class="number">2012</span><span class="number">-01</span>:<span class="number">2</span> <span class="number">2012</span><span class="number">-11</span>:<span class="number">8</span> <span class="number">2012</span><span class="number">-12</span>:<span class="number">2</span> <span class="number">2013</span><span class="number">-04</span>:<span class="number">5</span> <span class="number">2014</span><span class="number">-03</span>:<span class="number">4</span> <span class="number">2014</span><span class="number">-04</span>:<span class="number">1</span> <span class="number">2015</span><span class="number">-01</span>:<span class="number">2</span> <span class="number">2015</span><span class="number">-02</span>:<span class="number">3</span> <span class="number">2015</span><span class="number">-03</span>:<span class="number">143</span> <span class="number">2015</span><span class="number">-04</span>:<span class="number">3</span> <span class="number">2015</span><span class="number">-05</span>:<span class="number">1</span> <span class="number">2015</span><span class="number">-06</span>:<span class="number">3</span> <span class="number">2015</span><span class="number">-07</span>:<span class="number">2</span> <span class="number">2015</span><span class="number">-08</span>:<span class="number">6</span> <span class="number">2015</span><span class="number">-09</span>:<span class="number">7</span> <span class="number">2015</span><span class="number">-10</span>:<span class="number">7</span> <span class="number">2015</span><span class="number">-11</span>:<span class="number">25</span> <span class="number">2015</span><span class="number">-12</span>:<span class="number">5</span> <span class="number">2016</span><span class="number">-02</span>:<span class="number">3</span> <span class="number">2016</span><span class="number">-03</span>:<span class="number">8</span> <span class="number">2016</span><span class="number">-04</span>:<span class="number">9</span> <span class="number">2016</span><span class="number">-05</span>:<span class="number">4</span> <span class="number">2016</span><span class="number">-06</span>:<span class="number">8</span> <span class="number">2016</span><span class="number">-07</span>:<span class="number">5</span> <span class="number">2016</span><span class="number">-08</span>:<span class="number">4</span> <span class="number">2016</span><span class="number">-09</span>:<span class="number">2</span> <span class="number">2016</span><span class="number">-10</span>:<span class="number">11</span> <span class="number">2016</span><span class="number">-11</span>:<span class="number">6</span> <span class="number">2016</span><span class="number">-12</span>:<span class="number">4</span> <span class="number">2017</span><span class="number">-01</span>:<span class="number">3</span> <span class="number">2017</span><span class="number">-02</span>:<span class="number">9</span> <span class="number">2017</span><span class="number">-03</span>:<span class="number">9</span> <span class="number">2017</span><span class="number">-04</span>:<span class="number">7</span> <span class="number">2017</span><span class="number">-05</span>:<span class="number">10</span> <span class="number">2017</span><span class="number">-06</span>:<span class="number">8</span> <span class="number">2017</span><span class="number">-07</span>:<span class="number">11</span> <span class="number">2017</span><span class="number">-08</span>:<span class="number">6</span> <span class="number">2017</span><span class="number">-09</span>:<span class="number">6</span> <span class="number">2017</span><span class="number">-10</span>:<span class="number">9</span> <span class="number">2017</span><span class="number">-11</span>:<span class="number">4</span> <span class="number">2017</span><span class="number">-12</span>:<span class="number">5</span> <span class="number">2018</span><span class="number">-01</span>:<span class="number">6</span> <span class="number">2018</span><span class="number">-02</span>:<span class="number">7</span> <span class="number">2018</span><span class="number">-03</span>:<span class="number">8</span> <span class="number">2018</span><span class="number">-04</span>:<span class="number">8</span> <span class="number">2018</span><span class="number">-05</span>:<span class="number">8</span> <span class="number">2018</span><span class="number">-06</span>:<span class="number">6</span> <span class="number">2018</span><span class="number">-07</span>:<span class="number">11</span> <span class="number">2018</span><span class="number">-08</span>:<span class="number">10</span> <span class="number">2018</span><span class="number">-09</span>:<span class="number">6</span> <span class="number">2018</span><span class="number">-10</span>:<span class="number">9</span> <span class="number">2018</span><span class="number">-11</span>:<span class="number">6</span> <span class="number">2018</span><span class="number">-12</span>:<span class="number">5</span> <span class="number">2019</span><span class="number">-01</span>:<span class="number">7</span> <span class="number">2019</span><span class="number">-02</span>:<span class="number">10</span> <span class="number">2019</span><span class="number">-03</span>:<span class="number">11</span> <span class="number">2019</span><span class="number">-04</span>:<span class="number">12</span> <span class="number">2019</span><span class="number">-05</span>:<span class="number">8</span> <span class="number">2019</span><span class="number">-06</span>:<span class="number">9</span> <span class="number">2019</span><span class="number">-07</span>:<span class="number">14</span> <span class="number">2019</span><span class="number">-08</span>:<span class="number">9</span> <span class="number">2019</span><span class="number">-09</span>:<span class="number">8</span> <span class="number">2019</span><span class="number">-10</span>:<span class="number">12</span> <span class="number">2019</span><span class="number">-11</span>:<span class="number">9</span> <span class="number">2019</span><span class="number">-12</span>:<span class="number">8</span> <span class="number">2020</span><span class="number">-01</span>:<span class="number">9</span> <span class="number">2020</span><span class="number">-02</span>:<span class="number">9</span> <span class="number">2020</span><span class="number">-03</span>:<span class="number">11</span> <span class="number">2020</span><span class="number">-04</span>:<span class="number">10</span> <span class="number">2020</span><span class="number">-05</span>:<span class="number">13</span> <span class="number">2020</span><span class="number">-06</span>:<span class="number">14</span> <span class="number">2020</span><span class="number">-07</span>:<span class="number">10</span> <span class="number">2020</span><span class="number">-08</span>:<span class="number">7</span> <span class="number">2020</span><span class="number">-09</span>:<span class="number">10</span> <span class="number">2020</span><span class="number">-10</span>:<span class="number">10</span> <span class="number">2020</span><span class="number">-11</span>:<span class="number">11</span> <span class="number">2020</span><span class="number">-12</span>:<span class="number">6</span> <span class="number">2021</span><span class="number">-01</span>:<span class="number">10</span> <span class="number">2021</span><span class="number">-02</span>:<span class="number">8</span> <span class="number">2021</span><span class="number">-03</span>:<span class="number">7</span> <span class="number">2021</span><span class="number">-04</span>:<span class="number">8</span> <span class="number">2021</span><span class="number">-05</span>:<span class="number">8</span> <span class="number">2021</span><span class="number">-06</span>:<span class="number">8</span> <span class="number">2021</span><span class="number">-07</span>:<span class="number">8</span> <span class="number">2021</span><span class="number">-08</span>:<span class="number">4</span> <span class="number">2021</span><span class="number">-09</span>:<span class="number">17</span> <span class="number">2021</span><span class="number">-10</span>:<span class="number">1</span> <span class="number">2021</span><span class="number">-11</span>:<span class="number">3</span> <span class="number">2021</span><span class="number">-12</span>:<span class="number">2</span>]</span><br><span class="line"></span><br><span class="line">下面迭代时会乱序：</span><br><span class="line"></span><br><span class="line"><span class="number">2015</span><span class="number">-09</span>月有<span class="number">7</span>篇博文</span><br><span class="line"><span class="number">2017</span><span class="number">-11</span>月有<span class="number">4</span>篇博文</span><br><span class="line"><span class="number">2015</span><span class="number">-06</span>月有<span class="number">3</span>篇博文</span><br><span class="line"><span class="number">2020</span><span class="number">-04</span>月有<span class="number">10</span>篇博文</span><br><span class="line"><span class="number">2018</span><span class="number">-11</span>月有<span class="number">6</span>篇博文</span><br><span class="line"><span class="number">2020</span><span class="number">-03</span>月有<span class="number">11</span>篇博文</span><br><span class="line"><span class="number">2019</span><span class="number">-04</span>月有<span class="number">12</span>篇博文</span><br><span class="line"><span class="number">2019</span><span class="number">-03</span>月有<span class="number">11</span>篇博文</span><br><span class="line"><span class="number">2017</span><span class="number">-09</span>月有<span class="number">6</span>篇博文</span><br><span class="line"><span class="number">2015</span><span class="number">-01</span>月有<span class="number">2</span>篇博文</span><br><span class="line"><span class="number">2015</span><span class="number">-08</span>月有<span class="number">6</span>篇博文</span><br><span class="line"><span class="number">2021</span><span class="number">-02</span>月有<span class="number">8</span>篇博文</span><br><span class="line"><span class="number">2021</span><span class="number">-12</span>月有<span class="number">2</span>篇博文</span><br><span class="line"><span class="number">2016</span><span class="number">-04</span>月有<span class="number">9</span>篇博文</span><br><span class="line"><span class="number">2017</span><span class="number">-04</span>月有<span class="number">7</span>篇博文</span><br><span class="line"><span class="number">1093</span><span class="number">-02</span>月有<span class="number">23</span>篇博文</span><br><span class="line"><span class="number">2013</span><span class="number">-04</span>月有<span class="number">5</span>篇博文</span><br><span class="line"><span class="number">2019</span><span class="number">-08</span>月有<span class="number">9</span>篇博文</span><br><span class="line"><span class="number">2018</span><span class="number">-03</span>月有<span class="number">8</span>篇博文</span><br><span class="line"><span class="number">2020</span><span class="number">-08</span>月有<span class="number">7</span>篇博文</span><br><span class="line"><span class="number">2017</span><span class="number">-01</span>月有<span class="number">3</span>篇博文</span><br><span class="line"><span class="number">2015</span><span class="number">-02</span>月有<span class="number">3</span>篇博文</span><br><span class="line"><span class="number">2020</span><span class="number">-11</span>月有<span class="number">11</span>篇博文</span><br><span class="line"><span class="number">2019</span><span class="number">-11</span>月有<span class="number">9</span>篇博文</span><br><span class="line"><span class="number">2016</span><span class="number">-11</span>月有<span class="number">6</span>篇博文</span><br><span class="line"><span class="number">2011</span><span class="number">-04</span>月有<span class="number">1</span>篇博文</span><br><span class="line"><span class="number">2021</span><span class="number">-11</span>月有<span class="number">3</span>篇博文</span><br><span class="line"><span class="number">2018</span><span class="number">-06</span>月有<span class="number">6</span>篇博文</span><br><span class="line"><span class="number">2016</span><span class="number">-09</span>月有<span class="number">2</span>篇博文</span><br><span class="line"><span class="number">2015</span><span class="number">-11</span>月有<span class="number">25</span>篇博文</span><br><span class="line"><span class="number">2021</span><span class="number">-10</span>月有<span class="number">1</span>篇博文</span><br><span class="line"><span class="number">2019</span><span class="number">-12</span>月有<span class="number">8</span>篇博文</span><br><span class="line"><span class="number">2017</span><span class="number">-07</span>月有<span class="number">11</span>篇博文</span><br><span class="line"><span class="number">2017</span><span class="number">-12</span>月有<span class="number">5</span>篇博文</span><br><span class="line"><span class="number">2020</span><span class="number">-06</span>月有<span class="number">14</span>篇博文</span><br><span class="line"><span class="number">2020</span><span class="number">-12</span>月有<span class="number">6</span>篇博文</span><br><span class="line"><span class="number">2019</span><span class="number">-06</span>月有<span class="number">9</span>篇博文</span><br><span class="line"><span class="number">2021</span><span class="number">-07</span>月有<span class="number">8</span>篇博文</span><br><span class="line"><span class="number">2016</span><span class="number">-03</span>月有<span class="number">8</span>篇博文</span><br><span class="line"><span class="number">2015</span><span class="number">-05</span>月有<span class="number">1</span>篇博文</span><br><span class="line"><span class="number">2021</span><span class="number">-04</span>月有<span class="number">8</span>篇博文</span><br><span class="line"><span class="number">2018</span><span class="number">-09</span>月有<span class="number">6</span>篇博文</span><br><span class="line"><span class="number">2016</span><span class="number">-07</span>月有<span class="number">5</span>篇博文</span><br><span class="line"><span class="number">2021</span><span class="number">-08</span>月有<span class="number">4</span>篇博文</span><br><span class="line"><span class="number">2021</span><span class="number">-06</span>月有<span class="number">8</span>篇博文</span><br><span class="line"><span class="number">2021</span><span class="number">-09</span>月有<span class="number">17</span>篇博文</span><br><span class="line"><span class="number">2012</span><span class="number">-12</span>月有<span class="number">2</span>篇博文</span><br><span class="line"><span class="number">2018</span><span class="number">-07</span>月有<span class="number">11</span>篇博文</span><br><span class="line"><span class="number">2018</span><span class="number">-04</span>月有<span class="number">8</span>篇博文</span><br><span class="line"><span class="number">2020</span><span class="number">-02</span>月有<span class="number">9</span>篇博文</span><br><span class="line"><span class="number">2019</span><span class="number">-02</span>月有<span class="number">10</span>篇博文</span><br><span class="line"><span class="number">2010</span><span class="number">-03</span>月有<span class="number">9</span>篇博文</span><br><span class="line"><span class="number">2020</span><span class="number">-05</span>月有<span class="number">13</span>篇博文</span><br><span class="line"><span class="number">2015</span><span class="number">-07</span>月有<span class="number">2</span>篇博文</span><br><span class="line"><span class="number">2012</span><span class="number">-01</span>月有<span class="number">2</span>篇博文</span><br><span class="line"><span class="number">2019</span><span class="number">-05</span>月有<span class="number">8</span>篇博文</span><br><span class="line"><span class="number">2016</span><span class="number">-02</span>月有<span class="number">3</span>篇博文</span><br><span class="line"><span class="number">2017</span><span class="number">-10</span>月有<span class="number">9</span>篇博文</span><br><span class="line"><span class="number">2021</span><span class="number">-03</span>月有<span class="number">7</span>篇博文</span><br><span class="line"><span class="number">2018</span><span class="number">-08</span>月有<span class="number">10</span>篇博文</span><br><span class="line"><span class="number">2016</span><span class="number">-08</span>月有<span class="number">4</span>篇博文</span><br><span class="line"><span class="number">2019</span><span class="number">-10</span>月有<span class="number">12</span>篇博文</span><br><span class="line"><span class="number">2020</span><span class="number">-10</span>月有<span class="number">10</span>篇博文</span><br><span class="line"><span class="number">2016</span><span class="number">-05</span>月有<span class="number">4</span>篇博文</span><br><span class="line"><span class="number">2017</span><span class="number">-08</span>月有<span class="number">6</span>篇博文</span><br><span class="line"><span class="number">2018</span><span class="number">-05</span>月有<span class="number">8</span>篇博文</span><br><span class="line"><span class="number">2015</span><span class="number">-03</span>月有<span class="number">143</span>篇博文</span><br><span class="line"><span class="number">2015</span><span class="number">-04</span>月有<span class="number">3</span>篇博文</span><br><span class="line"><span class="number">2018</span><span class="number">-10</span>月有<span class="number">9</span>篇博文</span><br><span class="line"><span class="number">2021</span><span class="number">-01</span>月有<span class="number">10</span>篇博文</span><br><span class="line"><span class="number">2018</span><span class="number">-01</span>月有<span class="number">6</span>篇博文</span><br><span class="line"><span class="number">2014</span><span class="number">-03</span>月有<span class="number">4</span>篇博文</span><br><span class="line"><span class="number">2020</span><span class="number">-07</span>月有<span class="number">10</span>篇博文</span><br><span class="line"><span class="number">2017</span><span class="number">-03</span>月有<span class="number">9</span>篇博文</span><br><span class="line"><span class="number">2019</span><span class="number">-07</span>月有<span class="number">14</span>篇博文</span><br><span class="line"><span class="number">2014</span><span class="number">-04</span>月有<span class="number">1</span>篇博文</span><br><span class="line"><span class="number">2017</span><span class="number">-06</span>月有<span class="number">8</span>篇博文</span><br><span class="line"><span class="number">2016</span><span class="number">-06</span>月有<span class="number">8</span>篇博文</span><br><span class="line"><span class="number">2017</span><span class="number">-05</span>月有<span class="number">10</span>篇博文</span><br><span class="line"><span class="number">2017</span><span class="number">-02</span>月有<span class="number">9</span>篇博文</span><br><span class="line"><span class="number">2015</span><span class="number">-10</span>月有<span class="number">7</span>篇博文</span><br><span class="line"><span class="number">2012</span><span class="number">-11</span>月有<span class="number">8</span>篇博文</span><br><span class="line"><span class="number">2021</span><span class="number">-05</span>月有<span class="number">8</span>篇博文</span><br><span class="line"><span class="number">2018</span><span class="number">-02</span>月有<span class="number">7</span>篇博文</span><br><span class="line"><span class="number">2016</span><span class="number">-10</span>月有<span class="number">11</span>篇博文</span><br><span class="line"><span class="number">2020</span><span class="number">-01</span>月有<span class="number">9</span>篇博文</span><br><span class="line"><span class="number">2019</span><span class="number">-09</span>月有<span class="number">8</span>篇博文</span><br><span class="line"><span class="number">2015</span><span class="number">-12</span>月有<span class="number">5</span>篇博文</span><br><span class="line"><span class="number">2019</span><span class="number">-01</span>月有<span class="number">7</span>篇博文</span><br><span class="line"><span class="number">2020</span><span class="number">-09</span>月有<span class="number">10</span>篇博文</span><br><span class="line"><span class="number">2016</span><span class="number">-12</span>月有<span class="number">4</span>篇博文</span><br><span class="line"><span class="number">2018</span><span class="number">-12</span>月有<span class="number">5</span>篇博文</span><br></pre></td></tr></table></figure><br><p>几处可改进点：</p><ul><li><p>并发执行deal(),同时需使用sync.map</p></li><li><p>将乱序的map改成按序输出</p></li><li><p>可以将路径及处理的文件类型(此处为*.md),以及匹配的文本(此处为date:和tag:之间的内容), 做成参数形式传递,从而使该方法更通用</p></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;有插件可以将各个月份博文的数量统计并附在其后，不太喜欢这种展示方式(认为展示出的参差数据，破坏和谐一致的感觉)，自己动手，只统计不展示&lt;/p&gt;
&lt;img src=&quot;/2021/10/11/统计某月有几篇博文/0.png&quot; width=&quot;50%&quot; height=&quot;100%&quot;&gt;
      
    
    </summary>
    
    
      <category term="Tools" scheme="http://www.dashen.tech/tags/Tools/"/>
    
  </entry>
  
  <entry>
    <title>调试Go源代码</title>
    <link href="http://www.dashen.tech/2021/10/11/%E8%B0%83%E8%AF%95Go%E6%BA%90%E4%BB%A3%E7%A0%81/"/>
    <id>http://www.dashen.tech/2021/10/11/调试Go源代码/</id>
    <published>2021-10-11T13:16:38.000Z</published>
    <updated>2021-12-21T13:28:25.731Z</updated>
    
    <content type="html"><![CDATA[<h3 id="编译源码方式安装新版本Go"><a class="header-anchor" href="#编译源码方式安装新版本Go">¶</a>编译源码方式安装新版本Go</h3><br><p>通过源代码编译安装*<a href="https://github.com/golang/go/tags" target="_blank" rel="noopener">go1.18beta1</a>*,</p><img src="/2021/10/11/调试Go源代码/0.png" width="90%" height="50%"><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/golang/go.git</span><br><span class="line"><span class="built_in">cd</span> go</span><br><span class="line">git reset --hard becaeea</span><br><span class="line"><span class="built_in">cd</span> src</span><br><span class="line">vim all.bash</span><br></pre></td></tr></table></figure><p><strong>all.bash</strong>内容如下：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/usr/bin/env bash</span></span><br><span class="line"><span class="comment"># Copyright 2009 The Go Authors. All rights reserved.</span></span><br><span class="line"><span class="comment"># Use of this source code is governed by a BSD-style</span></span><br><span class="line"><span class="comment"># license that can be found in the LICENSE file.</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">set</span> -e</span><br><span class="line"><span class="keyword">if</span> [ ! -f make.bash ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">'all.bash must be run from $GOROOT/src'</span> 1&gt;&amp;2</span><br><span class="line"><span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">OLDPATH=<span class="string">"<span class="variable">$PATH</span>"</span></span><br><span class="line">. ./make.bash <span class="string">"<span class="variable">$@</span>"</span> --no-banner</span><br><span class="line">bash run.bash --no-rebuild</span><br><span class="line">PATH=<span class="string">"<span class="variable">$OLDPATH</span>"</span></span><br><span class="line"><span class="variable">$GOTOOLDIR</span>/dist banner  <span class="comment"># print build info</span></span><br></pre></td></tr></table></figure><p>注释掉<code>bash run.bash --no-rebuild</code>这一行，这样每次构建时, 不需要重新跑一遍测试脚本，每次都要大概耗时5分钟</p><img src="/2021/10/11/调试Go源代码/3.png" width="90%" height="50%"><br><p>将<strong>make.bash</strong>的<code>./cmd/dist/dist bootstrap -a $vflag $GO_DISTFLAGS &quot;$@&quot;</code>替换为<code>./cmd/dist/dist bootstrap -a -v</code>, 默认 <code>-v</code> 标记不打开, 这样就看不到进度和错误提示</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">% vim make.bash</span><br><span class="line"><span class="comment"># 未替换之前的行</span></span><br><span class="line"><span class="comment"># ./cmd/dist/dist bootstrap -a $vflag $GO_DISTFLAGS "$@"</span></span><br><span class="line"><span class="comment"># 替换之后的行, -a 表示所有模块, -v 会输出任何错误提示</span></span><br><span class="line">./cmd/dist/dist bootstrap -a -v</span><br><span class="line"><span class="comment"># 如果只更改了某个包下的文件, 并不需要重新构建整个项目, 可只指定某一个目录</span></span><br><span class="line"><span class="comment"># ./cmd/dist/dist install  -v "runtime"</span></span><br></pre></td></tr></table></figure><br><details><summary><b>执行编译脚本 `./all.bash`:</b></summary><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br><span class="line">665</span><br><span class="line">666</span><br><span class="line">667</span><br><span class="line">668</span><br><span class="line">669</span><br><span class="line">670</span><br><span class="line">671</span><br><span class="line">672</span><br><span class="line">673</span><br><span class="line">674</span><br><span class="line">675</span><br><span class="line">676</span><br><span class="line">677</span><br><span class="line">678</span><br><span class="line">679</span><br><span class="line">680</span><br><span class="line">681</span><br><span class="line">682</span><br><span class="line">683</span><br><span class="line">684</span><br><span class="line">685</span><br><span class="line">686</span><br><span class="line">687</span><br><span class="line">688</span><br><span class="line">689</span><br><span class="line">690</span><br><span class="line">691</span><br><span class="line">692</span><br><span class="line">693</span><br><span class="line">694</span><br><span class="line">695</span><br><span class="line">696</span><br><span class="line">697</span><br><span class="line">698</span><br><span class="line">699</span><br><span class="line">700</span><br><span class="line">701</span><br><span class="line">702</span><br><span class="line">703</span><br><span class="line">704</span><br><span class="line">705</span><br><span class="line">706</span><br><span class="line">707</span><br><span class="line">708</span><br><span class="line">709</span><br><span class="line">710</span><br><span class="line">711</span><br><span class="line">712</span><br><span class="line">713</span><br><span class="line">714</span><br><span class="line">715</span><br><span class="line">716</span><br><span class="line">717</span><br><span class="line">718</span><br><span class="line">719</span><br><span class="line">720</span><br><span class="line">721</span><br><span class="line">722</span><br><span class="line">723</span><br><span class="line">724</span><br><span class="line">725</span><br><span class="line">726</span><br><span class="line">727</span><br><span class="line">728</span><br><span class="line">729</span><br><span class="line">730</span><br><span class="line">731</span><br><span class="line">732</span><br><span class="line">733</span><br><span class="line">734</span><br><span class="line">735</span><br><span class="line">736</span><br><span class="line">737</span><br><span class="line">738</span><br><span class="line">739</span><br><span class="line">740</span><br><span class="line">741</span><br><span class="line">742</span><br><span class="line">743</span><br><span class="line">744</span><br><span class="line">745</span><br><span class="line">746</span><br><span class="line">747</span><br><span class="line">748</span><br><span class="line">749</span><br><span class="line">750</span><br><span class="line">751</span><br><span class="line">752</span><br><span class="line">753</span><br><span class="line">754</span><br><span class="line">755</span><br><span class="line">756</span><br><span class="line">757</span><br><span class="line">758</span><br><span class="line">759</span><br><span class="line">760</span><br><span class="line">761</span><br><span class="line">762</span><br><span class="line">763</span><br><span class="line">764</span><br><span class="line">765</span><br><span class="line">766</span><br><span class="line">767</span><br><span class="line">768</span><br><span class="line">769</span><br><span class="line">770</span><br><span class="line">771</span><br><span class="line">772</span><br><span class="line">773</span><br><span class="line">774</span><br><span class="line">775</span><br><span class="line">776</span><br><span class="line">777</span><br><span class="line">778</span><br><span class="line">779</span><br><span class="line">780</span><br><span class="line">781</span><br><span class="line">782</span><br><span class="line">783</span><br><span class="line">784</span><br><span class="line">785</span><br><span class="line">786</span><br><span class="line">787</span><br><span class="line">788</span><br><span class="line">789</span><br><span class="line">790</span><br><span class="line">791</span><br><span class="line">792</span><br><span class="line">793</span><br><span class="line">794</span><br><span class="line">795</span><br><span class="line">796</span><br><span class="line">797</span><br><span class="line">798</span><br><span class="line">799</span><br><span class="line">800</span><br><span class="line">801</span><br><span class="line">802</span><br><span class="line">803</span><br><span class="line">804</span><br><span class="line">805</span><br><span class="line">806</span><br><span class="line">807</span><br><span class="line">808</span><br><span class="line">809</span><br><span class="line">810</span><br><span class="line">811</span><br><span class="line">812</span><br><span class="line">813</span><br><span class="line">814</span><br><span class="line">815</span><br><span class="line">816</span><br><span class="line">817</span><br><span class="line">818</span><br><span class="line">819</span><br><span class="line">820</span><br><span class="line">821</span><br><span class="line">822</span><br><span class="line">823</span><br><span class="line">824</span><br><span class="line">825</span><br><span class="line">826</span><br><span class="line">827</span><br><span class="line">828</span><br><span class="line">829</span><br><span class="line">830</span><br><span class="line">831</span><br><span class="line">832</span><br><span class="line">833</span><br><span class="line">834</span><br><span class="line">835</span><br><span class="line">836</span><br><span class="line">837</span><br><span class="line">838</span><br><span class="line">839</span><br><span class="line">840</span><br><span class="line">841</span><br><span class="line">842</span><br><span class="line">843</span><br><span class="line">844</span><br><span class="line">845</span><br><span class="line">846</span><br><span class="line">847</span><br><span class="line">848</span><br><span class="line">849</span><br><span class="line">850</span><br><span class="line">851</span><br><span class="line">852</span><br><span class="line">853</span><br><span class="line">854</span><br><span class="line">855</span><br><span class="line">856</span><br><span class="line">857</span><br><span class="line">858</span><br><span class="line">859</span><br><span class="line">860</span><br><span class="line">861</span><br><span class="line">862</span><br><span class="line">863</span><br><span class="line">864</span><br><span class="line">865</span><br><span class="line">866</span><br><span class="line">867</span><br><span class="line">868</span><br><span class="line">869</span><br><span class="line">870</span><br><span class="line">871</span><br><span class="line">872</span><br><span class="line">873</span><br><span class="line">874</span><br><span class="line">875</span><br><span class="line">876</span><br><span class="line">877</span><br><span class="line">878</span><br><span class="line">879</span><br><span class="line">880</span><br><span class="line">881</span><br><span class="line">882</span><br><span class="line">883</span><br><span class="line">884</span><br><span class="line">885</span><br><span class="line">886</span><br><span class="line">887</span><br><span class="line">888</span><br><span class="line">889</span><br><span class="line">890</span><br><span class="line">891</span><br><span class="line">892</span><br><span class="line">893</span><br><span class="line">894</span><br><span class="line">895</span><br><span class="line">896</span><br><span class="line">897</span><br><span class="line">898</span><br><span class="line">899</span><br><span class="line">900</span><br><span class="line">901</span><br><span class="line">902</span><br><span class="line">903</span><br><span class="line">904</span><br><span class="line">905</span><br><span class="line">906</span><br><span class="line">907</span><br><span class="line">908</span><br><span class="line">909</span><br><span class="line">910</span><br><span class="line">911</span><br><span class="line">912</span><br><span class="line">913</span><br><span class="line">914</span><br><span class="line">915</span><br><span class="line">916</span><br><span class="line">917</span><br><span class="line">918</span><br><span class="line">919</span><br><span class="line">920</span><br><span class="line">921</span><br><span class="line">922</span><br><span class="line">923</span><br><span class="line">924</span><br><span class="line">925</span><br><span class="line">926</span><br><span class="line">927</span><br><span class="line">928</span><br><span class="line">929</span><br><span class="line">930</span><br><span class="line">931</span><br><span class="line">932</span><br><span class="line">933</span><br><span class="line">934</span><br><span class="line">935</span><br><span class="line">936</span><br><span class="line">937</span><br><span class="line">938</span><br><span class="line">939</span><br><span class="line">940</span><br><span class="line">941</span><br><span class="line">942</span><br><span class="line">943</span><br><span class="line">944</span><br><span class="line">945</span><br><span class="line">946</span><br><span class="line">947</span><br><span class="line">948</span><br></pre></td><td class="code"><pre><span class="line">Building Go cmd/dist using /usr/local/<span class="keyword">go</span>. (go1<span class="number">.16</span><span class="number">.7</span> darwin/arm64)</span><br><span class="line">Building Go toolchain1 using /usr/local/<span class="keyword">go</span>.</span><br><span class="line">math/bits</span><br><span class="line">bootstrap/internal/goexperiment</span><br><span class="line">bootstrap/math/bits</span><br><span class="line">bootstrap/internal/unsafeheader</span><br><span class="line">bootstrap/internal/goversion</span><br><span class="line">bootstrap/internal/race</span><br><span class="line">bootstrap/cmd/compile/internal/test</span><br><span class="line">bootstrap/sort</span><br><span class="line">math</span><br><span class="line">bootstrap/container/heap</span><br><span class="line">math/rand</span><br><span class="line">bootstrap/strconv</span><br><span class="line">strconv</span><br><span class="line">io/ioutil</span><br><span class="line">os/exec</span><br><span class="line">reflect</span><br><span class="line">crypto</span><br><span class="line">regexp/syntax</span><br><span class="line">regexp</span><br><span class="line">encoding/binary</span><br><span class="line">fmt</span><br><span class="line">bootstrap/cmd/internal/sys</span><br><span class="line">encoding/base64</span><br><span class="line">crypto/sha256</span><br><span class="line">crypto/sha1</span><br><span class="line">crypto/md5</span><br><span class="line">flag</span><br><span class="line">bootstrap/cmd/internal/edit</span><br><span class="line">bootstrap/cmd/internal/pkgpath</span><br><span class="line">bootstrap/cmd/internal/bio</span><br><span class="line">bootstrap/cmd/internal/src</span><br><span class="line">bootstrap/internal/buildcfg</span><br><span class="line">bootstrap/debug/dwarf</span><br><span class="line">bootstrap/compress/flate</span><br><span class="line"><span class="keyword">go</span>/token</span><br><span class="line">encoding/json</span><br><span class="line">bootstrap/math/big</span><br><span class="line">net/url</span><br><span class="line">bootstrap/cmd/internal/quoted</span><br><span class="line">bootstrap/cmd/internal/objabi</span><br><span class="line">bootstrap/cmd/internal/gcprog</span><br><span class="line"><span class="keyword">go</span>/scanner</span><br><span class="line">bootstrap/cmd/compile/internal/syntax</span><br><span class="line">bootstrap/cmd/internal/dwarf</span><br><span class="line">text/template/parse</span><br><span class="line">bootstrap/cmd/internal/goobj</span><br><span class="line">bootstrap/cmd/asm/internal/flags</span><br><span class="line">bootstrap/compress/zlib</span><br><span class="line">bootstrap/cmd/asm/internal/lex</span><br><span class="line">bootstrap/cmd/internal/obj</span><br><span class="line"><span class="keyword">go</span>/ast</span><br><span class="line">bootstrap/cmd/internal/archive</span><br><span class="line">compress/flate</span><br><span class="line">bootstrap/debug/elf</span><br><span class="line">bootstrap/debug/macho</span><br><span class="line">bootstrap/debug/pe</span><br><span class="line">bootstrap/internal/xcoff</span><br><span class="line">compress/gzip</span><br><span class="line">bootstrap/cmd/internal/codesign</span><br><span class="line"><span class="keyword">go</span>/parser</span><br><span class="line"><span class="keyword">go</span>/printer</span><br><span class="line"><span class="keyword">go</span>/doc</span><br><span class="line">bootstrap/cmd/internal/obj/arm</span><br><span class="line">bootstrap/cmd/internal/obj/arm64</span><br><span class="line">bootstrap/cmd/internal/obj/mips</span><br><span class="line">bootstrap/cmd/internal/obj/ppc64</span><br><span class="line">bootstrap/cmd/internal/obj/riscv</span><br><span class="line">bootstrap/cmd/internal/obj/s390x</span><br><span class="line">bootstrap/cmd/internal/obj/wasm</span><br><span class="line">bootstrap/cmd/internal/obj/x86</span><br><span class="line">bootstrap/cmd/cgo</span><br><span class="line">bootstrap/cmd/compile/internal/base</span><br><span class="line">bootstrap/<span class="keyword">go</span>/constant</span><br><span class="line">bootstrap/cmd/compile/internal/logopt</span><br><span class="line">bootstrap/cmd/compile/internal/bitvec</span><br><span class="line"><span class="keyword">go</span>/build</span><br><span class="line">runtime/pprof</span><br><span class="line">bootstrap/cmd/link/internal/sym</span><br><span class="line">bootstrap/cmd/compile/internal/types</span><br><span class="line">bootstrap/cmd/compile/internal/types2</span><br><span class="line">bootstrap/cmd/link/internal/loader</span><br><span class="line">bootstrap/cmd/link/internal/dwtest</span><br><span class="line">bootstrap/cmd/link/internal/benchmark</span><br><span class="line">bootstrap/cmd/asm/internal/arch</span><br><span class="line">bootstrap/cmd/compile/internal/typebits</span><br><span class="line">bootstrap/cmd/compile/internal/ir</span><br><span class="line">bootstrap/cmd/link/internal/loadelf</span><br><span class="line">bootstrap/cmd/link/internal/loadpe</span><br><span class="line">bootstrap/cmd/link/internal/loadmacho</span><br><span class="line">bootstrap/cmd/asm/internal/asm</span><br><span class="line">bootstrap/cmd/link/internal/loadxcoff</span><br><span class="line">bootstrap/cmd/link/internal/ld</span><br><span class="line">bootstrap/cmd/asm</span><br><span class="line">bootstrap/cmd/compile/internal/objw</span><br><span class="line">bootstrap/cmd/compile/internal/abi</span><br><span class="line">bootstrap/cmd/compile/internal/deadcode</span><br><span class="line">bootstrap/cmd/compile/internal/typecheck</span><br><span class="line">bootstrap/cmd/compile/internal/importer</span><br><span class="line">bootstrap/cmd/link/internal/amd64</span><br><span class="line">bootstrap/cmd/link/internal/arm</span><br><span class="line">bootstrap/cmd/link/internal/arm64</span><br><span class="line">bootstrap/cmd/link/internal/riscv64</span><br><span class="line">bootstrap/cmd/link/internal/mips</span><br><span class="line">bootstrap/cmd/link/internal/ppc64</span><br><span class="line">bootstrap/cmd/link/internal/mips64</span><br><span class="line">bootstrap/cmd/link/internal/s390x</span><br><span class="line">bootstrap/cmd/link/internal/wasm</span><br><span class="line">bootstrap/cmd/link/internal/x86</span><br><span class="line">bootstrap/cmd/link</span><br><span class="line">bootstrap/cmd/compile/internal/inline</span><br><span class="line">bootstrap/cmd/compile/internal/devirtualize</span><br><span class="line">bootstrap/cmd/compile/internal/staticdata</span><br><span class="line">bootstrap/cmd/compile/internal/escape</span><br><span class="line">bootstrap/cmd/compile/internal/reflectdata</span><br><span class="line">bootstrap/cmd/compile/internal/staticinit</span><br><span class="line">bootstrap/cmd/compile/internal/ssa</span><br><span class="line">bootstrap/cmd/compile/internal/pkginit</span><br><span class="line">bootstrap/cmd/compile/internal/liveness</span><br><span class="line">bootstrap/cmd/compile/internal/ssagen</span><br><span class="line">bootstrap/cmd/compile/internal/amd64</span><br><span class="line">bootstrap/cmd/compile/internal/mips</span><br><span class="line">bootstrap/cmd/compile/internal/ppc64</span><br><span class="line">bootstrap/cmd/compile/internal/arm64</span><br><span class="line">bootstrap/cmd/compile/internal/dwarfgen</span><br><span class="line">bootstrap/cmd/compile/internal/arm</span><br><span class="line">bootstrap/cmd/compile/internal/mips64</span><br><span class="line">bootstrap/cmd/compile/internal/walk</span><br><span class="line">bootstrap/cmd/compile/internal/riscv64</span><br><span class="line">bootstrap/cmd/compile/internal/s390x</span><br><span class="line">bootstrap/cmd/compile/internal/wasm</span><br><span class="line">bootstrap/cmd/compile/internal/x86</span><br><span class="line">bootstrap/cmd/compile/internal/noder</span><br><span class="line">bootstrap/cmd/compile/internal/gc</span><br><span class="line">bootstrap/cmd/compile</span><br><span class="line"></span><br><span class="line">Building Go bootstrap cmd/<span class="keyword">go</span> (go_bootstrap) using Go toolchain1.</span><br><span class="line">runtime</span><br><span class="line">internal/abi</span><br><span class="line">runtime/internal/math</span><br><span class="line">runtime/internal/sys</span><br><span class="line">internal/goexperiment</span><br><span class="line">internal/cpu</span><br><span class="line">runtime/internal/atomic</span><br><span class="line">internal/goos</span><br><span class="line">internal/goarch</span><br><span class="line">internal/bytealg</span><br><span class="line">cmd/<span class="keyword">go</span></span><br><span class="line">cmd/<span class="keyword">go</span>/internal/run</span><br><span class="line">cmd/<span class="keyword">go</span>/internal/fmtcmd</span><br><span class="line">cmd/<span class="keyword">go</span>/internal/tool</span><br><span class="line">cmd/<span class="keyword">go</span>/internal/trace</span><br><span class="line">cmd/<span class="keyword">go</span>/internal/modget</span><br><span class="line">cmd/<span class="keyword">go</span>/internal/envcmd</span><br><span class="line">cmd/<span class="keyword">go</span>/internal/clean</span><br><span class="line">cmd/<span class="keyword">go</span>/internal/version</span><br><span class="line">errors</span><br><span class="line">cmd/<span class="keyword">go</span>/internal/help</span><br><span class="line">cmd/<span class="keyword">go</span>/internal/lockedfile</span><br><span class="line">os/signal</span><br><span class="line">cmd/internal/traceviewer</span><br><span class="line">cmd/<span class="keyword">go</span>/internal/str</span><br><span class="line">debug/buildinfo</span><br><span class="line">unicode</span><br><span class="line">regexp</span><br><span class="line">cmd/<span class="keyword">go</span>/internal/workcmd</span><br><span class="line">internal/reflectlite</span><br><span class="line">fmt</span><br><span class="line">cmd/<span class="keyword">go</span>/internal/lockedfile/internal/filelock</span><br><span class="line">internal/xcoff</span><br><span class="line">context</span><br><span class="line">syscall</span><br><span class="line">internal/unsafeheader</span><br><span class="line">debug/dwarf</span><br><span class="line">cmd/<span class="keyword">go</span>/internal/test</span><br><span class="line">cmd/<span class="keyword">go</span>/internal/bug</span><br><span class="line">strings</span><br><span class="line">cmd/<span class="keyword">go</span>/internal/get</span><br><span class="line">bufio</span><br><span class="line">io/fs</span><br><span class="line">cmd/<span class="keyword">go</span>/internal/search</span><br><span class="line">os</span><br><span class="line">cmd/<span class="keyword">go</span>/internal/work</span><br><span class="line">strconv</span><br><span class="line">cmd/<span class="keyword">go</span>/internal/modfetch</span><br><span class="line">log</span><br><span class="line">cmd/<span class="keyword">go</span>/internal/generate</span><br><span class="line">internal/execabs</span><br><span class="line">cmd/<span class="keyword">go</span>/internal/modload</span><br><span class="line">sync/atomic</span><br><span class="line">cmd/vendor/golang.org/x/mod/modfile</span><br><span class="line">cmd/<span class="keyword">go</span>/internal/modcmd</span><br><span class="line">cmd/<span class="keyword">go</span>/internal/cache</span><br><span class="line">text/template</span><br><span class="line">cmd/<span class="keyword">go</span>/internal/doc</span><br><span class="line">cmd/<span class="keyword">go</span>/internal/list</span><br><span class="line">encoding/json</span><br><span class="line">unicode/utf8</span><br><span class="line">io</span><br><span class="line"><span class="keyword">go</span>/build</span><br><span class="line">cmd/internal/quoted</span><br><span class="line">cmd/<span class="keyword">go</span>/internal/fsys</span><br><span class="line">sort</span><br><span class="line">bytes</span><br><span class="line">sync</span><br><span class="line">path/filepath</span><br><span class="line">cmd/<span class="keyword">go</span>/internal/web</span><br><span class="line">net/url</span><br><span class="line">reflect</span><br><span class="line">cmd/<span class="keyword">go</span>/internal/fix</span><br><span class="line">internal/buildcfg</span><br><span class="line">cmd/<span class="keyword">go</span>/internal/vcs</span><br><span class="line">debug/elf</span><br><span class="line">os/exec</span><br><span class="line">cmd/<span class="keyword">go</span>/internal/base</span><br><span class="line">debug/macho</span><br><span class="line">runtime/debug</span><br><span class="line">encoding/hex</span><br><span class="line"><span class="keyword">go</span>/token</span><br><span class="line">debug/pe</span><br><span class="line"><span class="keyword">go</span>/parser</span><br><span class="line">crypto/sha256</span><br><span class="line">hash</span><br><span class="line">encoding/binary</span><br><span class="line">cmd/vendor/golang.org/x/mod/sumdb/dirhash</span><br><span class="line">encoding/base64</span><br><span class="line">archive/zip</span><br><span class="line">cmd/<span class="keyword">go</span>/internal/vet</span><br><span class="line">cmd/<span class="keyword">go</span>/internal/cfg</span><br><span class="line">cmd/<span class="keyword">go</span>/internal/load</span><br><span class="line">cmd/internal/sys</span><br><span class="line">cmd/<span class="keyword">go</span>/internal/cmdflag</span><br><span class="line">cmd/<span class="keyword">go</span>/internal/par</span><br><span class="line">math</span><br><span class="line">internal/cfg</span><br><span class="line">cmd/vendor/golang.org/x/mod/semver</span><br><span class="line">cmd/<span class="keyword">go</span>/internal/imports</span><br><span class="line">cmd/vendor/golang.org/x/mod/module</span><br><span class="line"><span class="keyword">go</span>/scanner</span><br><span class="line"><span class="keyword">go</span>/internal/typeparams</span><br><span class="line"><span class="keyword">go</span>/ast</span><br><span class="line"><span class="keyword">go</span>/build/constraint</span><br><span class="line">unicode/utf16</span><br><span class="line">internal/goversion</span><br><span class="line">encoding</span><br><span class="line"><span class="keyword">go</span>/doc</span><br><span class="line">internal/goroot</span><br><span class="line">io/ioutil</span><br><span class="line">internal/syscall/execenv</span><br><span class="line">flag</span><br><span class="line">path</span><br><span class="line">time</span><br><span class="line">internal/fmtsort</span><br><span class="line">encoding/xml</span><br><span class="line">internal/singleflight</span><br><span class="line">cmd/<span class="keyword">go</span>/internal/modinfo</span><br><span class="line">internal/lazytemplate</span><br><span class="line">math/bits</span><br><span class="line">crypto</span><br><span class="line">math/rand</span><br><span class="line">hash/crc32</span><br><span class="line">compress/flate</span><br><span class="line">cmd/vendor/golang.org/x/xerrors</span><br><span class="line">internal/lazyregexp</span><br><span class="line">internal/race</span><br><span class="line">internal/oserror</span><br><span class="line">cmd/vendor/golang.org/x/mod/internal/lazyregexp</span><br><span class="line">cmd/vendor/golang.org/x/xerrors/internal</span><br><span class="line">regexp/syntax</span><br><span class="line">text/template/parse</span><br><span class="line">internal/itoa</span><br><span class="line">cmd/internal/test2json</span><br><span class="line">compress/zlib</span><br><span class="line">hash/adler32</span><br><span class="line">cmd/internal/pkgpath</span><br><span class="line">crypto/sha1</span><br><span class="line">cmd/internal/buildid</span><br><span class="line">cmd/vendor/golang.org/x/mod/zip</span><br><span class="line">cmd/<span class="keyword">go</span>/internal/robustio</span><br><span class="line">cmd/<span class="keyword">go</span>/internal/modfetch/codehost</span><br><span class="line">cmd/internal/codesign</span><br><span class="line">cmd/<span class="keyword">go</span>/internal/mvs</span><br><span class="line">cmd/<span class="keyword">go</span>/internal/modconv</span><br><span class="line">container/heap</span><br><span class="line">cmd/internal/objabi</span><br><span class="line">internal/poll</span><br><span class="line">internal/testlog</span><br><span class="line">internal/syscall/unix</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Building Go toolchain2 using go_bootstrap and Go toolchain1.</span><br><span class="line">internal/race</span><br><span class="line">internal/unsafeheader</span><br><span class="line">internal/goarch</span><br><span class="line">internal/goexperiment</span><br><span class="line">internal/goos</span><br><span class="line">unicode</span><br><span class="line">internal/cpu</span><br><span class="line">sync/atomic</span><br><span class="line">unicode/utf8</span><br><span class="line">internal/abi</span><br><span class="line">runtime/internal/math</span><br><span class="line">internal/itoa</span><br><span class="line">runtime/internal/sys</span><br><span class="line">math/bits</span><br><span class="line">encoding</span><br><span class="line">unicode/utf16</span><br><span class="line">internal/goversion</span><br><span class="line">internal/bytealg</span><br><span class="line">runtime/internal/atomic</span><br><span class="line">math</span><br><span class="line">runtime</span><br><span class="line">internal/reflectlite</span><br><span class="line">sync</span><br><span class="line">internal/testlog</span><br><span class="line">math/rand</span><br><span class="line">errors</span><br><span class="line">sort</span><br><span class="line">internal/oserror</span><br><span class="line">path</span><br><span class="line">io</span><br><span class="line">strconv</span><br><span class="line">container/heap</span><br><span class="line">syscall</span><br><span class="line">bytes</span><br><span class="line">hash</span><br><span class="line">text/tabwriter</span><br><span class="line">strings</span><br><span class="line">hash/adler32</span><br><span class="line">hash/crc32</span><br><span class="line">reflect</span><br><span class="line">crypto</span><br><span class="line">bufio</span><br><span class="line"><span class="keyword">go</span>/build/constraint</span><br><span class="line">regexp/syntax</span><br><span class="line">html</span><br><span class="line">internal/syscall/execenv</span><br><span class="line">internal/syscall/unix</span><br><span class="line">time</span><br><span class="line">regexp</span><br><span class="line">context</span><br><span class="line">internal/poll</span><br><span class="line">io/fs</span><br><span class="line">os</span><br><span class="line">internal/fmtsort</span><br><span class="line">encoding/binary</span><br><span class="line">cmd/internal/sys</span><br><span class="line">crypto/sha1</span><br><span class="line">encoding/base64</span><br><span class="line">crypto/md5</span><br><span class="line">crypto/sha256</span><br><span class="line">io/ioutil</span><br><span class="line">fmt</span><br><span class="line">path/filepath</span><br><span class="line">internal/lazyregexp</span><br><span class="line">os/exec</span><br><span class="line">log</span><br><span class="line">internal/execabs</span><br><span class="line">flag</span><br><span class="line">internal/buildcfg</span><br><span class="line">cmd/internal/edit</span><br><span class="line">cmd/internal/src</span><br><span class="line">text/scanner</span><br><span class="line">debug/dwarf</span><br><span class="line">cmd/internal/pkgpath</span><br><span class="line">compress/flate</span><br><span class="line">cmd/internal/bio</span><br><span class="line"><span class="keyword">go</span>/token</span><br><span class="line">encoding/json</span><br><span class="line">runtime/debug</span><br><span class="line">math/big</span><br><span class="line">net/url</span><br><span class="line"><span class="keyword">go</span>/scanner</span><br><span class="line">cmd/internal/gcprog</span><br><span class="line">encoding/hex</span><br><span class="line"><span class="keyword">go</span>/ast</span><br><span class="line">cmd/compile/internal/syntax</span><br><span class="line">cmd/internal/objabi</span><br><span class="line">cmd/internal/quoted</span><br><span class="line">compress/zlib</span><br><span class="line">text/template/parse</span><br><span class="line">internal/goroot</span><br><span class="line">cmd/internal/dwarf</span><br><span class="line">cmd/internal/goobj</span><br><span class="line">cmd/asm/internal/flags</span><br><span class="line">cmd/internal/obj</span><br><span class="line">cmd/asm/internal/lex</span><br><span class="line"><span class="keyword">go</span>/internal/typeparams</span><br><span class="line"><span class="keyword">go</span>/parser</span><br><span class="line"><span class="keyword">go</span>/printer</span><br><span class="line">cmd/internal/archive</span><br><span class="line">compress/gzip</span><br><span class="line">runtime/pprof</span><br><span class="line">text/template</span><br><span class="line">debug/elf</span><br><span class="line">debug/macho</span><br><span class="line">debug/pe</span><br><span class="line">internal/xcoff</span><br><span class="line"><span class="keyword">go</span>/constant</span><br><span class="line">runtime/trace</span><br><span class="line">cmd/link/internal/benchmark</span><br><span class="line">cmd/internal/codesign</span><br><span class="line">cmd/cgo</span><br><span class="line">cmd/internal/obj/arm</span><br><span class="line">cmd/internal/obj/mips</span><br><span class="line">cmd/internal/obj/riscv</span><br><span class="line">cmd/internal/obj/ppc64</span><br><span class="line">cmd/internal/obj/arm64</span><br><span class="line">cmd/internal/obj/s390x</span><br><span class="line">cmd/internal/obj/wasm</span><br><span class="line">cmd/internal/obj/x86</span><br><span class="line">cmd/compile/internal/base</span><br><span class="line">cmd/compile/internal/logopt</span><br><span class="line">cmd/compile/internal/types2</span><br><span class="line">cmd/compile/internal/types</span><br><span class="line">cmd/compile/internal/bitvec</span><br><span class="line"><span class="keyword">go</span>/doc</span><br><span class="line"><span class="keyword">go</span>/build</span><br><span class="line">cmd/compile/internal/ir</span><br><span class="line">cmd/compile/internal/typebits</span><br><span class="line">cmd/link/internal/sym</span><br><span class="line">cmd/link/internal/loader</span><br><span class="line">cmd/asm/internal/arch</span><br><span class="line">cmd/link/internal/loadelf</span><br><span class="line">cmd/link/internal/loadpe</span><br><span class="line">cmd/link/internal/loadmacho</span><br><span class="line">cmd/link/internal/loadxcoff</span><br><span class="line">cmd/asm/internal/asm</span><br><span class="line">cmd/link/internal/ld</span><br><span class="line">cmd/asm</span><br><span class="line">cmd/compile/internal/objw</span><br><span class="line">cmd/compile/internal/deadcode</span><br><span class="line">cmd/compile/internal/abi</span><br><span class="line">cmd/compile/internal/typecheck</span><br><span class="line">cmd/compile/internal/importer</span><br><span class="line">cmd/link/internal/mips</span><br><span class="line">cmd/link/internal/mips64</span><br><span class="line">cmd/link/internal/arm</span><br><span class="line">cmd/link/internal/arm64</span><br><span class="line">cmd/link/internal/amd64</span><br><span class="line">cmd/link/internal/ppc64</span><br><span class="line">cmd/compile/internal/escape</span><br><span class="line">cmd/compile/internal/inline</span><br><span class="line">cmd/compile/internal/staticdata</span><br><span class="line">cmd/compile/internal/devirtualize</span><br><span class="line">cmd/link/internal/riscv64</span><br><span class="line">cmd/link/internal/s390x</span><br><span class="line">cmd/link/internal/wasm</span><br><span class="line">cmd/link/internal/x86</span><br><span class="line">cmd/link</span><br><span class="line">cmd/compile/internal/reflectdata</span><br><span class="line">cmd/compile/internal/staticinit</span><br><span class="line">cmd/compile/internal/ssa</span><br><span class="line">cmd/compile/internal/pkginit</span><br><span class="line">cmd/compile/internal/liveness</span><br><span class="line">cmd/compile/internal/ssagen</span><br><span class="line">cmd/compile/internal/mips</span><br><span class="line">cmd/compile/internal/amd64</span><br><span class="line">cmd/compile/internal/arm</span><br><span class="line">cmd/compile/internal/mips64</span><br><span class="line">cmd/compile/internal/arm64</span><br><span class="line">cmd/compile/internal/dwarfgen</span><br><span class="line">cmd/compile/internal/ppc64</span><br><span class="line">cmd/compile/internal/walk</span><br><span class="line">cmd/compile/internal/riscv64</span><br><span class="line">cmd/compile/internal/s390x</span><br><span class="line">cmd/compile/internal/wasm</span><br><span class="line">cmd/compile/internal/noder</span><br><span class="line">cmd/compile/internal/x86</span><br><span class="line">cmd/compile/internal/gc</span><br><span class="line">cmd/compile</span><br><span class="line"></span><br><span class="line">Building Go toolchain3 using go_bootstrap and Go toolchain2.</span><br><span class="line">internal/unsafeheader</span><br><span class="line">internal/goos</span><br><span class="line">internal/goarch</span><br><span class="line">unicode</span><br><span class="line">internal/race</span><br><span class="line">internal/goexperiment</span><br><span class="line">unicode/utf8</span><br><span class="line">internal/itoa</span><br><span class="line">runtime/internal/math</span><br><span class="line">runtime/internal/sys</span><br><span class="line">math/bits</span><br><span class="line">encoding</span><br><span class="line">unicode/utf16</span><br><span class="line">internal/goversion</span><br><span class="line">sync/atomic</span><br><span class="line">internal/abi</span><br><span class="line">internal/cpu</span><br><span class="line">math</span><br><span class="line">runtime/internal/atomic</span><br><span class="line">internal/bytealg</span><br><span class="line">runtime</span><br><span class="line">sync</span><br><span class="line">internal/reflectlite</span><br><span class="line">internal/testlog</span><br><span class="line">math/rand</span><br><span class="line">errors</span><br><span class="line">sort</span><br><span class="line">internal/oserror</span><br><span class="line">path</span><br><span class="line">io</span><br><span class="line">strconv</span><br><span class="line">container/heap</span><br><span class="line">syscall</span><br><span class="line">text/tabwriter</span><br><span class="line">bytes</span><br><span class="line">hash</span><br><span class="line">strings</span><br><span class="line">hash/adler32</span><br><span class="line">hash/crc32</span><br><span class="line">reflect</span><br><span class="line">crypto</span><br><span class="line"><span class="keyword">go</span>/build/constraint</span><br><span class="line">bufio</span><br><span class="line">html</span><br><span class="line">regexp/syntax</span><br><span class="line">internal/syscall/unix</span><br><span class="line">time</span><br><span class="line">internal/syscall/execenv</span><br><span class="line">regexp</span><br><span class="line">context</span><br><span class="line">internal/poll</span><br><span class="line">io/fs</span><br><span class="line">os</span><br><span class="line">internal/fmtsort</span><br><span class="line">encoding/binary</span><br><span class="line">internal/lazyregexp</span><br><span class="line">fmt</span><br><span class="line">path/filepath</span><br><span class="line">io/ioutil</span><br><span class="line">crypto/sha1</span><br><span class="line">crypto/md5</span><br><span class="line">encoding/base64</span><br><span class="line">cmd/internal/sys</span><br><span class="line">crypto/sha256</span><br><span class="line">os/exec</span><br><span class="line">log</span><br><span class="line">flag</span><br><span class="line">cmd/internal/src</span><br><span class="line">text/scanner</span><br><span class="line">cmd/internal/edit</span><br><span class="line">internal/buildcfg</span><br><span class="line">debug/dwarf</span><br><span class="line">internal/execabs</span><br><span class="line">compress/flate</span><br><span class="line"><span class="keyword">go</span>/token</span><br><span class="line">cmd/internal/bio</span><br><span class="line">encoding/json</span><br><span class="line">cmd/internal/pkgpath</span><br><span class="line">cmd/internal/objabi</span><br><span class="line">cmd/internal/quoted</span><br><span class="line"><span class="keyword">go</span>/scanner</span><br><span class="line">runtime/debug</span><br><span class="line">math/big</span><br><span class="line">cmd/internal/dwarf</span><br><span class="line">cmd/asm/internal/flags</span><br><span class="line">cmd/internal/goobj</span><br><span class="line">cmd/asm/internal/lex</span><br><span class="line"><span class="keyword">go</span>/ast</span><br><span class="line">net/url</span><br><span class="line">cmd/internal/gcprog</span><br><span class="line">encoding/hex</span><br><span class="line">cmd/compile/internal/syntax</span><br><span class="line">text/template/parse</span><br><span class="line">cmd/internal/obj</span><br><span class="line">compress/zlib</span><br><span class="line">internal/goroot</span><br><span class="line"><span class="keyword">go</span>/internal/typeparams</span><br><span class="line"><span class="keyword">go</span>/printer</span><br><span class="line"><span class="keyword">go</span>/parser</span><br><span class="line">debug/elf</span><br><span class="line">debug/macho</span><br><span class="line">debug/pe</span><br><span class="line">internal/xcoff</span><br><span class="line">cmd/internal/archive</span><br><span class="line">compress/gzip</span><br><span class="line">runtime/trace</span><br><span class="line">runtime/pprof</span><br><span class="line">cmd/internal/codesign</span><br><span class="line">text/template</span><br><span class="line">cmd/internal/obj/arm</span><br><span class="line">cmd/internal/obj/arm64</span><br><span class="line">cmd/internal/obj/mips</span><br><span class="line">cmd/internal/obj/ppc64</span><br><span class="line">cmd/internal/obj/riscv</span><br><span class="line">cmd/internal/obj/s390x</span><br><span class="line">cmd/internal/obj/wasm</span><br><span class="line">cmd/internal/obj/x86</span><br><span class="line">cmd/cgo</span><br><span class="line">cmd/compile/internal/base</span><br><span class="line"><span class="keyword">go</span>/constant</span><br><span class="line">cmd/compile/internal/logopt</span><br><span class="line"><span class="keyword">go</span>/doc</span><br><span class="line">cmd/compile/internal/types2</span><br><span class="line">cmd/compile/internal/types</span><br><span class="line">cmd/compile/internal/bitvec</span><br><span class="line"><span class="keyword">go</span>/build</span><br><span class="line">cmd/link/internal/benchmark</span><br><span class="line">cmd/link/internal/sym</span><br><span class="line">cmd/compile/internal/ir</span><br><span class="line">cmd/compile/internal/typebits</span><br><span class="line">cmd/link/internal/loader</span><br><span class="line">cmd/link/internal/loadelf</span><br><span class="line">cmd/link/internal/loadxcoff</span><br><span class="line">cmd/link/internal/loadpe</span><br><span class="line">cmd/link/internal/loadmacho</span><br><span class="line">cmd/asm/internal/arch</span><br><span class="line">cmd/link/internal/ld</span><br><span class="line">cmd/asm/internal/asm</span><br><span class="line">cmd/asm</span><br><span class="line">cmd/compile/internal/deadcode</span><br><span class="line">cmd/compile/internal/abi</span><br><span class="line">cmd/compile/internal/typecheck</span><br><span class="line">cmd/compile/internal/objw</span><br><span class="line">cmd/compile/internal/importer</span><br><span class="line">cmd/link/internal/arm64</span><br><span class="line">cmd/link/internal/arm</span><br><span class="line">cmd/link/internal/mips</span><br><span class="line">cmd/link/internal/mips64</span><br><span class="line">cmd/link/internal/amd64</span><br><span class="line">cmd/link/internal/ppc64</span><br><span class="line">cmd/link/internal/riscv64</span><br><span class="line">cmd/link/internal/s390x</span><br><span class="line">cmd/link/internal/wasm</span><br><span class="line">cmd/link/internal/x86</span><br><span class="line">cmd/link</span><br><span class="line">cmd/compile/internal/escape</span><br><span class="line">cmd/compile/internal/inline</span><br><span class="line">cmd/compile/internal/devirtualize</span><br><span class="line">cmd/compile/internal/staticdata</span><br><span class="line">cmd/compile/internal/reflectdata</span><br><span class="line">cmd/compile/internal/staticinit</span><br><span class="line">cmd/compile/internal/ssa</span><br><span class="line">cmd/compile/internal/pkginit</span><br><span class="line">cmd/compile/internal/liveness</span><br><span class="line">cmd/compile/internal/ssagen</span><br><span class="line">cmd/compile/internal/mips</span><br><span class="line">cmd/compile/internal/arm64</span><br><span class="line">cmd/compile/internal/dwarfgen</span><br><span class="line">cmd/compile/internal/arm</span><br><span class="line">cmd/compile/internal/amd64</span><br><span class="line">cmd/compile/internal/mips64</span><br><span class="line">cmd/compile/internal/ppc64</span><br><span class="line">cmd/compile/internal/walk</span><br><span class="line">cmd/compile/internal/riscv64</span><br><span class="line">cmd/compile/internal/s390x</span><br><span class="line">cmd/compile/internal/wasm</span><br><span class="line">cmd/compile/internal/x86</span><br><span class="line">cmd/compile/internal/noder</span><br><span class="line">cmd/compile/internal/gc</span><br><span class="line">cmd/compile</span><br><span class="line"></span><br><span class="line">Building packages and commands <span class="keyword">for</span> darwin/arm64.</span><br><span class="line">container/list</span><br><span class="line">constraints</span><br><span class="line">container/ring</span><br><span class="line">crypto/internal/subtle</span><br><span class="line">crypto/subtle</span><br><span class="line">vendor/golang.org/x/crypto/cryptobyte/asn1</span><br><span class="line">internal/nettrace</span><br><span class="line">compress/bzip2</span><br><span class="line">debug/plan9obj</span><br><span class="line">debug/gosym</span><br><span class="line">cmd/vendor/golang.org/x/arch/ppc64/ppc64asm</span><br><span class="line">cmd/vendor/golang.org/x/arch/arm/armasm</span><br><span class="line">cmd/vendor/golang.org/x/arch/arm64/arm64asm</span><br><span class="line">cmd/vendor/golang.org/x/arch/x86/x86asm</span><br><span class="line">archive/zip</span><br><span class="line">compress/lzw</span><br><span class="line">crypto/cipher</span><br><span class="line">crypto/internal/randutil</span><br><span class="line">crypto/dsa</span><br><span class="line">crypto/aes</span><br><span class="line">crypto/des</span><br><span class="line">crypto/sha512</span><br><span class="line">crypto/elliptic/internal/fiat</span><br><span class="line">encoding/asn1</span><br><span class="line">crypto/rand</span><br><span class="line">crypto/ed25519/internal/edwards25519/field</span><br><span class="line">crypto/hmac</span><br><span class="line">crypto/rc4</span><br><span class="line">vendor/golang.org/x/crypto/cryptobyte</span><br><span class="line">crypto/ed25519/internal/edwards25519</span><br><span class="line">crypto/rsa</span><br><span class="line">crypto/x509/internal/macos</span><br><span class="line">crypto/ed25519</span><br><span class="line">crypto/x509/pkix</span><br><span class="line">encoding/pem</span><br><span class="line">internal/godebug</span><br><span class="line">vendor/golang.org/x/net/dns/dnsmessage</span><br><span class="line">vendor/golang.org/x/net/route</span><br><span class="line">internal/intern</span><br><span class="line">internal/singleflight</span><br><span class="line">vendor/golang.org/x/crypto/internal/subtle</span><br><span class="line">vendor/golang.org/x/crypto/internal/poly1305</span><br><span class="line">vendor/golang.org/x/crypto/chacha20</span><br><span class="line">net/netip</span><br><span class="line">vendor/golang.org/x/crypto/curve25519/internal/field</span><br><span class="line">runtime/cgo</span><br><span class="line">vendor/golang.org/x/crypto/chacha20poly1305</span><br><span class="line">vendor/golang.org/x/crypto/hkdf</span><br><span class="line">database/sql/driver</span><br><span class="line">embed</span><br><span class="line">vendor/golang.org/x/crypto/curve25519</span><br><span class="line">cmd/internal/objfile</span><br><span class="line">debug/buildinfo</span><br><span class="line">database/sql</span><br><span class="line">crypto/elliptic/internal/nistec</span><br><span class="line">encoding/ascii85</span><br><span class="line">encoding/base32</span><br><span class="line">encoding/csv</span><br><span class="line">encoding/gob</span><br><span class="line">encoding/xml</span><br><span class="line">vendor/golang.org/x/text/transform</span><br><span class="line">crypto/elliptic</span><br><span class="line">vendor/golang.org/x/text/unicode/bidi</span><br><span class="line">cmd/addr2line</span><br><span class="line">vendor/golang.org/x/text/unicode/norm</span><br><span class="line">vendor/golang.org/x/text/secure/bidirule</span><br><span class="line">vendor/golang.org/x/net/http2/hpack</span><br><span class="line">mime</span><br><span class="line">mime/quotedprintable</span><br><span class="line">net/http/internal</span><br><span class="line">net/http/internal/ascii</span><br><span class="line"><span class="keyword">go</span>/format</span><br><span class="line"><span class="keyword">go</span>/types</span><br><span class="line">hash/crc64</span><br><span class="line">hash/fnv</span><br><span class="line">hash/maphash</span><br><span class="line">html/template</span><br><span class="line">image/color</span><br><span class="line">index/suffixarray</span><br><span class="line">internal/cfg</span><br><span class="line">internal/fuzz</span><br><span class="line">image</span><br><span class="line">image/color/palette</span><br><span class="line">internal/lazytemplate</span><br><span class="line">internal/obscuretestdata</span><br><span class="line">image/internal/imageutil</span><br><span class="line">internal/profile</span><br><span class="line">image/draw</span><br><span class="line">os/user</span><br><span class="line">net</span><br><span class="line">image/gif</span><br><span class="line">vendor/golang.org/x/net/idna</span><br><span class="line">image/jpeg</span><br><span class="line">image/png</span><br><span class="line">internal/sysinfo</span><br><span class="line">testing</span><br><span class="line">internal/trace</span><br><span class="line">math/cmplx</span><br><span class="line">net/http/internal/testcert</span><br><span class="line">net/internal/socktest</span><br><span class="line">os/exec/internal/fdtest</span><br><span class="line">os/signal</span><br><span class="line">os/signal/internal/pty</span><br><span class="line">plugin</span><br><span class="line">reflect/internal/example1</span><br><span class="line">reflect/internal/example2</span><br><span class="line">runtime/metrics</span><br><span class="line">runtime/race</span><br><span class="line">testing/iotest</span><br><span class="line">internal/testenv</span><br><span class="line">testing/fstest</span><br><span class="line">testing/internal/testdeps</span><br><span class="line">testing/quick</span><br><span class="line">time/tzdata</span><br><span class="line">vendor/golang.org/x/sys/cpu</span><br><span class="line">cmd/internal/buildid</span><br><span class="line">cmd/buildid</span><br><span class="line">cmd/compile/internal/test</span><br><span class="line">cmd/internal/browser</span><br><span class="line">cmd/vendor/golang.org/x/tools/cover</span><br><span class="line">cmd/dist</span><br><span class="line">cmd/vendor/golang.org/x/mod/semver</span><br><span class="line">cmd/cover</span><br><span class="line">cmd/doc</span><br><span class="line">cmd/internal/diff</span><br><span class="line">cmd/fix</span><br><span class="line">archive/tar</span><br><span class="line">cmd/<span class="keyword">go</span>/internal/str</span><br><span class="line">cmd/<span class="keyword">go</span>/internal/fsys</span><br><span class="line">cmd/<span class="keyword">go</span>/internal/lockedfile/internal/filelock</span><br><span class="line">cmd/<span class="keyword">go</span>/internal/cfg</span><br><span class="line">cmd/<span class="keyword">go</span>/internal/lockedfile</span><br><span class="line">cmd/<span class="keyword">go</span>/internal/par</span><br><span class="line">cmd/<span class="keyword">go</span>/internal/base</span><br><span class="line">cmd/<span class="keyword">go</span>/internal/imports</span><br><span class="line">cmd/<span class="keyword">go</span>/internal/robustio</span><br><span class="line">cmd/internal/traceviewer</span><br><span class="line">cmd/<span class="keyword">go</span>/internal/cache</span><br><span class="line">cmd/<span class="keyword">go</span>/internal/search</span><br><span class="line">cmd/<span class="keyword">go</span>/internal/trace</span><br><span class="line">cmd/vendor/golang.org/x/mod/internal/lazyregexp</span><br><span class="line">cmd/vendor/golang.org/x/xerrors/internal</span><br><span class="line">cmd/vendor/golang.org/x/crypto/ed25519</span><br><span class="line">cmd/vendor/golang.org/x/mod/sumdb/tlog</span><br><span class="line">cmd/vendor/golang.org/x/xerrors</span><br><span class="line">cmd/vendor/golang.org/x/mod/sumdb/dirhash</span><br><span class="line">crypto/ecdsa</span><br><span class="line">cmd/vendor/golang.org/x/mod/sumdb/note</span><br><span class="line">cmd/<span class="keyword">go</span>/internal/modinfo</span><br><span class="line">cmd/vendor/golang.org/x/mod/module</span><br><span class="line">cmd/<span class="keyword">go</span>/internal/doc</span><br><span class="line">cmd/<span class="keyword">go</span>/internal/cmdflag</span><br><span class="line">cmd/internal/test2json</span><br><span class="line">cmd/<span class="keyword">go</span>/internal/tool</span><br><span class="line">cmd/<span class="keyword">go</span>/internal/version</span><br><span class="line">cmd/<span class="keyword">go</span>/internal/test/internal/genflags</span><br><span class="line">cmd/vendor/golang.org/x/sync/semaphore</span><br><span class="line">cmd/vendor/golang.org/x/mod/zip</span><br><span class="line">cmd/vendor/golang.org/x/mod/modfile</span><br><span class="line">cmd/<span class="keyword">go</span>/internal/mvs</span><br><span class="line">cmd/gofmt</span><br><span class="line">cmd/link/internal/dwtest</span><br><span class="line">cmd/nm</span><br><span class="line">cmd/objdump</span><br><span class="line">cmd/pack</span><br><span class="line">cmd/vendor/github.com/google/pprof/internal/elfexec</span><br><span class="line">cmd/vendor/github.com/google/pprof/profile</span><br><span class="line">cmd/vendor/github.com/ianlancetaylor/demangle</span><br><span class="line">cmd/vendor/github.com/google/pprof/third_party/d3</span><br><span class="line">cmd/vendor/github.com/google/pprof/third_party/d3flamegraph</span><br><span class="line">cmd/vendor/github.com/google/pprof/third_party/svgpan</span><br><span class="line">cmd/<span class="keyword">go</span>/internal/modconv</span><br><span class="line">cmd/vendor/golang.org/x/sys/internal/unsafeheader</span><br><span class="line">cmd/test2json</span><br><span class="line">cmd/vendor/golang.org/x/sys/unix</span><br><span class="line">cmd/vendor/golang.org/x/crypto/ed25519/internal/edwards25519</span><br><span class="line">cmd/vendor/golang.org/x/tools/internal/lsp/fuzzy</span><br><span class="line">cmd/vendor/golang.org/x/tools/<span class="keyword">go</span>/cfg</span><br><span class="line">cmd/vendor/golang.org/x/tools/txtar</span><br><span class="line">vendor/golang.org/x/net/http/httpproxy</span><br><span class="line">log/syslog</span><br><span class="line">net/textproto</span><br><span class="line">crypto/x509</span><br><span class="line">vendor/golang.org/x/net/nettest</span><br><span class="line">vendor/golang.org/x/net/http/httpguts</span><br><span class="line">mime/multipart</span><br><span class="line">net/mail</span><br><span class="line">cmd/vendor/golang.org/x/term</span><br><span class="line">cmd/vendor/github.com/google/pprof/internal/measurement</span><br><span class="line">cmd/vendor/github.com/google/pprof/internal/graph</span><br><span class="line">crypto/tls</span><br><span class="line"><span class="keyword">go</span>/internal/srcimporter</span><br><span class="line">cmd/vendor/golang.org/x/tools/<span class="keyword">go</span>/analysis/passes/internal/analysisutil</span><br><span class="line">cmd/vendor/golang.org/x/tools/internal/typeparams</span><br><span class="line"><span class="keyword">go</span>/internal/gccgoimporter</span><br><span class="line">cmd/api</span><br><span class="line"><span class="keyword">go</span>/internal/gcimporter</span><br><span class="line">cmd/vendor/golang.org/x/tools/<span class="keyword">go</span>/ast/astutil</span><br><span class="line">cmd/vendor/golang.org/x/tools/<span class="keyword">go</span>/ast/inspector</span><br><span class="line">cmd/vendor/golang.org/x/tools/<span class="keyword">go</span>/types/objectpath</span><br><span class="line"><span class="keyword">go</span>/importer</span><br><span class="line">cmd/vendor/golang.org/x/tools/internal/analysisinternal</span><br><span class="line">cmd/vendor/golang.org/x/tools/<span class="keyword">go</span>/types/typeutil</span><br><span class="line">cmd/vendor/golang.org/x/tools/<span class="keyword">go</span>/analysis</span><br><span class="line">cmd/vendor/golang.org/x/tools/<span class="keyword">go</span>/analysis/internal/analysisflags</span><br><span class="line">cmd/vendor/golang.org/x/tools/<span class="keyword">go</span>/analysis/passes/buildtag</span><br><span class="line">cmd/vendor/golang.org/x/tools/<span class="keyword">go</span>/analysis/passes/inspect</span><br><span class="line">cmd/vendor/golang.org/x/tools/<span class="keyword">go</span>/analysis/internal/facts</span><br><span class="line">cmd/vendor/golang.org/x/tools/<span class="keyword">go</span>/analysis/passes/asmdecl</span><br><span class="line">cmd/vendor/golang.org/x/tools/<span class="keyword">go</span>/analysis/passes/cgocall</span><br><span class="line">cmd/vendor/golang.org/x/tools/<span class="keyword">go</span>/analysis/passes/framepointer</span><br><span class="line">cmd/vendor/golang.org/x/tools/<span class="keyword">go</span>/analysis/passes/assign</span><br><span class="line">cmd/vendor/golang.org/x/tools/<span class="keyword">go</span>/analysis/passes/atomic</span><br><span class="line">cmd/vendor/golang.org/x/tools/<span class="keyword">go</span>/analysis/passes/bools</span><br><span class="line">cmd/vendor/golang.org/x/tools/<span class="keyword">go</span>/analysis/passes/composite</span><br><span class="line">cmd/vendor/golang.org/x/tools/<span class="keyword">go</span>/analysis/passes/copylock</span><br><span class="line">cmd/vendor/golang.org/x/tools/<span class="keyword">go</span>/analysis/passes/ctrlflow</span><br><span class="line">cmd/vendor/golang.org/x/tools/<span class="keyword">go</span>/analysis/passes/errorsas</span><br><span class="line">cmd/vendor/golang.org/x/tools/<span class="keyword">go</span>/analysis/passes/httpresponse</span><br><span class="line">cmd/vendor/golang.org/x/tools/<span class="keyword">go</span>/analysis/passes/ifaceassert</span><br><span class="line">cmd/vendor/golang.org/x/tools/<span class="keyword">go</span>/analysis/passes/loopclosure</span><br><span class="line">cmd/vendor/golang.org/x/tools/<span class="keyword">go</span>/analysis/passes/nilfunc</span><br><span class="line">cmd/vendor/golang.org/x/tools/<span class="keyword">go</span>/analysis/passes/printf</span><br><span class="line">cmd/vendor/golang.org/x/tools/<span class="keyword">go</span>/analysis/passes/lostcancel</span><br><span class="line">cmd/vendor/golang.org/x/tools/<span class="keyword">go</span>/analysis/passes/shift</span><br><span class="line">cmd/vendor/golang.org/x/tools/<span class="keyword">go</span>/analysis/passes/sigchanyzer</span><br><span class="line">cmd/vendor/golang.org/x/tools/<span class="keyword">go</span>/analysis/passes/stdmethods</span><br><span class="line">cmd/vendor/golang.org/x/tools/<span class="keyword">go</span>/analysis/passes/stringintconv</span><br><span class="line">cmd/vendor/golang.org/x/tools/<span class="keyword">go</span>/analysis/passes/structtag</span><br><span class="line">cmd/vendor/golang.org/x/tools/<span class="keyword">go</span>/analysis/passes/testinggoroutine</span><br><span class="line">cmd/vendor/golang.org/x/tools/<span class="keyword">go</span>/analysis/passes/tests</span><br><span class="line">cmd/vendor/golang.org/x/tools/<span class="keyword">go</span>/analysis/passes/unmarshal</span><br><span class="line">cmd/vendor/golang.org/x/tools/<span class="keyword">go</span>/analysis/passes/unreachable</span><br><span class="line">cmd/vendor/golang.org/x/tools/<span class="keyword">go</span>/analysis/passes/unsafeptr</span><br><span class="line">cmd/vendor/golang.org/x/tools/<span class="keyword">go</span>/analysis/passes/unusedresult</span><br><span class="line">cmd/vendor/golang.org/x/tools/<span class="keyword">go</span>/analysis/unitchecker</span><br><span class="line">cmd/vet</span><br><span class="line">net/http/httptrace</span><br><span class="line">net/smtp</span><br><span class="line">net/http</span><br><span class="line">expvar</span><br><span class="line">net/http/cgi</span><br><span class="line">net/http/httptest</span><br><span class="line">net/http/cookiejar</span><br><span class="line">net/http/pprof</span><br><span class="line">cmd/<span class="keyword">go</span>/internal/auth</span><br><span class="line">net/rpc</span><br><span class="line">net/http/httputil</span><br><span class="line">cmd/vendor/golang.org/x/mod/sumdb</span><br><span class="line">cmd/vendor/github.com/google/pprof/internal/plugin</span><br><span class="line">cmd/<span class="keyword">go</span>/internal/web</span><br><span class="line">cmd/trace</span><br><span class="line">net/http/fcgi</span><br><span class="line">net/rpc/jsonrpc</span><br><span class="line">cmd/vendor/github.com/google/pprof/internal/binutils</span><br><span class="line">cmd/vendor/github.com/google/pprof/internal/report</span><br><span class="line">cmd/vendor/github.com/google/pprof/internal/symbolz</span><br><span class="line">cmd/<span class="keyword">go</span>/internal/modfetch/codehost</span><br><span class="line">cmd/<span class="keyword">go</span>/internal/vcs</span><br><span class="line">cmd/vendor/github.com/google/pprof/internal/transport</span><br><span class="line">cmd/vendor/github.com/google/pprof/internal/symbolizer</span><br><span class="line">cmd/<span class="keyword">go</span>/internal/modfetch</span><br><span class="line">cmd/vendor/github.com/google/pprof/internal/driver</span><br><span class="line">cmd/<span class="keyword">go</span>/internal/modload</span><br><span class="line">cmd/vendor/github.com/google/pprof/driver</span><br><span class="line">cmd/pprof</span><br><span class="line">cmd/<span class="keyword">go</span>/internal/workcmd</span><br><span class="line">cmd/<span class="keyword">go</span>/internal/help</span><br><span class="line">cmd/<span class="keyword">go</span>/internal/load</span><br><span class="line">cmd/<span class="keyword">go</span>/internal/fmtcmd</span><br><span class="line">cmd/<span class="keyword">go</span>/internal/modcmd</span><br><span class="line">cmd/<span class="keyword">go</span>/internal/work</span><br><span class="line">cmd/<span class="keyword">go</span>/internal/envcmd</span><br><span class="line">cmd/<span class="keyword">go</span>/internal/fix</span><br><span class="line">cmd/<span class="keyword">go</span>/internal/generate</span><br><span class="line">cmd/<span class="keyword">go</span>/internal/run</span><br><span class="line">cmd/<span class="keyword">go</span>/internal/modget</span><br><span class="line">cmd/<span class="keyword">go</span>/internal/clean</span><br><span class="line">cmd/<span class="keyword">go</span>/internal/get</span><br><span class="line">cmd/<span class="keyword">go</span>/internal/list</span><br><span class="line">cmd/<span class="keyword">go</span>/internal/test</span><br><span class="line">cmd/<span class="keyword">go</span>/internal/vet</span><br><span class="line">cmd/<span class="keyword">go</span>/internal/bug</span><br><span class="line">cmd/<span class="keyword">go</span></span><br><span class="line"></span><br><span class="line">---</span><br><span class="line">Installed Go <span class="keyword">for</span> darwin/arm64 in /Users/fliter/source_lab/<span class="keyword">go</span></span><br><span class="line">Installed commands in /Users/fliter/source_lab/<span class="keyword">go</span>/bin</span><br><span class="line">---</span><br><span class="line">Installed Go <span class="keyword">for</span> darwin/arm64 in /Users/fliter/source_lab/<span class="keyword">go</span></span><br><span class="line">Installed commands in /Users/fliter/source_lab/<span class="keyword">go</span>/bin</span><br><span class="line">*** You need to add /Users/fliter/source_lab/<span class="keyword">go</span>/bin to your PATH.</span><br></pre></td></tr></table></figure></details><br><p>这时在bin目录下，就有刚刚编译好的二进制文件。</p><img src="/2021/10/11/调试Go源代码/1.png" width="90%" height="50%"><p>将该目录起一个别名(如go_dev)加到 <code>~/.zshrc</code>中：<code>alias go_dev=/Users/fliter/source_lab/go/bin/go</code></p><p>并执行<code>source .zshrc</code></p><br><p>执行 <code>go_dev version</code>:</p><img src="/2021/10/11/调试Go源代码/2.png" width="90%" height="50%"><br><hr><br><h3 id="调试源码"><a class="header-anchor" href="#调试源码">¶</a>调试源码</h3><br><h4 id="修改runtime-map-go"><a class="header-anchor" href="#修改runtime-map-go">¶</a>修改runtime/map.go</h4><br><p>在<a href>src/runtime/map.go</a> func makemap(t *maptype, hint int, h *hmap) *hmap {}第一行插入新代码 <code>println(&quot;fliter debug source code&quot;)</code></p><p>(之所以不用fmt.Println，是因为会有循环引用，即runtime包和fmt包相互引用)</p><br><p>执行<code>./all.bash</code>重新编译源码</p><p>(因为只改了runtime包，并不需要重新构建整个项目,所以可在make.bash中 通过<code>./cmd/dist/dist install  -v &quot;runtime&quot;</code> 仅指定runtime目录)</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">m := <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="keyword">int</span>]<span class="keyword">string</span>, <span class="number">10</span>)</span><br><span class="line">m[<span class="number">1</span>] = <span class="string">"cuishuang"</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">println</span>(m[<span class="number">1</span>])</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这段代码正常执行该输出<code>cuishuang</code></p><p>而使用go_dev run 如上代码：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line">fliter debug source code</span><br><span class="line">fliter debug source code</span><br><span class="line">fliter debug source code</span><br><span class="line">fliter debug source code</span><br><span class="line">fliter debug source code</span><br><span class="line">fliter debug source code</span><br><span class="line">fliter debug source code</span><br><span class="line">fliter debug source code</span><br><span class="line">fliter debug source code</span><br><span class="line">fliter debug source code</span><br><span class="line">fliter debug source code</span><br><span class="line">fliter debug source code</span><br><span class="line">fliter debug source code</span><br><span class="line">fliter debug source code</span><br><span class="line">fliter debug source code</span><br><span class="line">fliter debug source code</span><br><span class="line">fliter debug source code</span><br><span class="line">fliter debug source code</span><br><span class="line">fliter debug source code</span><br><span class="line">fliter debug source code</span><br><span class="line">fliter debug source code</span><br><span class="line">fliter debug source code</span><br><span class="line">fliter debug source code</span><br><span class="line">fliter debug source code</span><br><span class="line">fliter debug source code</span><br><span class="line">fliter debug source code</span><br><span class="line">fliter debug source code</span><br><span class="line">fliter debug source code</span><br><span class="line">fliter debug source code</span><br><span class="line">fliter debug source code</span><br><span class="line">fliter debug source code</span><br><span class="line">fliter debug source code</span><br><span class="line">fliter debug source code</span><br><span class="line">fliter debug source code</span><br><span class="line">fliter debug source code</span><br><span class="line">fliter debug source code</span><br><span class="line">fliter debug source code</span><br><span class="line">fliter debug source code</span><br><span class="line">fliter debug source code</span><br><span class="line">fliter debug source code</span><br><span class="line">fliter debug source code</span><br><span class="line">fliter debug source code</span><br><span class="line">fliter debug source code</span><br><span class="line"># runtime/internal/sys</span><br><span class="line">compile: cannot use concurrent backend compilation with provided flags; invoked as [/usr/local/<span class="keyword">go</span>/pkg/tool/darwin_arm64/compile -o $WORK/b008/_pkg_.a -trimpath $WORK/b008=&gt; -p runtime/internal/sys -std -+ -complete -buildid M2oPX2HiuTsx5AMULRO_/M2oPX2HiuTsx5AMULRO_ -shared -c=<span class="number">4</span> -nolocalimports -importcfg $WORK/b008/importcfg -pack /usr/local/<span class="keyword">go</span>/src/runtime/internal/sys/arch.<span class="keyword">go</span> /usr/local/<span class="keyword">go</span>/src/runtime/internal/sys/arch_arm64.<span class="keyword">go</span> /usr/local/<span class="keyword">go</span>/src/runtime/internal/sys/intrinsics.<span class="keyword">go</span> /usr/local/<span class="keyword">go</span>/src/runtime/internal/sys/intrinsics_common.<span class="keyword">go</span> /usr/local/<span class="keyword">go</span>/src/runtime/internal/sys/stubs.<span class="keyword">go</span> /usr/local/<span class="keyword">go</span>/src/runtime/internal/sys/sys.<span class="keyword">go</span> /usr/local/<span class="keyword">go</span>/src/runtime/internal/sys/zgoarch_arm64.<span class="keyword">go</span> /usr/local/<span class="keyword">go</span>/src/runtime/internal/sys/zgoos_darwin.<span class="keyword">go</span> /usr/local/<span class="keyword">go</span>/src/runtime/internal/sys/zversion.<span class="keyword">go</span>]</span><br><span class="line">fliter debug source code</span><br><span class="line">fliter debug source code</span><br><span class="line">fliter debug source code</span><br><span class="line">fliter debug source code</span><br><span class="line"># internal/cpu</span><br><span class="line">compile: cannot use concurrent backend compilation with provided flags; invoked as [/usr/local/<span class="keyword">go</span>/pkg/tool/darwin_arm64/compile -o $WORK/b004/_pkg_.a -trimpath $WORK/b004=&gt; -p internal/cpu -std -+ -buildid bZn0-nG2D-qVhCGWsVek/bZn0-nG2D-qVhCGWsVek -symabis $WORK/b004/symabis -shared -c=<span class="number">4</span> -nolocalimports -importcfg $WORK/b004/importcfg -pack -asmhdr $WORK/b004/go_asm.h /usr/local/<span class="keyword">go</span>/src/internal/cpu/cpu.<span class="keyword">go</span> /usr/local/<span class="keyword">go</span>/src/internal/cpu/cpu_arm64.<span class="keyword">go</span> /usr/local/<span class="keyword">go</span>/src/internal/cpu/cpu_arm64_darwin.<span class="keyword">go</span> /usr/local/<span class="keyword">go</span>/src/internal/cpu/cpu_no_name.<span class="keyword">go</span>]</span><br><span class="line"># runtime/internal/atomic</span><br><span class="line">compile: cannot use concurrent backend compilation with provided flags; invoked as [/usr/local/<span class="keyword">go</span>/pkg/tool/darwin_arm64/compile -o $WORK/b006/_pkg_.a -trimpath $WORK/b006=&gt; -p runtime/internal/atomic -std -+ -buildid Wh4PYLD6KyWgsgy5uHLX/Wh4PYLD6KyWgsgy5uHLX -symabis $WORK/b006/symabis -shared -c=<span class="number">4</span> -nolocalimports -importcfg $WORK/b006/importcfg -pack -asmhdr $WORK/b006/go_asm.h /usr/local/<span class="keyword">go</span>/src/runtime/internal/atomic/atomic_arm64.<span class="keyword">go</span> /usr/local/<span class="keyword">go</span>/src/runtime/internal/atomic/stubs.<span class="keyword">go</span> /usr/local/<span class="keyword">go</span>/src/runtime/internal/atomic/unaligned.<span class="keyword">go</span>]</span><br></pre></td></tr></table></figure><p>可见某个步骤发生了问题</p><br><hr><br><p>参考：</p><p><a href="https://github.com/zpoint/go-Internals/blob/1.14/debug/setup/setup_cn.md" target="_blank" rel="noopener">go 源码分析 调试安装</a></p><p><a href="https://draveness.me/golang/docs/part1-prerequisite/ch01-prepare/golang-debug/" target="_blank" rel="noopener">调试源代码</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;编译源码方式安装新版本Go&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#编译源码方式安装新版本Go&quot;&gt;¶&lt;/a&gt;编译源码方式安装新版本Go&lt;/h3&gt;
&lt;br&gt;
&lt;p&gt;通过源代码编译安装*&lt;a href=&quot;https://github.com/
      
    
    </summary>
    
    
      <category term="Go" scheme="http://www.dashen.tech/tags/Go/"/>
    
  </entry>
  
  <entry>
    <title>代码搜索技巧</title>
    <link href="http://www.dashen.tech/2021/10/08/%E4%BB%A3%E7%A0%81%E6%90%9C%E7%B4%A2%E6%8A%80%E5%B7%A7/"/>
    <id>http://www.dashen.tech/2021/10/08/代码搜索技巧/</id>
    <published>2021-10-08T13:56:53.000Z</published>
    <updated>2021-10-08T11:55:19.665Z</updated>
    
    <content type="html"><![CDATA[<p>在IDE中搜索代码时，经常会被相近的无关代码干扰，如筛选所有使用协程的代码段，</p><img src="/2021/10/08/代码搜索技巧/0.png" width="100%" height="100%"><p>可见有大量“噪音”。</p><p>可使用IDE提供的正则表达式功能</p><img src="/2021/10/08/代码搜索技巧/1.png" width="100%" height="100%"><p>如 使用 <code>\bgo </code>,即匹配go开头的，且之后为空格的所有选项</p><img src="/2021/10/08/代码搜索技巧/2.png" width="100%" height="100%"><br><p>使用 <code>\bgo func</code>,即匹配到了所有使用协程的代码段</p><img src="/2021/10/08/代码搜索技巧/3.png" width="100%" height="100%"><br><p>IDE还提供了常用正则表达式语法：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">Summary of regular-expression constructs</span><br><span class="line"></span><br><span class="line">Construct                    Matches</span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">           Characters</span><br><span class="line"></span><br><span class="line">x                       The character x</span><br><span class="line">\\                      The backslash character</span><br><span class="line">\<span class="number">0</span>n                     The character with octal value <span class="number">0</span>n (<span class="number">0</span> &lt;= n &lt;= <span class="number">7</span>)</span><br><span class="line">\<span class="number">0</span>nn                    The character with octal value <span class="number">0</span>nn (<span class="number">0</span> &lt;= n &lt;= <span class="number">7</span>)</span><br><span class="line">\<span class="number">0</span>mnn                   The character with octal value <span class="number">0</span>mnn (<span class="number">0</span> &lt;= m &lt;= <span class="number">3</span>, <span class="number">0</span> &lt;= n &lt;= <span class="number">7</span>)</span><br><span class="line">\xhh                    The character with hexadecimal value <span class="number">0</span>xhh</span><br><span class="line">\uhhhh                  The character with hexadecimal value <span class="number">0</span>xhhhh</span><br><span class="line">\t                      The tab character (<span class="string">'\u0009'</span>)</span><br><span class="line">\n                      The newline (line feed) character (<span class="string">'\u000A'</span>)</span><br><span class="line">\r                      The carriage-<span class="keyword">return</span> character (<span class="string">'\u000D'</span>)</span><br><span class="line">\f                      The form-feed character (<span class="string">'\u000C'</span>)</span><br><span class="line">\a                      The alert (bell) character (<span class="string">'\u0007'</span>)</span><br><span class="line">\e                      The escape character (<span class="string">'\u001B'</span>)</span><br><span class="line">\cx                     The control character corresponding to x</span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            Character classes</span><br><span class="line"></span><br><span class="line">[abc]                   a, b, or c (simple class)</span><br><span class="line">[^abc]                  Any character except a, b, or c (negation)</span><br><span class="line">[a-zA-Z]                a through z or A through Z, inclusive (<span class="keyword">range</span>)</span><br><span class="line">[a-d[m-p]]              a through d, or m through p: [a-dm-p] (union)</span><br><span class="line">[a-z&amp;&amp;[def]]            d, e, or f (intersection)</span><br><span class="line">[a-z&amp;&amp;[^bc]]            a through z, except <span class="keyword">for</span> b and c: [ad-z] (subtraction)</span><br><span class="line">[a-z&amp;&amp;[^m-p]]           a through z, and not m through p: [a-lq-z(subtraction)</span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">            Predefined character classes</span><br><span class="line"></span><br><span class="line">.                       Any character (may or may not match line terminators)</span><br><span class="line">\d                      A digit: [<span class="number">0</span><span class="number">-9</span>]</span><br><span class="line">\D                      A non-digit: [^<span class="number">0</span><span class="number">-9</span>]</span><br><span class="line">\s                      A whitespace character: [ \t\n\x0B\f\r]</span><br><span class="line">\S                      A non-whitespace character: [^\s]</span><br><span class="line">\w                      A word character: [a-zA-Z_0<span class="number">-9</span>]</span><br><span class="line">\W                      A non-word character: [^\w]</span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            POSIX character classes (US-ASCII only)</span><br><span class="line"></span><br><span class="line">\p&#123;Lower&#125;               A lower-<span class="keyword">case</span> alphabetic character: [a-z]</span><br><span class="line">\p&#123;Upper&#125;               An upper-<span class="keyword">case</span> alphabetic character:[A-Z]</span><br><span class="line">\p&#123;ASCII&#125;               All ASCII:[\x00-\x7F]</span><br><span class="line">\p&#123;Alpha&#125;               An alphabetic character:[\p&#123;Lower&#125;\p&#123;Upper&#125;]</span><br><span class="line">\p&#123;Digit&#125;               A decimal digit: [<span class="number">0</span><span class="number">-9</span>]</span><br><span class="line">\p&#123;Alnum&#125;               An alphanumeric character:[\p&#123;Alpha&#125;\p&#123;Digit&#125;]</span><br><span class="line">\p&#123;Punct&#125;               Punctuation: One of !<span class="string">"#$%&amp;'()*+,-./:;=&gt;?@[\]^_`&#123;|&#125;~</span></span><br><span class="line"><span class="string">\p&#123;Graph&#125;               A visible character: [\p&#123;Alnum&#125;\p&#123;Punct&#125;]</span></span><br><span class="line"><span class="string">\p&#123;Print&#125;               A printable character: [\p&#123;Graph&#125;\x20]</span></span><br><span class="line"><span class="string">\p&#123;Blank&#125;               A space or a tab: [ \t]</span></span><br><span class="line"><span class="string">\p&#123;Cntrl&#125;               A control character: [\x00-\x1F\x7F]</span></span><br><span class="line"><span class="string">\p&#123;XDigit&#125;              A hexadecimal digit: [0-9a-fA-F]</span></span><br><span class="line"><span class="string">\p&#123;Space&#125;               A whitespace character: [ \t\n\x0B\f\r]</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">            java.lang.Character classes (simple java character type)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">\p&#123;javaLowerCase&#125;       Equivalent to java.lang.Character.isLowerCase()</span></span><br><span class="line"><span class="string">\p&#123;javaUpperCase&#125;       Equivalent to java.lang.Character.isUpperCase()</span></span><br><span class="line"><span class="string">\p&#123;javaWhitespace&#125;      Equivalent to java.lang.Character.isWhitespace()</span></span><br><span class="line"><span class="string">\p&#123;javaMirrored&#125;        Equivalent to java.lang.Character.isMirrored()</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">            Classes for Unicode blocks and categories</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">\p&#123;InGreek&#125;             A character in the Greek block (simple block)</span></span><br><span class="line"><span class="string">\p&#123;Lu&#125;                  An uppercase letter (simple category)</span></span><br><span class="line"><span class="string">\p&#123;Sc&#125;                  A currency symbol</span></span><br><span class="line"><span class="string">\P&#123;InGreek&#125;             Any character except one in the Greek block (negation)</span></span><br><span class="line"><span class="string">[\p&#123;L&#125;&amp;&amp;[^\p&#123;Lu&#125;]]      Any letter except an uppercase letter (subtraction)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">                  Boundary matchers</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">^                       The beginning of a line</span></span><br><span class="line"><span class="string">$                       The end of a line</span></span><br><span class="line"><span class="string">\b                      A word boundary</span></span><br><span class="line"><span class="string">\B                      A non-word boundary</span></span><br><span class="line"><span class="string">\A                      The beginning of the input</span></span><br><span class="line"><span class="string">\G                      The end of the previous match</span></span><br><span class="line"><span class="string">\Z                      The end of the input but for the final terminator, if any</span></span><br><span class="line"><span class="string">\z                      The end of the input</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">                Greedy quantifiers</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">X?                      X, once or not at all</span></span><br><span class="line"><span class="string">X*                      X, zero or more times</span></span><br><span class="line"><span class="string">X+                      X, one or more times</span></span><br><span class="line"><span class="string">X&#123;n&#125;                    X, exactly n times</span></span><br><span class="line"><span class="string">X&#123;n,&#125;                   X, at least n times</span></span><br><span class="line"><span class="string">X&#123;n,m&#125;                  X, at least n but not more than m times</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">                Reluctant quantifiers</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">X??                     X, once or not at all</span></span><br><span class="line"><span class="string">X*?                     X, zero or more times</span></span><br><span class="line"><span class="string">X+?                     X, one or more times</span></span><br><span class="line"><span class="string">X&#123;n&#125;?                   X, exactly n times</span></span><br><span class="line"><span class="string">X&#123;n,&#125;?                  X, at least n times</span></span><br><span class="line"><span class="string">X&#123;n,m&#125;?                 X, at least n but not more than m times</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">                 Possessive quantifiers</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">X?+                     X, once or not at all</span></span><br><span class="line"><span class="string">X*+                     X, zero or more times</span></span><br><span class="line"><span class="string">X++                     X, one or more times</span></span><br><span class="line"><span class="string">X&#123;n&#125;+                   X, exactly n times</span></span><br><span class="line"><span class="string">X&#123;n,&#125;+                  X, at least n times</span></span><br><span class="line"><span class="string">X&#123;n,m&#125;+                 X, at least n but not more than m times</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">                Logical operators</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">XY                      X followed by Y</span></span><br><span class="line"><span class="string">X|Y                     Either X or Y</span></span><br><span class="line"><span class="string">(X)                     X, as a capturing group</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">                Back references</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">\n                      Whatever the nth capturing group matched</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">                Quotation</span></span><br><span class="line"><span class="string">                  </span></span><br><span class="line"><span class="string">\                       Nothing, but quotes the following character</span></span><br><span class="line"><span class="string">\Q                      Nothing, but quotes all characters until \E</span></span><br><span class="line"><span class="string">\E                      Nothing, but ends quoting started by \Q</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">                Special constructs (non-capturing)</span></span><br><span class="line"><span class="string">                </span></span><br><span class="line"><span class="string">(?:X)                   X, as a non-capturing group</span></span><br><span class="line"><span class="string">(?idmsux-idmsux)        Nothing, but turns match flags on - off</span></span><br><span class="line"><span class="string">(?idmsux-idmsux:X)      X, as a non-capturing group with the given flags on - off</span></span><br><span class="line"><span class="string">(?=X)                   X, via zero-width positive lookahead</span></span><br><span class="line"><span class="string">(?!X)                   X, via zero-width negative lookahead</span></span><br><span class="line"><span class="string">(?&lt;=X)                  X, via zero-width positive lookbehind</span></span><br><span class="line"><span class="string">(?&lt;!X)                  X, via zero-width negative lookbehind</span></span><br><span class="line"><span class="string">(?&gt;X)                   X, as an independent, non-capturing group</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">More on Regular Expressions: Full Java Regular Expressions syntax description, Using Regular Expressions in Java.</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;在IDE中搜索代码时，经常会被相近的无关代码干扰，如筛选所有使用协程的代码段，&lt;/p&gt;
&lt;img src=&quot;/2021/10/08/代码搜索技巧/0.png&quot; width=&quot;100%&quot; height=&quot;100%&quot;&gt;
&lt;p&gt;可见有大量“噪音”。&lt;/p&gt;
&lt;p&gt;可使用IDE提供
      
    
    </summary>
    
    
      <category term="Tools" scheme="http://www.dashen.tech/tags/Tools/"/>
    
  </entry>
  
  <entry>
    <title>SubQuery入门指南II</title>
    <link href="http://www.dashen.tech/2021/09/25/SubQuery%E5%85%A5%E9%97%A8%E6%8C%87%E5%8D%97II/"/>
    <id>http://www.dashen.tech/2021/09/25/SubQuery入门指南II/</id>
    <published>2021-09-25T13:56:23.000Z</published>
    <updated>2021-09-26T07:20:56.077Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://mp.weixin.qq.com/s/Nyy3ogj0-ySOTczJBvpQxw" target="_blank" rel="noopener">SubQuery开发者指南丨Hello World (由SubQuery 托管)</a></p><br><h3 id="创建项目"><a class="header-anchor" href="#创建项目">¶</a>创建项目</h3><br><blockquote><p>subql init --starter Cui_subql</p></blockquote><img src="/2021/09/25/SubQuery入门指南II/0.png" width="100%" height="50%"><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> Cui_subql</span><br><span class="line">npm install</span><br><span class="line">npm run-script codegen</span><br><span class="line">npm run-script build</span><br></pre></td></tr></table></figure><img src="/2021/09/25/SubQuery入门指南II/1.png" width="100%" height="50%"><br><h3 id="创建-GitHub-存储库"><a class="header-anchor" href="#创建-GitHub-存储库">¶</a>创建 GitHub 存储库</h3><br><p><a href="mailto:git@github.com" target="_blank" rel="noopener">git@github.com</a>:cuishuang/subql_demo.git</p><br><h3 id="推送到-GitHub"><a class="header-anchor" href="#推送到-GitHub">¶</a>推送到 GitHub</h3><br><br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> Cui_subql</span><br><span class="line">git init</span><br><span class="line">git remote add origin git@github.com:cuishuang/subql_demo.git  //将远程存储库设置为 git@github.com:cuishuang/subql_demo.git</span><br><span class="line"></span><br><span class="line">git add .</span><br><span class="line">git commit -m<span class="string">"first commit"</span></span><br><span class="line">git push --<span class="built_in">set</span>-upstream origin master</span><br></pre></td></tr></table></figure><img src="/2021/09/25/SubQuery入门指南II/2.png" width="100%" height="50%"><img src="/2021/09/25/SubQuery入门指南II/3.png" width="100%" height="50%"><br><h3 id="创建项目-v2"><a class="header-anchor" href="#创建项目-v2">¶</a>创建项目</h3><br><p>点击<a href="https://project.subquery.network" target="_blank" rel="noopener">project.subquery.network</a>并使用github登录</p><ul><li><p>GitHub 帐户：如果有多个 GitHub 帐户，请选择将在哪个帐户下创建此项目。 在 GitHub 组织帐户中创建的项目在该组织的成员之间共享。</p></li><li><p>项目名称：在此处为项目命名。</p></li><li><p>副标题：为项目提供副标题。</p></li><li><p>描述：解释 SubQuery 项目的用途。</p></li><li><p>GitHub 存储库 URL：这必须是包含 SubQuery 项目的公共存储库的有效 GitHub URL。schema.graphql 文件必须位于目录的根目录中。</p></li><li><p>隐藏项目：如果选中，这将在公共 SubQuery 浏览器中隐藏项目。 如果想与社区共享您的 SubQuery 项目，请不要选择此项！</p></li></ul><img src="/2021/09/25/SubQuery入门指南II/4.png" width="100%" height="50%"><br><p>单击创建后，将跳转到控制面板。这上面包含许多有用信息，如它使用的网络、它运行的源代码的 GitHub 存储库 URL、它的创建时间和上次更新时间，尤其是部署的详细信息</p><img src="/2021/09/25/SubQuery入门指南II/5.png" width="100%" height="50%"><br><h3 id="部署项目"><a class="header-anchor" href="#部署项目">¶</a>部署项目</h3><br><p>现在已在 SubQuery Projects 中创建了项目，下一步是部署项目使其可操作。</p><p>部署一个版本会触发新的 SubQuery 索引操作启动，并设置所需的查询服务以开始接受 GraphQL 请求。 还可以在此处将新版本部署到现有项目。</p><p>可以选择部署到各种环境，例如生产槽或暂存槽。 在这里，将部署到生产槽。 单击“部署”按钮会显示如下：</p><img src="/2021/09/25/SubQuery入门指南II/6.png" width="100%" height="50%"><ul><li><p>新版本的 Commit Hash：从 GitHub 中选择您要部署的 SubQuery 项目代码库的正确交付 (因为只有一个交付/提交，所以下拉菜单中只有一个选项)</p></li><li><p>索引器版本：这是要在其上运行此SubQuery项目的SubQuery节点服务的版本。 可登录<a href="https://www.npmjs.com/package/@subql/node" target="_blank" rel="noopener">此网址参考</a></p></li><li><p>查询版本：这是要在其上运行此 SubQuery 项目的 SubQuery 查询服务的版本。 可登录<a href="https://www.npmjs.com/package/@subql/query" target="_blank" rel="noopener">此网址参考</a></p></li></ul><p>将使用最新版本的索引器和查询版本，因此此处接受默认值，然后单击“部署更新”</p><p>然后，将看到部署处于“正在处理”状态。 在这里，代码正在部署到 SubQuery 的托管基础架构上。 服务器正在按需启动并准备提供服务，这将需要几分钟的时间。</p><img src="/2021/09/25/SubQuery入门指南II/7.png" width="100%" height="50%"><br><h3 id="测试项目"><a class="header-anchor" href="#测试项目">¶</a>测试项目</h3><br><img src="/2021/09/25/SubQuery入门指南II/8.png" width="100%" height="50%"><img src="/2021/09/25/SubQuery入门指南II/9.png" width="100%" height="50%"><br><h3 id="运行一个简单的-GET-查询"><a class="header-anchor" href="#运行一个简单的-GET-查询">¶</a>运行一个简单的 GET 查询</h3><br><p>Query Endpoint:<a href="https://api.subquery.network/sq/cuishuang/blockchain" target="_blank" rel="noopener">https://api.subquery.network/sq/cuishuang/blockchain</a></p><img src="/2021/09/25/SubQuery入门指南II/10.png" width="100%" height="50%">]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/Nyy3ogj0-ySOTczJBvpQxw&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;SubQuery开发者指南丨Hello World (由SubQuery 托管)&lt;/a&gt;&lt;/
      
    
    </summary>
    
    
      <category term="微服务" scheme="http://www.dashen.tech/tags/%E5%BE%AE%E6%9C%8D%E5%8A%A1/"/>
    
  </entry>
  
  <entry>
    <title>SubQuery入门指南</title>
    <link href="http://www.dashen.tech/2021/09/25/SubQuery%E5%85%A5%E9%97%A8%E6%8C%87%E5%8D%97/"/>
    <id>http://www.dashen.tech/2021/09/25/SubQuery入门指南/</id>
    <published>2021-09-25T13:20:46.000Z</published>
    <updated>2021-09-26T02:59:49.458Z</updated>
    
    <content type="html"><![CDATA[<p>SubQuery是波卡生态的 The Graph(以太坊生态的数据服务提供者)</p><p>SubQuery可以让开发者专注于其核心用例和前端，而无需浪费时间来构建用于数据处理的后端。</p><br><h3 id="下载SubQuery-CLI"><a class="header-anchor" href="#下载SubQuery-CLI">¶</a>下载SubQuery CLI</h3><br><blockquote><p>npm install -g @subql/cli</p></blockquote><blockquote><p>subql help</p></blockquote><img src="/2021/09/25/SubQuery入门指南/0.png" width="100%" height="50%"><br><h3 id="初始化-Starter-SubQuery-项目"><a class="header-anchor" href="#初始化-Starter-SubQuery-项目">¶</a>初始化 Starter SubQuery 项目</h3><br><blockquote><p>subql init --starter Shuang_subql</p></blockquote><ul><li><p>Git 存储库（可选）：提供指向此 SubQuery 项目的，并将在其中托管的存储库的 Git URL（当托管在 SubQuery Explorer 中时）。</p></li><li><p>RPC 端点（必需）：提供一个 wss URL给一个正在运行的 RPC 端点，该端点将默认用于此项目。 您可以快速访问不同 Polkadot 网络的公共端点，甚至可以使用 OnFinality，或仅使用默认的 Polkadot 端点创建您自己的私有专用节点。</p></li><li><p>作者（必填）：在此处输入此 SubQuery 项目的所有者。</p></li><li><p>描述（可选）：您可以提供关于您项目的简短段落，描述项目包含哪些数据以及用户可以使用它做什么。</p></li><li><p>版本（必填）：输入自定义版本号或使用默认版本 (1.0.0)。</p></li><li><p>许可证（必需）：提供此项目的软件许可证或接受默认（Apache-2.0）。</p></li></ul><blockquote><p>cd Shuang_test</p></blockquote><blockquote><p>npm install</p></blockquote><img src="/2021/09/25/SubQuery入门指南/1.png" width="100%" height="50%"><br><h3 id="配置和构建入门项目"><a class="header-anchor" href="#配置和构建入门项目">¶</a>配置和构建入门项目</h3><br><img src="/2021/09/25/SubQuery入门指南/2.png" width="100%" height="50%"><p>之后的开发将主要处理以下文件：</p><ul><li><p>project.yaml 中的清单</p></li><li><p>schema.graphql 中的 GraphQL 架构</p></li><li><p>src/mappings/ 目录中的映射函数</p></li></ul><br><h3 id="GraphQL-模型生成"><a class="header-anchor" href="#GraphQL-模型生成">¶</a>GraphQL 模型生成</h3><br><blockquote><p>npm run-script codegen</p></blockquote><img src="/2021/09/25/SubQuery入门指南/3.png" width="100%" height="50%"><p>此时会自动新建/src/types/models文件夹，里面是自动生成的文件</p><br><h3 id="构建项目"><a class="header-anchor" href="#构建项目">¶</a>构建项目</h3><br><blockquote><p>npm run-script build</p></blockquote><br><h3 id="运行-SubQuery-项目"><a class="header-anchor" href="#运行-SubQuery-项目">¶</a>运行 SubQuery 项目</h3><br><p>打开本地的Docker，然后执行</p><blockquote><p>docker-compose pull &amp;&amp; docker-compose up</p></blockquote><img src="/2021/09/25/SubQuery入门指南/4.png" width="100%" height="50%"><br><h3 id="查询新建的项目"><a class="header-anchor" href="#查询新建的项目">¶</a>查询新建的项目</h3><br><p>打开浏览器并前往 <a href="http://localhost:3000" target="_blank" rel="noopener">http://localhost:3000</a></p><p>这时会看到 GraphQL playground 显示在资源管理器中，其模式是准备查询。 在 Playground 的右上角，会找到一个 Docs 按钮，该按钮将打开文档绘图。 该文档是自动生成的，能帮助找到可以查询的实体和方法。</p><p>对于新的 SubQuery 入门项目，可以尝试以下查询以了解其工作原理或了解有关 GraphQL 查询语言的更多信息。</p><img src="/2021/09/25/SubQuery入门指南/5.png" width="100%" height="50%"><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  query&#123;</span><br><span class="line">    starterEntities(first:10)&#123;</span><br><span class="line">      nodes&#123;</span><br><span class="line">        field1</span><br><span class="line">        field2</span><br><span class="line">        field3</span><br><span class="line">        id</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="/2021/09/25/SubQuery入门指南/6.png" width="100%" height="50%"><br><p>现在有一个本地运行的 SubQuery 项目，该项目接受 GraphQL API 对示例数据的请求~</p><p>下一篇将向展示如何将新项目发布到 SubQuery Projects, 并使用ta们的资源管理器去查询</p><br><p>参考</p><p><a href="https://mp.weixin.qq.com/s/ymuziBgS9qr1R2_EXxdwHw" target="_blank" rel="noopener">SubQuery丨开发者快速入门指南</a></p><p><a href="https://mp.weixin.qq.com/s/6y9tHW1YPUWqjdYgnUte7Q" target="_blank" rel="noopener">SubQuery丨Hello world 入门简介</a></p><p><a href="https://mp.weixin.qq.com/s/hX-xncFOkDTG8dC9HP9VSg" target="_blank" rel="noopener">SubQuery开发者指南丨Hello World Explained</a></p><p><a href="https://mp.weixin.qq.com/s/ZIAJ1HKipaI6ZRkQ9pHIGA" target="_blank" rel="noopener">!!!SubQuery开发者指南丨清单文件（Manifest File）</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;SubQuery是波卡生态的 The Graph(以太坊生态的数据服务提供者)&lt;/p&gt;
&lt;p&gt;SubQuery可以让开发者专注于其核心用例和前端，而无需浪费时间来构建用于数据处理的后端。&lt;/p&gt;
&lt;br&gt;
&lt;h3 id=&quot;下载SubQuery-CLI&quot;&gt;&lt;a class=&quot;
      
    
    </summary>
    
    
      <category term="微服务" scheme="http://www.dashen.tech/tags/%E5%BE%AE%E6%9C%8D%E5%8A%A1/"/>
    
  </entry>
  
  <entry>
    <title>搭建substrate开发环境</title>
    <link href="http://www.dashen.tech/2021/09/19/%E6%90%AD%E5%BB%BAsubstrate%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/"/>
    <id>http://www.dashen.tech/2021/09/19/搭建substrate开发环境/</id>
    <published>2021-09-19T13:46:30.000Z</published>
    <updated>2021-09-21T08:45:29.058Z</updated>
    
    <content type="html"><![CDATA[<img src="/2021/09/19/搭建substrate开发环境/-1.png" width="100%" height="100%"><br><h3 id="安装Substrate依赖"><a class="header-anchor" href="#安装Substrate依赖">¶</a>安装Substrate依赖</h3><br><blockquote><p>curl <a href="https://getsubstrate.io/-o-" target="_blank" rel="noopener">https://getsubstrate.io/-o-</a> <a href="https://raw.githubusercontent.com/creationix/nvm/v0.33.8/install.sh" target="_blank" rel="noopener">https://raw.githubusercontent.com/creationix/nvm/v0.33.8/install.sh</a> | bash</p></blockquote><details><summary><b>实际的shell为:</b></summary><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment"># Copyright 2015-2020 Parity Technologies (UK) Ltd.</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [[ <span class="string">"<span class="variable">$OSTYPE</span>"</span> == <span class="string">"linux-gnu"</span> ]]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">set</span> -e</span><br><span class="line"><span class="keyword">if</span> [[ $(whoami) == <span class="string">"root"</span> ]]; <span class="keyword">then</span></span><br><span class="line">MAKE_ME_ROOT=</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">MAKE_ME_ROOT=sudo</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ -f /etc/redhat-release ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"Redhat Linux detected."</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"This OS is not supported with this script at present. Sorry."</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"Please refer to https://github.com/paritytech/substrate for setup information."</span></span><br><span class="line"><span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">elif</span> [ -f /etc/SuSE-release ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"Suse Linux detected."</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"This OS is not supported with this script at present. Sorry."</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"Please refer to https://github.com/paritytech/substrate for setup information."</span></span><br><span class="line"><span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">elif</span> [ -f /etc/arch-release ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"Arch Linux detected."</span></span><br><span class="line"><span class="variable">$MAKE_ME_ROOT</span> pacman -Syu --needed --noconfirm cmake gcc openssl-1.0 pkgconf git clang</span><br><span class="line"><span class="built_in">export</span> OPENSSL_LIB_DIR=<span class="string">"/usr/lib/openssl-1.0"</span>;</span><br><span class="line"><span class="built_in">export</span> OPENSSL_INCLUDE_DIR=<span class="string">"/usr/include/openssl-1.0"</span></span><br><span class="line"><span class="keyword">elif</span> [ -f /etc/mandrake-release ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"Mandrake Linux detected."</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"This OS is not supported with this script at present. Sorry."</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"Please refer to https://github.com/paritytech/substrate for setup information."</span></span><br><span class="line"><span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">elif</span> [ -f /etc/debian_version ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"Ubuntu/Debian Linux detected."</span></span><br><span class="line"><span class="variable">$MAKE_ME_ROOT</span> apt update</span><br><span class="line"><span class="variable">$MAKE_ME_ROOT</span> apt install -y cmake pkg-config libssl-dev git gcc build-essential git clang libclang-dev</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"Unknown Linux distribution."</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"This OS is not supported with this script at present. Sorry."</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"Please refer to https://github.com/paritytech/substrate for setup information."</span></span><br><span class="line"><span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">elif</span> [[ <span class="string">"<span class="variable">$OSTYPE</span>"</span> == <span class="string">"darwin"</span>* ]]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">set</span> -e</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"Mac OS (Darwin) detected."</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ! <span class="built_in">which</span> brew &gt;/dev/null 2&gt;&amp;1; <span class="keyword">then</span></span><br><span class="line">/bin/bash -c <span class="string">"<span class="variable">$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)</span>"</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">brew update</span><br><span class="line">brew install openssl cmake llvm</span><br><span class="line"><span class="keyword">elif</span> [[ <span class="string">"<span class="variable">$OSTYPE</span>"</span> == <span class="string">"freebsd"</span>* ]]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"FreeBSD detected."</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"This OS is not supported with this script at present. Sorry."</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"Please refer to https://github.com/paritytech/substrate for setup information."</span></span><br><span class="line"><span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"Unknown operating system."</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"This OS is not supported with this script at present. Sorry."</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"Please refer to https://github.com/paritytech/substrate for setup information."</span></span><br><span class="line"><span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ! <span class="built_in">which</span> rustup &gt;/dev/null 2&gt;&amp;1; <span class="keyword">then</span></span><br><span class="line">curl https://sh.rustup.rs -sSf | sh -s -- -y</span><br><span class="line"><span class="built_in">source</span> ~/.cargo/env</span><br><span class="line">rustup default stable</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">rustup update</span><br><span class="line">rustup default stable</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">rustup update nightly</span><br><span class="line">rustup target add wasm32-unknown-unknown --toolchain nightly</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [[ <span class="string">"<span class="variable">$1</span>"</span> == <span class="string">"--fast"</span> ]]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"Skipped cargo install of 'substrate' and 'subkey'"</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"You can install manually by cloning the https://github.com/paritytech/substrate repo,"</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"and using cargo to install 'substrate' and 'subkey' from the repo path."</span></span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">g=$(mktemp -d)</span><br><span class="line">git <span class="built_in">clone</span> https://github.com/paritytech/substrate <span class="string">"<span class="variable">$g</span>"</span></span><br><span class="line"><span class="built_in">pushd</span> <span class="string">"<span class="variable">$g</span>"</span></span><br><span class="line">cargo install --force --path ./bin/node/cli <span class="comment">#substrate</span></span><br><span class="line">cargo install --force --path ./bin/utils/subkey subkey</span><br><span class="line"><span class="built_in">popd</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"Run source ~/.cargo/env now to update environment"</span></span><br></pre></td></tr></table></figure></details><img src="/2021/09/19/搭建substrate开发环境/0.png" width="100%" height="100%"><p>(wasm-gc，可以压缩wasm二进制文件的大小)</p><img src="/2021/09/19/搭建substrate开发环境/1.png" width="100%" height="100%"><br><hr><br><h3 id="使用node-template"><a class="header-anchor" href="#使用node-template">¶</a>使用node template</h3><br><img src="/2021/09/19/搭建substrate开发环境/2.png" width="100%" height="100%"><blockquote><p>git clone <a href="mailto:git@github.com" target="_blank" rel="noopener">git@github.com</a>:substrate-developer-hub/substrate-node-template.git</p></blockquote><p>（cd substrate-node-template）</p><blockquote><p>cargo build --release</p></blockquote><p>(编译确实非常慢)</p><img src="/2021/09/19/搭建substrate开发环境/3.png" width="100%" height="100%"><blockquote><p>./target/release/node-template purge-chain --dev</p></blockquote><img src="/2021/09/19/搭建substrate开发环境/4.png" width="100%" height="100%"><blockquote><p>./target/release/node-template --dev</p></blockquote><img src="/2021/09/19/搭建substrate开发环境/5.png" width="100%" height="100%"><br><p>可使用 **./target/release/node-template -h ** 查看所有命令：</p><details><summary><b>./target/release/node-template -h:</b></summary><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br></pre></td><td class="code"><pre><span class="line">node-template 3.0.0-monthly-2021-09+1-3b547c9-aarch64-macos</span><br><span class="line"></span><br><span class="line">Substrate DevHub &lt;https://github.com/substrate-developer-hub&gt;</span><br><span class="line">A fresh FRAME-based Substrate node, ready <span class="keyword">for</span> hacking.</span><br><span class="line"></span><br><span class="line">USAGE:</span><br><span class="line">    node-template [FLAGS] [OPTIONS]</span><br><span class="line">    node-template &lt;SUBCOMMAND&gt;</span><br><span class="line"></span><br><span class="line">FLAGS:</span><br><span class="line">        --alice                            Shortcut <span class="keyword">for</span> `--name Alice --validator` with session keys <span class="keyword">for</span> `Alice` added</span><br><span class="line">                                           to keystore</span><br><span class="line">        --allow-private-ipv4               Always accept connecting to private IPv4 addresses (as specified <span class="keyword">in</span></span><br><span class="line">                                           [RFC1918](https://tools.ietf.org/html/rfc1918)). Enabled by default <span class="keyword">for</span></span><br><span class="line">                                           chains marked as <span class="string">"local"</span> <span class="keyword">in</span> their chain specifications, or when `--dev` is</span><br><span class="line">                                           passed</span><br><span class="line">        --bob                              Shortcut <span class="keyword">for</span> `--name Bob --validator` with session keys <span class="keyword">for</span> `Bob` added to</span><br><span class="line">                                           keystore</span><br><span class="line">        --charlie                          Shortcut <span class="keyword">for</span> `--name Charlie --validator` with session keys <span class="keyword">for</span> `Charlie`</span><br><span class="line">                                           added to keystore</span><br><span class="line">        --dave                             Shortcut <span class="keyword">for</span> `--name Dave --validator` with session keys <span class="keyword">for</span> `Dave` added to</span><br><span class="line">                                           keystore</span><br><span class="line">        --dev                              Specify the development chain</span><br><span class="line">        --<span class="built_in">disable</span>-log-color                Disable <span class="built_in">log</span> color output</span><br><span class="line">        --<span class="built_in">disable</span>-log-reloading            Disable feature to dynamically update and reload the <span class="built_in">log</span> filter</span><br><span class="line">        --discover-local                   Enable peer discovery on <span class="built_in">local</span> networks</span><br><span class="line">        --eve                              Shortcut <span class="keyword">for</span> `--name Eve --validator` with session keys <span class="keyword">for</span> `Eve` added to</span><br><span class="line">                                           keystore</span><br><span class="line">        --ferdie                           Shortcut <span class="keyword">for</span> `--name Ferdie --validator` with session keys <span class="keyword">for</span> `Ferdie` added</span><br><span class="line">                                           to keystore</span><br><span class="line">        --force-authoring                  Enable authoring even when offline</span><br><span class="line">    -h, --<span class="built_in">help</span>                             Prints <span class="built_in">help</span> information</span><br><span class="line">        --ipfs-server                      Join the IPFS network and serve transactions over bitswap protocol</span><br><span class="line">        --kademlia-disjoint-query-paths    Require iterative Kademlia DHT queries to use disjoint paths <span class="keyword">for</span> increased</span><br><span class="line">                                           resiliency <span class="keyword">in</span> the presence of potentially adversarial nodes</span><br><span class="line">        --light                            Experimental: Run <span class="keyword">in</span> light client mode</span><br><span class="line">        --no-grandpa                       Disable GRANDPA voter when running <span class="keyword">in</span> validator mode, otherwise <span class="built_in">disable</span> the</span><br><span class="line">                                           GRANDPA observer</span><br><span class="line">        --no-mdns                          Disable mDNS discovery</span><br><span class="line">        --no-private-ipv4                  Always forbid connecting to private IPv4 addresses (as specified <span class="keyword">in</span></span><br><span class="line">                                           [RFC1918](https://tools.ietf.org/html/rfc1918)), unless the address was</span><br><span class="line">                                           passed with `--reserved-nodes` or `--bootnodes`. Enabled by default <span class="keyword">for</span></span><br><span class="line">                                           chains marked as <span class="string">"live"</span> <span class="keyword">in</span> their chain specifications</span><br><span class="line">        --no-prometheus                    Do not expose a Prometheus exporter endpoint</span><br><span class="line">        --no-telemetry                     Disable connecting to the Substrate telemetry server</span><br><span class="line">        --one                              Shortcut <span class="keyword">for</span> `--name One --validator` with session keys <span class="keyword">for</span> `One` added to</span><br><span class="line">                                           keystore</span><br><span class="line">        --password-interactive             Use interactive shell <span class="keyword">for</span> entering the password used by the keystore</span><br><span class="line">        --prometheus-external              Expose Prometheus exporter on all interfaces</span><br><span class="line">        --reserved-only                    Whether to only synchronize the chain with reserved nodes</span><br><span class="line">        --rpc-external                     Listen to all RPC interfaces</span><br><span class="line">        --storage-chain                    Enable storage chain mode</span><br><span class="line">        --tmp                              Run a temporary node</span><br><span class="line">        --two                              Shortcut <span class="keyword">for</span> `--name Two --validator` with session keys <span class="keyword">for</span> `Two` added to</span><br><span class="line">                                           keystore</span><br><span class="line">        --unsafe-pruning                   Force start with unsafe pruning settings</span><br><span class="line">        --unsafe-rpc-external              Listen to all RPC interfaces</span><br><span class="line">        --unsafe-ws-external               Listen to all Websocket interfaces</span><br><span class="line">        --validator                        Enable validator mode</span><br><span class="line">    -V, --version                          Prints version information</span><br><span class="line">        --ws-external                      Listen to all Websocket interfaces</span><br><span class="line"></span><br><span class="line">OPTIONS:</span><br><span class="line">    -d, --base-path &lt;PATH&gt;                                       Specify custom base path</span><br><span class="line">        --bootnodes &lt;ADDR&gt;...                                    Specify a list of bootnodes</span><br><span class="line">        --chain &lt;CHAIN_SPEC&gt;                                     Specify the chain specification</span><br><span class="line">        --database &lt;DB&gt;</span><br><span class="line">            Select database backend to use [possible values: rocksdb, paritydb-experimental, auto]</span><br><span class="line"></span><br><span class="line">        --db-cache &lt;MiB&gt;                                         Limit the memory the database cache can use</span><br><span class="line">        --offchain-worker &lt;ENABLED&gt;</span><br><span class="line">            Should execute offchain workers on every block [default: WhenValidating]  [possible values:</span><br><span class="line">            Always, Never, WhenValidating]</span><br><span class="line">        --execution &lt;STRATEGY&gt;</span><br><span class="line">            The execution strategy that should be used by all execution contexts [possible values: Native,</span><br><span class="line">            Wasm, Both, NativeElseWasm]</span><br><span class="line">        --execution-block-construction &lt;STRATEGY&gt;</span><br><span class="line">            The means of execution used when calling into the runtime <span class="keyword">while</span> constructing blocks [possible values:</span><br><span class="line">            Native, Wasm, Both, NativeElseWasm]</span><br><span class="line">        --execution-import-block &lt;STRATEGY&gt;</span><br><span class="line">            The means of execution used when calling into the runtime <span class="keyword">for</span> general block import (including locally</span><br><span class="line">            authored blocks) [possible values: Native, Wasm, Both, NativeElseWasm]</span><br><span class="line">        --execution-offchain-worker &lt;STRATEGY&gt;</span><br><span class="line">            The means of execution used when calling into the runtime <span class="keyword">while</span> using an off-chain worker [possible values:</span><br><span class="line">            Native, Wasm, Both, NativeElseWasm]</span><br><span class="line">        --execution-other &lt;STRATEGY&gt;</span><br><span class="line">            The means of execution used when calling into the runtime <span class="keyword">while</span> not syncing, importing or constructing</span><br><span class="line">            blocks [possible values: Native, Wasm, Both, NativeElseWasm]</span><br><span class="line">        --execution-syncing &lt;STRATEGY&gt;</span><br><span class="line">            The means of execution used when calling into the runtime <span class="keyword">for</span> importing blocks as part of an initial sync</span><br><span class="line">            [possible values: Native, Wasm, Both, NativeElseWasm]</span><br><span class="line">        --<span class="keyword">in</span>-peers &lt;COUNT&gt;</span><br><span class="line">            Specify the maximum number of incoming connections we<span class="string">'re accepting [default: 25]</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        --enable-offchain-indexing &lt;ENABLE_OFFCHAIN_INDEXING&gt;</span></span><br><span class="line"><span class="string">            Enable Offchain Indexing API, which allows block import to write to Offchain DB</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        --ipc-path &lt;PATH&gt;                                        Specify IPC RPC server path</span></span><br><span class="line"><span class="string">        --keep-blocks &lt;COUNT&gt;</span></span><br><span class="line"><span class="string">            Specify the number of finalized blocks to keep in the database</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        --keystore-path &lt;PATH&gt;                                   Specify custom keystore path</span></span><br><span class="line"><span class="string">        --keystore-uri &lt;keystore-uri&gt;                            Specify custom URIs to connect to for keystore-services</span></span><br><span class="line"><span class="string">        --listen-addr &lt;LISTEN_ADDR&gt;...                           Listen on this multiaddress</span></span><br><span class="line"><span class="string">    -l, --log &lt;LOG_PATTERN&gt;...</span></span><br><span class="line"><span class="string">            Sets a custom logging filter. Syntax is &lt;target&gt;=&lt;level&gt;, e.g. -lsync=debug</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        --max-parallel-downloads &lt;COUNT&gt;</span></span><br><span class="line"><span class="string">            Maximum number of peers from which to ask for the same blocks in parallel [default: 5]</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        --max-runtime-instances &lt;max-runtime-instances&gt;          The size of the instances cache for each runtime</span></span><br><span class="line"><span class="string">        --name &lt;NAME&gt;                                            The human-readable name for this node</span></span><br><span class="line"><span class="string">        --node-key &lt;KEY&gt;                                         The secret key to use for libp2p networking</span></span><br><span class="line"><span class="string">        --node-key-file &lt;FILE&gt;</span></span><br><span class="line"><span class="string">            The file from which to read the node'</span>s secret key to use <span class="keyword">for</span> libp2p networking</span><br><span class="line"></span><br><span class="line">        --node-key-type &lt;TYPE&gt;</span><br><span class="line">            The <span class="built_in">type</span> of secret key to use <span class="keyword">for</span> libp2p networking [default: Ed25519]  [possible values:</span><br><span class="line">            Ed25519]</span><br><span class="line">        --out-peers &lt;COUNT&gt;</span><br><span class="line">            Specify the number of outgoing connections we<span class="string">'re trying to maintain [default: 25]</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        --password &lt;password&gt;</span></span><br><span class="line"><span class="string">            Password used by the keystore. This allows appending an extra user-defined secret to the seed</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        --password-filename &lt;PATH&gt;                               File that contains the password used by the keystore</span></span><br><span class="line"><span class="string">        --pool-kbytes &lt;COUNT&gt;</span></span><br><span class="line"><span class="string">            Maximum number of kilobytes of all transactions stored in the pool [default: 20480]</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        --pool-limit &lt;COUNT&gt;</span></span><br><span class="line"><span class="string">            Maximum number of transactions in the transaction pool [default: 8192]</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        --port &lt;PORT&gt;                                            Specify p2p protocol TCP port</span></span><br><span class="line"><span class="string">        --prometheus-port &lt;PORT&gt;                                 Specify Prometheus exporter TCP Port</span></span><br><span class="line"><span class="string">        --pruning &lt;PRUNING_MODE&gt;</span></span><br><span class="line"><span class="string">            Specify the state pruning mode, a number of blocks to keep or '</span>archive<span class="string">'</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        --public-addr &lt;PUBLIC_ADDR&gt;...</span></span><br><span class="line"><span class="string">            The public address that other nodes will use to connect to it. This can be used if there'</span>s a proxy <span class="keyword">in</span> front</span><br><span class="line">            of this node</span><br><span class="line">        --reserved-nodes &lt;ADDR&gt;...                               Specify a list of reserved node addresses</span><br><span class="line">        --rpc-cors &lt;ORIGINS&gt;</span><br><span class="line">            Specify browser Origins allowed to access the HTTP &amp; WS RPC servers</span><br><span class="line"></span><br><span class="line">        --rpc-http-threads &lt;COUNT&gt;                               Size of the RPC HTTP server thread pool</span><br><span class="line">        --rpc-max-payload &lt;rpc-max-payload&gt;</span><br><span class="line">            Set the the maximum RPC payload size <span class="keyword">for</span> both requests and responses (both http and ws), <span class="keyword">in</span> megabytes.</span><br><span class="line">            Default is 15MiB</span><br><span class="line">        --rpc-methods &lt;METHOD SET&gt;</span><br><span class="line">            RPC methods to expose. [default: Auto]  [possible values: Auto, Safe, Unsafe]</span><br><span class="line"></span><br><span class="line">        --rpc-port &lt;PORT&gt;                                        Specify HTTP RPC server TCP port</span><br><span class="line">        --state-cache-size &lt;Bytes&gt;                               Specify the state cache size [default: 67108864]</span><br><span class="line">        --sync &lt;SYNC_MODE&gt;                                       Blockchain syncing mode [default: Full]</span><br><span class="line">        --telemetry-url &lt;URL VERBOSITY&gt;...                       The URL of the telemetry server to connect to</span><br><span class="line">        --tracing-receiver &lt;RECEIVER&gt;</span><br><span class="line">            Receiver to process tracing messages [default: Log]  [possible values: Log]</span><br><span class="line"></span><br><span class="line">        --tracing-targets &lt;TARGETS&gt;</span><br><span class="line">            Sets a custom profiling filter. Syntax is the same as <span class="keyword">for</span> logging: &lt;target&gt;=&lt;level&gt;</span><br><span class="line"></span><br><span class="line">        --wasm-execution &lt;METHOD&gt;</span><br><span class="line">            Method <span class="keyword">for</span> executing Wasm runtime code [default: Compiled]  [possible values: interpreted-i-know-</span><br><span class="line">            what-i-do, compiled]</span><br><span class="line">        --wasm-runtime-overrides &lt;PATH&gt;                          Specify the path <span class="built_in">where</span> <span class="built_in">local</span> WASM runtimes are stored</span><br><span class="line">        --ws-max-connections &lt;COUNT&gt;                             Maximum number of WS RPC server connections</span><br><span class="line">        --ws-port &lt;PORT&gt;                                         Specify WebSockets RPC server TCP port</span><br><span class="line"></span><br><span class="line">SUBCOMMANDS:</span><br><span class="line">    benchmark        Benchmark runtime pallets.</span><br><span class="line">    build-spec       Build a chain specification</span><br><span class="line">    check-block      Validate blocks</span><br><span class="line">    <span class="built_in">export</span>-blocks    Export blocks</span><br><span class="line">    <span class="built_in">export</span>-state     Export the state of a given block into a chain spec</span><br><span class="line">    <span class="built_in">help</span>             Prints this message or the <span class="built_in">help</span> of the given subcommand(s)</span><br><span class="line">    import-blocks    Import blocks</span><br><span class="line">    key              Key management cli utilities</span><br><span class="line">    purge-chain      Remove the whole chain</span><br><span class="line">    revert           Revert the chain to a previous state</span><br></pre></td></tr></table></figure></details><br><h3 id="使用交互工具-apps"><a class="header-anchor" href="#使用交互工具-apps">¶</a>使用交互工具 apps</h3><br><h4 id="方法一，使用官方的apps："><a class="header-anchor" href="#方法一，使用官方的apps：">¶</a>方法一，使用官方的apps：</h4><p><a href="https://polkadot.js.org/apps/#/accounts" target="_blank" rel="noopener">https://polkadot.js.org/apps/#/accounts</a></p><p><a href="https://polkadot.js.org/apps/#/explorer" target="_blank" rel="noopener">https://polkadot.js.org/apps/#/explorer</a></p><img src="/2021/09/19/搭建substrate开发环境/6.png" width="100%" height="100%"><h4 id="方法二，-编译-安装本地的apps，安装步骤参考项目的readme文档"><a class="header-anchor" href="#方法二，-编译-安装本地的apps，安装步骤参考项目的readme文档">¶</a>方法二，(编译)安装本地的apps，安装步骤参考项目的readme文档</h4><p>其实是一个react的项目</p><p><a href="https://github.com/polkadot-js/apps#development" target="_blank" rel="noopener">https://github.com/polkadot-js/apps#development</a></p><br><h3 id="配置IDE"><a class="header-anchor" href="#配置IDE">¶</a>配置IDE</h3><br><h4 id="VSCode-插件"><a class="header-anchor" href="#VSCode-插件">¶</a>VSCode 插件</h4><ul><li><p>Better toml</p></li><li><p>Rust-analyzer：<a href="https://github.com/rust-analyzer/rust-analyzer" target="_blank" rel="noopener">https://github.com/rust-analyzer/rust-analyzer</a></p></li><li><p>Intellij IDEA Keybindings</p></li><li><p>Settings Sync(将配置保存到github，换机器时好同步)</p></li></ul><br><h4 id="IntelliJ-IDEA-插件："><a class="header-anchor" href="#IntelliJ-IDEA-插件：">¶</a>IntelliJ IDEA 插件：</h4><ul><li>Rust</li></ul><br><h3 id="国内资源加速-crates-io"><a class="header-anchor" href="#国内资源加速-crates-io">¶</a>国内资源加速 <a href="http://crates.io" target="_blank" rel="noopener">crates.io</a></h3><br><p><a href="https://mirrors.ustc.edu.cn/help/crates.io-index.html" target="_blank" rel="noopener">中科大Rust crates源</a>，修改 ~/.cargo/config;</p><p>（之前没有设置过，则需新建config文件）</p><p>修改如下：</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[source.crates-io]</span><br><span class="line">registry = <span class="string">"https://github.com/rust-lang/crates.io-index"</span></span><br><span class="line">replace-with = <span class="symbol">'ustc</span>'</span><br><span class="line"></span><br><span class="line">[source.ustc]</span><br><span class="line">registry = <span class="string">"git://mirrors.ustc.edu.cn/crates.io-index"</span></span><br></pre></td></tr></table></figure><br><h3 id="国内资源加速Github"><a class="header-anchor" href="#国内资源加速Github">¶</a>国内资源加速Github</h3><br><p>方法一： 使用代理</p><ul><li>Shadowsocks，通过https协议拉取最新代码</li></ul><p>方法二： 将Github的代码仓库映射到国内的代码托管网站</p><ul><li><a href="http://xn--gitee-gv5i.com" target="_blank" rel="noopener">如gitee.com</a></li></ul><br><p><a href="https://substrate.dev/docs/zh-CN/" target="_blank" rel="noopener">文档参见</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;img src=&quot;/2021/09/19/搭建substrate开发环境/-1.png&quot; width=&quot;100%&quot; height=&quot;100%&quot;&gt;
&lt;br&gt;
&lt;h3 id=&quot;安装Substrate依赖&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#安装Subs
      
    
    </summary>
    
    
      <category term="Rust" scheme="http://www.dashen.tech/tags/Rust/"/>
    
  </entry>
  
  <entry>
    <title>使用Selenium获取网站信息</title>
    <link href="http://www.dashen.tech/2021/09/18/%E4%BD%BF%E7%94%A8Selenium%E8%8E%B7%E5%8F%96%E7%BD%91%E7%AB%99%E4%BF%A1%E6%81%AF/"/>
    <id>http://www.dashen.tech/2021/09/18/使用Selenium获取网站信息/</id>
    <published>2021-09-18T13:36:16.000Z</published>
    <updated>2021-09-19T10:13:17.624Z</updated>
    
    <content type="html"><![CDATA[<p>想要爬取<a href="https://www.mingyantong.com/" target="_blank" rel="noopener">这个网站</a>的内容，先使用了Chrome<a href="https://sspai.com/post/55496" target="_blank" rel="noopener">Web Scraper插件</a> 的Element Click功能<a href="https://sspai.com/post/56718" target="_blank" rel="noopener">来获取分页数据</a>,但发现几次请求后就出现错误。</p><p>使用Go实现了该功能，获取每一页html内容，而后通过字符串匹配得到想要的信息，但发现这个网站会封禁IP&amp;对内容加盐…</p><p>不想折腾IP代理池，而直接使用 WEB自动化工具 <em>Selenium</em>,早前就见到过测试同学有使用，正好借此契机，也体验一下。</p><p>Selenium对Firefox支持较好。</p><p>另需要安装所用系统对应的<a href="https://github.com/mozilla/geckodriver/releases" target="_blank" rel="noopener">geckodriver</a>来驱动Firefox。将解压后的二进制文件所在的位置加到系统路径下。</p><p><code>juzi.py</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># !/usr/bin/env python</span></span><br><span class="line"><span class="comment"># encoding: utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">from</span> lxml <span class="keyword">import</span> etree</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_content</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">5</span>):</span><br><span class="line">        url = <span class="string">"https://www.mingyantong.com/writer/%E5%BC%A0%E7%88%B1%E7%8E%B2?page=&#123;&#125;"</span>.format(i)</span><br><span class="line"></span><br><span class="line">        browser = webdriver.Firefox()</span><br><span class="line">        browser.get(url)</span><br><span class="line"></span><br><span class="line">        html = browser.page_source</span><br><span class="line">        html = etree.HTML(html, etree.HTMLParser())</span><br><span class="line">        juzi_list = html.xpath(<span class="string">'//div[@class="view-content"]//div'</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> juzi <span class="keyword">in</span> juzi_list:</span><br><span class="line">            content = juzi.xpath(<span class="string">'./div/div/a[@class = "xlistju"]/text()'</span>)</span><br><span class="line"></span><br><span class="line">            author = juzi.xpath(<span class="string">'./div/div[@class="xqjulistwafo"]/a/text()'</span>)</span><br><span class="line"></span><br><span class="line">            book = juzi.xpath(<span class="string">'./div/div[@class="xqjulistwafo"]/span/a/text()'</span>)</span><br><span class="line"></span><br><span class="line">            all_content = &#123;</span><br><span class="line">                <span class="string">"content"</span>: content,</span><br><span class="line">                <span class="string">"author"</span>: author,</span><br><span class="line">                <span class="string">"book"</span>: book,</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> (content == [] <span class="keyword">and</span> author == [] <span class="keyword">and</span> book == []):</span><br><span class="line">            <span class="comment">#print(content,author,book)</span></span><br><span class="line">            <span class="comment">#print(all_content)</span></span><br><span class="line">            <span class="keyword">if</span> len(book) == <span class="number">0</span> :</span><br><span class="line">                print(content[<span class="number">0</span>])</span><br><span class="line">                print()</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                print(content[<span class="number">0</span>] + <span class="string">"---&lt;"</span> + book[<span class="number">0</span>] + <span class="string">"&gt;"</span>)</span><br><span class="line">                print()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    get_content()</span><br></pre></td></tr></table></figure><p>调整页码，执行<code>python3 juzi.py &gt; result.txt</code>即可~</p><br><img src="/2021/09/18/使用Selenium获取网站信息/0.png" width="100%" height="100%"><p>注: 请求频率太快，也会被该网站的防爬策略识别并封禁。建议增加适当的time.Sleep</p><br><hr><br><p>若使用<code>browser = webdriver.Chrome()</code>，需安装Chrome的驱动，<br>方法如下：</p><p><a href="https://blog.csdn.net/weixin_44318830/article/details/103339273" target="_blank" rel="noopener">解决selenium.common.exceptions.WebDriverException: Message: ‘chromedriver‘</a></p><img src="/2021/09/18/使用Selenium获取网站信息/1.png" width="100%" height="100%"><img src="/2021/09/18/使用Selenium获取网站信息/2.png" width="100%" height="100%"><br><p>关于selenium，更多操作可参考</p><p><a href="https://www.cnblogs.com/saryli/p/5182811.html" target="_blank" rel="noopener">python selenium --browser 操作</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;想要爬取&lt;a href=&quot;https://www.mingyantong.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;这个网站&lt;/a&gt;的内容，先使用了Chrome&lt;a href=&quot;https://sspai.com/post/55496&quot; ta
      
    
    </summary>
    
    
      <category term="Tools" scheme="http://www.dashen.tech/tags/Tools/"/>
    
  </entry>
  
  <entry>
    <title>Rust vs Go:常用语法对比(13)</title>
    <link href="http://www.dashen.tech/2021/09/14/Rust-vs-Go-%E5%B8%B8%E7%94%A8%E8%AF%AD%E6%B3%95%E5%AF%B9%E6%AF%94-13/"/>
    <id>http://www.dashen.tech/2021/09/14/Rust-vs-Go-常用语法对比-13/</id>
    <published>2021-09-14T15:43:58.000Z</published>
    <updated>2021-12-13T15:21:37.259Z</updated>
    
    <content type="html"><![CDATA[<br><h3 id="241-font-color-0c0a3e-Yield-priority-to-other-threads-font"><a class="header-anchor" href="#241-font-color-0c0a3e-Yield-priority-to-other-threads-font">¶</a>241. <font color="0c0a3e">Yield priority to other threads</font></h3><blockquote><p>Explicitly decrease the priority of the current process, so that other execution threads have a better chance to execute now. Then resume normal execution and call function <strong>busywork</strong>.</p></blockquote><p><em>将优先权让给其他线程</em></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line"><span class="string">"runtime"</span></span><br><span class="line"><span class="string">"time"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">go</span> fmt.Println(<span class="string">"aaa"</span>)</span><br><span class="line"><span class="keyword">go</span> fmt.Println(<span class="string">"bbb"</span>)</span><br><span class="line"><span class="keyword">go</span> fmt.Println(<span class="string">"ccc"</span>)</span><br><span class="line"><span class="keyword">go</span> fmt.Println(<span class="string">"ddd"</span>)</span><br><span class="line"><span class="keyword">go</span> fmt.Println(<span class="string">"eee"</span>)</span><br><span class="line"></span><br><span class="line">runtime.Gosched()</span><br><span class="line">busywork()</span><br><span class="line"></span><br><span class="line">time.Sleep(<span class="number">100</span> * time.Millisecond)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">busywork</span><span class="params">()</span></span> &#123;</span><br><span class="line">fmt.Println(<span class="string">"main"</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>After Gosched, the execution of the current goroutine resumes automatically.</strong></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">aaa</span><br><span class="line">eee</span><br><span class="line">ccc</span><br><span class="line">bbb</span><br><span class="line">ddd</span><br><span class="line">main</span><br></pre></td></tr></table></figure><hr><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">::std::thread::yield_now();</span><br><span class="line">busywork();</span><br></pre></td></tr></table></figure><br><h3 id="242-font-color-0c0a3e-Iterate-over-a-set-font"><a class="header-anchor" href="#242-font-color-0c0a3e-Iterate-over-a-set-font">¶</a>242. <font color="0c0a3e">Iterate over a set</font></h3><blockquote><p>Call a function f on each element e of a set x.</p></blockquote><p><em>迭代一个集合</em></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> T <span class="keyword">string</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="comment">// declare a Set (implemented as a map)</span></span><br><span class="line">x := <span class="built_in">make</span>(<span class="keyword">map</span>[T]<span class="keyword">bool</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// add some elements</span></span><br><span class="line">x[<span class="string">"A"</span>] = <span class="literal">true</span></span><br><span class="line">x[<span class="string">"B"</span>] = <span class="literal">true</span></span><br><span class="line">x[<span class="string">"B"</span>] = <span class="literal">true</span></span><br><span class="line">x[<span class="string">"C"</span>] = <span class="literal">true</span></span><br><span class="line">x[<span class="string">"D"</span>] = <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// remove an element</span></span><br><span class="line"><span class="built_in">delete</span>(x, <span class="string">"C"</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> e := <span class="keyword">range</span> x &#123;</span><br><span class="line">f(e)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">f</span><span class="params">(e T)</span></span> &#123;</span><br><span class="line">fmt.Printf(<span class="string">"contains element %v \n"</span>, e)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">contains element A </span><br><span class="line">contains element B </span><br><span class="line">contains element D</span><br></pre></td></tr></table></figure><hr><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">use</span> std::collections::HashSet;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">fn</span> <span class="title">main</span></span>() &#123;</span><br><span class="line">    <span class="keyword">let</span> <span class="keyword">mut</span> x = HashSet::new();</span><br><span class="line">    x.insert(<span class="string">"a"</span>);</span><br><span class="line">    x.insert(<span class="string">"b"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> item <span class="keyword">in</span> &amp;x &#123;</span><br><span class="line">        f(item);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">fn</span> <span class="title">f</span></span>(s: &amp;&amp;<span class="built_in">str</span>) &#123;</span><br><span class="line">    <span class="built_in">println!</span>(<span class="string">"Element &#123;&#125;"</span>, s);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>x is a HashSet</strong></p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Element a</span><br><span class="line">Element b</span><br></pre></td></tr></table></figure><br><h3 id="243-font-color-0c0a3e-Print-list-font"><a class="header-anchor" href="#243-font-color-0c0a3e-Print-list-font">¶</a>243. <font color="0c0a3e">Print list</font></h3><blockquote><p>Print the contents of list a on the standard output.</p></blockquote><p><em>打印 list</em></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">&#123;</span><br><span class="line">a := []<span class="keyword">int</span>&#123;<span class="number">11</span>, <span class="number">22</span>, <span class="number">33</span>&#125;</span><br><span class="line">fmt.Println(a)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">a := []<span class="keyword">string</span>&#123;<span class="string">"aa"</span>, <span class="string">"bb"</span>&#125;</span><br><span class="line">fmt.Println(a)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">type</span> Person <span class="keyword">struct</span> &#123;</span><br><span class="line">First <span class="keyword">string</span></span><br><span class="line">Last  <span class="keyword">string</span></span><br><span class="line">&#125;</span><br><span class="line">x := Person&#123;</span><br><span class="line">First: <span class="string">"Jane"</span>,</span><br><span class="line">Last:  <span class="string">"Doe"</span>,</span><br><span class="line">&#125;</span><br><span class="line">y := Person&#123;</span><br><span class="line">First: <span class="string">"John"</span>,</span><br><span class="line">Last:  <span class="string">"Doe"</span>,</span><br><span class="line">&#125;</span><br><span class="line">a := []Person&#123;x, y&#125;</span><br><span class="line">fmt.Println(a)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">x, y := <span class="number">11</span>, <span class="number">22</span></span><br><span class="line">a := []*<span class="keyword">int</span>&#123;&amp;x, &amp;y&#125;</span><br><span class="line">fmt.Println(a)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[<span class="number">11</span> <span class="number">22</span> <span class="number">33</span>]</span><br><span class="line">[aa bb]</span><br><span class="line">[&#123;Jane Doe&#125; &#123;John Doe&#125;]</span><br><span class="line">[<span class="number">0xc000018080</span> <span class="number">0xc000018088</span>]</span><br></pre></td></tr></table></figure><hr><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fn</span> <span class="title">main</span></span>() &#123;</span><br><span class="line">    <span class="keyword">let</span> a = [<span class="number">11</span>, <span class="number">22</span>, <span class="number">33</span>];</span><br><span class="line"></span><br><span class="line">    <span class="built_in">println!</span>(<span class="string">"&#123;:?&#125;"</span>, a);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>[11, 22, 33]</code></p><br><h3 id="244-font-color-0c0a3e-Print-map-font"><a class="header-anchor" href="#244-font-color-0c0a3e-Print-map-font">¶</a>244. <font color="0c0a3e">Print map</font></h3><blockquote><p>Print the contents of map m to the standard output: keys and values.</p></blockquote><p><em>打印 map</em></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">&#123;</span><br><span class="line">m := <span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">int</span>&#123;</span><br><span class="line"><span class="string">"eleven"</span>:     <span class="number">11</span>,</span><br><span class="line"><span class="string">"twenty-two"</span>: <span class="number">22</span>,</span><br><span class="line">&#125;</span><br><span class="line">fmt.Println(m)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">x, y := <span class="number">7</span>, <span class="number">8</span></span><br><span class="line">m := <span class="keyword">map</span>[<span class="keyword">string</span>]*<span class="keyword">int</span>&#123;</span><br><span class="line"><span class="string">"seven"</span>: &amp;x,</span><br><span class="line"><span class="string">"eight"</span>: &amp;y,</span><br><span class="line">&#125;</span><br><span class="line">fmt.Println(m)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">map</span>[eleven:<span class="number">11</span> twenty-two:<span class="number">22</span>]</span><br><span class="line"><span class="keyword">map</span>[eight:<span class="number">0xc000100040</span> seven:<span class="number">0xc000100028</span>]</span><br></pre></td></tr></table></figure><hr><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">use</span> std::collections::HashMap;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">fn</span> <span class="title">main</span></span>() &#123;</span><br><span class="line">    <span class="keyword">let</span> <span class="keyword">mut</span> m = HashMap::new();</span><br><span class="line">    m.insert(<span class="string">"Áron"</span>.to_string(), <span class="number">23</span>);</span><br><span class="line">    m.insert(<span class="string">"Béla"</span>.to_string(), <span class="number">35</span>);</span><br><span class="line">    <span class="built_in">println!</span>(<span class="string">"&#123;:?&#125;"</span>, m);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>{&quot;Béla&quot;: 35, &quot;Áron&quot;: 23}</code></p><br><h3 id="245-font-color-0c0a3e-Print-value-of-custom-type-font"><a class="header-anchor" href="#245-font-color-0c0a3e-Print-value-of-custom-type-font">¶</a>245. <font color="0c0a3e">Print value of custom type</font></h3><blockquote><p>Print the value of object x having custom type T, for log or debug.</p></blockquote><p><em>打印自定义类型的值</em></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">// T represents a tank. It doesn't implement fmt.Stringer.</span></span><br><span class="line"><span class="keyword">type</span> T <span class="keyword">struct</span> &#123;</span><br><span class="line">name      <span class="keyword">string</span></span><br><span class="line">weight    <span class="keyword">int</span></span><br><span class="line">firePower <span class="keyword">int</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Person implement fmt.Stringer.</span></span><br><span class="line"><span class="keyword">type</span> Person <span class="keyword">struct</span> &#123;</span><br><span class="line">FirstName   <span class="keyword">string</span></span><br><span class="line">LastName    <span class="keyword">string</span></span><br><span class="line">YearOfBirth <span class="keyword">int</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(p Person)</span> <span class="title">String</span><span class="params">()</span> <span class="title">string</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> fmt.Sprintf(<span class="string">"%s %s, born %d"</span>, p.FirstName, p.LastName, p.YearOfBirth)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">&#123;</span><br><span class="line">x := T&#123;</span><br><span class="line">name:      <span class="string">"myTank"</span>,</span><br><span class="line">weight:    <span class="number">100</span>,</span><br><span class="line">firePower: <span class="number">90</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">fmt.Println(x)</span><br><span class="line">&#125;</span><br><span class="line">&#123;</span><br><span class="line">x := Person&#123;</span><br><span class="line">FirstName:   <span class="string">"John"</span>,</span><br><span class="line">LastName:    <span class="string">"Doe"</span>,</span><br><span class="line">YearOfBirth: <span class="number">1958</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">fmt.Println(x)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><em>Will be more relevant if T implements fmt.Stringer</em></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;myTank <span class="number">100</span> <span class="number">90</span>&#125;</span><br><span class="line">John Doe, born <span class="number">1958</span></span><br></pre></td></tr></table></figure><hr><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#[derive(Debug)]</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// T represents a tank</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">T</span></span>&lt;<span class="symbol">'a</span>&gt; &#123;</span><br><span class="line">    name: &amp;<span class="symbol">'a</span> <span class="built_in">str</span>,</span><br><span class="line">    weight: &amp;<span class="symbol">'a</span> <span class="built_in">i32</span>,</span><br><span class="line">    fire_power: &amp;<span class="symbol">'a</span> <span class="built_in">i32</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">fn</span> <span class="title">main</span></span>() &#123;</span><br><span class="line">    <span class="keyword">let</span> x = T &#123;</span><br><span class="line">        name: <span class="string">"mytank"</span>,</span><br><span class="line">        weight: &amp;<span class="number">100</span>,</span><br><span class="line">        fire_power: &amp;<span class="number">90</span>,</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">println!</span>(<span class="string">"&#123;:?&#125;"</span>, x);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><em>Implement fmt::Debug or fmt::Display for T</em></p><p><code>T { name: &quot;mytank&quot;, weight: 100, fire_power: 90 }</code></p><br><h3 id="246-font-color-0c0a3e-Count-distinct-elements-font"><a class="header-anchor" href="#246-font-color-0c0a3e-Count-distinct-elements-font">¶</a>246. <font color="0c0a3e">Count distinct elements</font></h3><blockquote><p>Set c to the number of distinct elements in list items.</p></blockquote><p><em>计算不同的元素的数量</em></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">type</span> T <span class="keyword">string</span></span><br><span class="line">items := []T&#123;<span class="string">"a"</span>, <span class="string">"b"</span>, <span class="string">"b"</span>, <span class="string">"aaa"</span>, <span class="string">"c"</span>, <span class="string">"a"</span>, <span class="string">"d"</span>&#125;</span><br><span class="line">fmt.Println(<span class="string">"items has"</span>, <span class="built_in">len</span>(items), <span class="string">"elements"</span>)</span><br><span class="line"></span><br><span class="line">distinct := <span class="built_in">make</span>(<span class="keyword">map</span>[T]<span class="keyword">bool</span>)</span><br><span class="line"><span class="keyword">for</span> _, v := <span class="keyword">range</span> items &#123;</span><br><span class="line">distinct[v] = <span class="literal">true</span></span><br><span class="line">&#125;</span><br><span class="line">c := <span class="built_in">len</span>(distinct)</span><br><span class="line"></span><br><span class="line">fmt.Println(<span class="string">"items has"</span>, c, <span class="string">"distinct elements"</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">items has <span class="number">7</span> elements</span><br><span class="line">items has <span class="number">5</span> distinct elements</span><br></pre></td></tr></table></figure><hr><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">use</span> itertools::Itertools;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">fn</span> <span class="title">main</span></span>() &#123;</span><br><span class="line">    <span class="keyword">let</span> items = <span class="built_in">vec!</span>[<span class="string">"víz"</span>, <span class="string">"árvíz"</span>, <span class="string">"víz"</span>, <span class="string">"víz"</span>, <span class="string">"ár"</span>, <span class="string">"árvíz"</span>];</span><br><span class="line">    <span class="keyword">let</span> c = items.iter().unique().count();</span><br><span class="line">    <span class="built_in">println!</span>(<span class="string">"&#123;&#125;"</span>, c);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>3</code></p><br><h3 id="247-font-color-0c0a3e-Filter-list-in-place-font"><a class="header-anchor" href="#247-font-color-0c0a3e-Filter-list-in-place-font">¶</a>247. <font color="0c0a3e">Filter list in-place</font></h3><blockquote></blockquote><p>Remove all the elements from list x that don’t satisfy the predicate p, without allocating a new list.<br>Keep all the elements that do satisfy p.<br>For languages that don’t have mutable lists, refer to idiom #57 instead.</p><p><em>就地筛选列表</em></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> T <span class="keyword">int</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">x := []T&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>&#125;</span><br><span class="line">p := <span class="function"><span class="keyword">func</span><span class="params">(t T)</span> <span class="title">bool</span></span> &#123; <span class="keyword">return</span> t%<span class="number">2</span> == <span class="number">0</span> &#125;</span><br><span class="line"></span><br><span class="line">j := <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i, v := <span class="keyword">range</span> x &#123;</span><br><span class="line"><span class="keyword">if</span> p(v) &#123;</span><br><span class="line">x[j] = x[i]</span><br><span class="line">j++</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">x = x[:j]</span><br><span class="line"></span><br><span class="line">fmt.Println(x)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>[2 4 6 8 10]</code></p><p>or</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> T <span class="keyword">int</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> x []*T</span><br><span class="line"><span class="keyword">for</span> _, v := <span class="keyword">range</span> []T&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>&#125; &#123;</span><br><span class="line">t := <span class="built_in">new</span>(T)</span><br><span class="line">*t = v</span><br><span class="line">x = <span class="built_in">append</span>(x, t)</span><br><span class="line">&#125;</span><br><span class="line">p := <span class="function"><span class="keyword">func</span><span class="params">(t *T)</span> <span class="title">bool</span></span> &#123; <span class="keyword">return</span> *t%<span class="number">2</span> == <span class="number">0</span> &#125;</span><br><span class="line"></span><br><span class="line">j := <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i, v := <span class="keyword">range</span> x &#123;</span><br><span class="line"><span class="keyword">if</span> p(v) &#123;</span><br><span class="line">x[j] = x[i]</span><br><span class="line">j++</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> k := j; k &lt; <span class="built_in">len</span>(x); k++ &#123;</span><br><span class="line">x[k] = <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line">x = x[:j]</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> _, pt := <span class="keyword">range</span> x &#123;</span><br><span class="line">fmt.Print(*pt, <span class="string">" "</span>)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>2 4 6 8 10</code></p><hr><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fn</span> <span class="title">p</span></span>(t: <span class="built_in">i32</span>) -&gt; <span class="built_in">bool</span> &#123;</span><br><span class="line">    t % <span class="number">2</span> == <span class="number">0</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">fn</span> <span class="title">main</span></span>() &#123;</span><br><span class="line">    <span class="keyword">let</span> <span class="keyword">mut</span> x = <span class="built_in">vec!</span>[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>];</span><br><span class="line">    <span class="keyword">let</span> <span class="keyword">mut</span> j = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="number">0</span>..x.len() &#123;</span><br><span class="line">        <span class="keyword">if</span> p(x[i]) &#123;</span><br><span class="line">            x[j] = x[i];</span><br><span class="line">            j += <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    x.truncate(j);</span><br><span class="line">    <span class="built_in">println!</span>(<span class="string">"&#123;:?&#125;"</span>, x);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>[2, 4, 6, 8, 10]</code></p><p>or</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fn</span> <span class="title">p</span></span>(t: &amp;<span class="built_in">i64</span>) -&gt; <span class="built_in">bool</span> &#123;</span><br><span class="line">    t % <span class="number">2</span> == <span class="number">0</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">fn</span> <span class="title">main</span></span>() &#123;</span><br><span class="line">    <span class="keyword">let</span> <span class="keyword">mut</span> x: <span class="built_in">Vec</span>&lt;<span class="built_in">i64</span>&gt; = <span class="built_in">vec!</span>[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>];</span><br><span class="line"></span><br><span class="line">    x.retain(p);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">println!</span>(<span class="string">"&#123;:?&#125;"</span>, x);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>[2, 4, 6, 8, 10]</code></p><br><h3 id="249-font-color-0c0a3e-Declare-and-assign-multiple-variables-font"><a class="header-anchor" href="#249-font-color-0c0a3e-Declare-and-assign-multiple-variables-font">¶</a>249. <font color="0c0a3e">Declare and assign multiple variables</font></h3><blockquote><p>Define variables a, b and c in a concise way.<br>Explain if they need to have the same type.</p></blockquote><p><em>声明并分配多个变量</em></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="comment">// a, b and c don't need to have the same type.</span></span><br><span class="line"></span><br><span class="line">a, b, c := <span class="number">42</span>, <span class="string">"hello"</span>, <span class="number">5.0</span></span><br><span class="line"></span><br><span class="line">fmt.Println(a, b, c)</span><br><span class="line">fmt.Printf(<span class="string">"%T %T %T \n"</span>, a, b, c)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">42</span> hello <span class="number">5</span></span><br><span class="line"><span class="keyword">int</span> <span class="keyword">string</span> <span class="keyword">float64</span></span><br></pre></td></tr></table></figure><hr><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fn</span> <span class="title">main</span></span>() &#123;</span><br><span class="line">    <span class="comment">// a, b and c don't need to have the same type.</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> (a, b, c) = (<span class="number">42</span>, <span class="string">"hello"</span>, <span class="number">5.0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">println!</span>(<span class="string">"&#123;&#125; &#123;&#125; &#123;&#125;"</span>, a, b, c);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>42 hello 5</code></p><br><h3 id="251-font-color-0c0a3e-Parse-binary-digits-font"><a class="header-anchor" href="#251-font-color-0c0a3e-Parse-binary-digits-font">¶</a>251. <font color="0c0a3e">Parse binary digits</font></h3><blockquote><p>Extract integer value i from its binary string representation s (in radix 2)<br>E.g. “1101” -&gt; 13</p></blockquote><p><em>解析二进制数字</em></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line"><span class="string">"reflect"</span></span><br><span class="line"><span class="string">"strconv"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">s := <span class="string">"1101"</span></span><br><span class="line">fmt.Println(<span class="string">"s is"</span>, reflect.TypeOf(s), s)</span><br><span class="line"></span><br><span class="line">i, err := strconv.ParseInt(s, <span class="number">2</span>, <span class="number">0</span>)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="built_in">panic</span>(err)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">fmt.Println(<span class="string">"i is"</span>, reflect.TypeOf(i), i)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">s is <span class="keyword">string</span> <span class="number">1101</span></span><br><span class="line">i is <span class="keyword">int64</span> <span class="number">13</span></span><br></pre></td></tr></table></figure><hr><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fn</span> <span class="title">main</span></span>() &#123;</span><br><span class="line">    <span class="keyword">let</span> s = <span class="string">"1101"</span>; <span class="comment">// binary digits</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">let</span> i = <span class="built_in">i32</span>::from_str_radix(s, <span class="number">2</span>).expect(<span class="string">"Not a binary number!"</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">println!</span>(<span class="string">"&#123;&#125;"</span>, i);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>13</code></p><br><h3 id="252-font-color-0c0a3e-Conditional-assignment-font"><a class="header-anchor" href="#252-font-color-0c0a3e-Conditional-assignment-font">¶</a>252. <font color="0c0a3e">Conditional assignment</font></h3><blockquote><p>Assign to variable x the value “a” if calling the function condition returns true, or the value “b” otherwise.</p></blockquote><p><em>条件赋值</em></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> x <span class="keyword">string</span></span><br><span class="line"><span class="keyword">if</span> condition() &#123;</span><br><span class="line">x = <span class="string">"a"</span></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">x = <span class="string">"b"</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">fmt.Println(x)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">condition</span><span class="params">()</span> <span class="title">bool</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">"Scorates"</span> == <span class="string">"dog"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>b</code></p><hr><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">x = <span class="keyword">if</span> condition() &#123; <span class="string">"a"</span> &#125; <span class="keyword">else</span> &#123; <span class="string">"b"</span> &#125;;</span><br></pre></td></tr></table></figure><br><h3 id="258-font-color-0c0a3e-Convert-list-of-strings-to-list-of-integers-font"><a class="header-anchor" href="#258-font-color-0c0a3e-Convert-list-of-strings-to-list-of-integers-font">¶</a>258. <font color="0c0a3e">Convert list of strings to list of integers</font></h3><blockquote><p>Convert the string values from list a into a list of integers b.</p></blockquote><p><em>将字符串列表转换为整数列表</em></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line"><span class="string">"strconv"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">a := []<span class="keyword">string</span>&#123;<span class="string">"11"</span>, <span class="string">"22"</span>, <span class="string">"33"</span>&#125;</span><br><span class="line"></span><br><span class="line">b := <span class="built_in">make</span>([]<span class="keyword">int</span>, <span class="built_in">len</span>(a))</span><br><span class="line"><span class="keyword">var</span> err error</span><br><span class="line"><span class="keyword">for</span> i, s := <span class="keyword">range</span> a &#123;</span><br><span class="line">b[i], err = strconv.Atoi(s)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="built_in">panic</span>(err)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">fmt.Println(b)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>[11 22 33]</code></p><hr><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fn</span> <span class="title">main</span></span>() &#123;</span><br><span class="line">    <span class="keyword">let</span> a: <span class="built_in">Vec</span>&lt;&amp;<span class="built_in">str</span>&gt; = <span class="built_in">vec!</span>[<span class="string">"11"</span>, <span class="string">"-22"</span>, <span class="string">"33"</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> b: <span class="built_in">Vec</span>&lt;<span class="built_in">i64</span>&gt; = a.iter().map(|x| x.parse::&lt;<span class="built_in">i64</span>&gt;().unwrap()).collect();</span><br><span class="line"></span><br><span class="line">    <span class="built_in">println!</span>(<span class="string">"&#123;:?&#125;"</span>, b);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>[11, -22, 33]</code></p><br><h3 id="259-font-color-0c0a3e-Split-on-several-separators-font"><a class="header-anchor" href="#259-font-color-0c0a3e-Split-on-several-separators-font">¶</a>259. <font color="0c0a3e">Split on several separators</font></h3><blockquote><p>Build list parts consisting of substrings of input string s, separated by any of the characters ‘,’ (comma), ‘-’ (dash), ‘_’ (underscore).</p></blockquote><p><em>在几个分隔符上拆分</em></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line"><span class="string">"regexp"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">s := <span class="string">"2021-03-11,linux_amd64"</span></span><br><span class="line"></span><br><span class="line">re := regexp.MustCompile(<span class="string">"[,\\-_]"</span>)</span><br><span class="line">parts := re.Split(s, <span class="number">-1</span>)</span><br><span class="line"></span><br><span class="line">fmt.Printf(<span class="string">"%q"</span>, parts)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>[&quot;2021&quot; &quot;03&quot; &quot;11&quot; &quot;linux&quot; &quot;amd64&quot;]</code></p><hr><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fn</span> <span class="title">main</span></span>() &#123;</span><br><span class="line">    <span class="keyword">let</span> s = <span class="string">"2021-03-11,linux_amd64"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> parts: <span class="built_in">Vec</span>&lt;_&gt; = s.split(&amp;[<span class="string">','</span>, <span class="string">'-'</span>, <span class="string">'_'</span>][..]).collect();</span><br><span class="line"></span><br><span class="line">    <span class="built_in">println!</span>(<span class="string">"&#123;:?&#125;"</span>, parts);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>[&quot;2021&quot;, &quot;03&quot;, &quot;11&quot;, &quot;linux&quot;, &quot;amd64&quot;]</code></p><br><h3 id="266-font-color-0c0a3e-Repeating-string-font"><a class="header-anchor" href="#266-font-color-0c0a3e-Repeating-string-font">¶</a>266. <font color="0c0a3e">Repeating string</font></h3><blockquote><p>Assign to string s the value of string v, repeated n times and write it out.<br>E.g. v=“abc”, n=5 ⇒ s=“abcabcabcabcabc”</p></blockquote><p><em>重复字符串</em></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line"><span class="string">"strings"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">v := <span class="string">"abc"</span></span><br><span class="line">n := <span class="number">5</span></span><br><span class="line"></span><br><span class="line">s := strings.Repeat(v, n)</span><br><span class="line"></span><br><span class="line">fmt.Println(s)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>abcabcabcabcabc</code></p><hr><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fn</span> <span class="title">main</span></span>() &#123;</span><br><span class="line">    <span class="keyword">let</span> v = <span class="string">"abc"</span>;</span><br><span class="line">    <span class="keyword">let</span> n = <span class="number">5</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> s = v.repeat(n);</span><br><span class="line">    <span class="built_in">println!</span>(<span class="string">"&#123;&#125;"</span>, s);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>abcabcabcabcabc</code></p><br>]]></content>
    
    <summary type="html">
    
      
      
        &lt;br&gt;
&lt;h3 id=&quot;241-font-color-0c0a3e-Yield-priority-to-other-threads-font&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#241-font-color-0c0a3e-Yield-priorit
      
    
    </summary>
    
    
      <category term="Rust" scheme="http://www.dashen.tech/tags/Rust/"/>
    
  </entry>
  
  <entry>
    <title>Rust vs Go:常用语法对比(12)</title>
    <link href="http://www.dashen.tech/2021/09/13/Rust-vs-Go-%E5%B8%B8%E7%94%A8%E8%AF%AD%E6%B3%95%E5%AF%B9%E6%AF%94-12/"/>
    <id>http://www.dashen.tech/2021/09/13/Rust-vs-Go-常用语法对比-12/</id>
    <published>2021-09-13T14:43:58.000Z</published>
    <updated>2021-09-21T02:56:54.270Z</updated>
    
    <content type="html"><![CDATA[<br><h3 id="221-font-color-0c0a3e-Remove-all-non-digits-characters-font"><a class="header-anchor" href="#221-font-color-0c0a3e-Remove-all-non-digits-characters-font">¶</a>221. <font color="0c0a3e">Remove all non-digits characters</font></h3><blockquote><p>Create string t from string s, keeping only digit characters 0, 1, 2, 3, 4, 5, 6, 7, 8, 9.</p></blockquote><p><em>删除所有非数字字符</em></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line"><span class="string">"regexp"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">s := <span class="string">`height="168px"`</span></span><br><span class="line"></span><br><span class="line">re := regexp.MustCompile(<span class="string">"[^\\d]"</span>)</span><br><span class="line">t := re.ReplaceAllLiteralString(s, <span class="string">""</span>)</span><br><span class="line"></span><br><span class="line">fmt.Println(t)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>168</code></p><hr><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fn</span> <span class="title">main</span></span>() &#123;</span><br><span class="line">    <span class="keyword">let</span> t: <span class="built_in">String</span> = <span class="string">"Today is the 14th of July"</span></span><br><span class="line">        .chars()</span><br><span class="line">        .filter(|c| c.is_digit(<span class="number">10</span>))</span><br><span class="line">        .collect();</span><br><span class="line"></span><br><span class="line">    dbg!(t);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>[src/main.rs:7] t = &quot;14&quot;</code></p><br><h3 id="222-font-color-0c0a3e-Find-first-index-of-an-element-in-list-font"><a class="header-anchor" href="#222-font-color-0c0a3e-Find-first-index-of-an-element-in-list-font">¶</a>222. <font color="0c0a3e">Find first index of an element in list</font></h3><blockquote><p>Set i to the first index in list items at which the element x can be found, or -1 if items does not contain x.</p></blockquote><p><em>在列表中查找元素的第一个索引</em></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">items := []<span class="keyword">string</span>&#123;<span class="string">"huey"</span>, <span class="string">"dewey"</span>, <span class="string">"louie"</span>&#125;</span><br><span class="line">x := <span class="string">"dewey"</span></span><br><span class="line"></span><br><span class="line">i := <span class="number">-1</span></span><br><span class="line"><span class="keyword">for</span> j, e := <span class="keyword">range</span> items &#123;</span><br><span class="line"><span class="keyword">if</span> e == x &#123;</span><br><span class="line">i = j</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">fmt.Printf(<span class="string">"Found %q at position %d in %q"</span>, x, i, items)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>Found &quot;dewey&quot; at position 1 in [&quot;huey&quot; &quot;dewey&quot; &quot;louie&quot;]</code></p><hr><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fn</span> <span class="title">main</span></span>() &#123;</span><br><span class="line">    <span class="keyword">let</span> items = [<span class="string">'A'</span>, '🎂', <span class="string">'㍗'</span>];</span><br><span class="line">    <span class="keyword">let</span> x = '💩';</span><br><span class="line"></span><br><span class="line">    <span class="keyword">match</span> items.iter().position(|y| *y == x) &#123;</span><br><span class="line">        <span class="literal">Some</span>(i) =&gt; <span class="built_in">println!</span>(<span class="string">"Found &#123;&#125; at position &#123;&#125;."</span>, x, i),</span><br><span class="line">        <span class="literal">None</span> =&gt; <span class="built_in">println!</span>(<span class="string">"There is no &#123;&#125; in the list."</span>, x),</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>There is no 💩 in the list.</code></p><p>or</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fn</span> <span class="title">main</span></span>() &#123;</span><br><span class="line">    <span class="keyword">let</span> items = [<span class="number">42</span>, -<span class="number">3</span>, <span class="number">12</span>];</span><br><span class="line"></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">let</span> x = <span class="number">12</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> i = items.iter().position(|y| *y == x).map_or(-<span class="number">1</span>, |n| n <span class="keyword">as</span> <span class="built_in">i32</span>);</span><br><span class="line"></span><br><span class="line">        <span class="built_in">println!</span>(<span class="string">"&#123;&#125; =&gt; &#123;&#125;"</span>, x, i)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">let</span> x = <span class="number">13</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> i = items.iter().position(|y| *y == x).map_or(-<span class="number">1</span>, |n| n <span class="keyword">as</span> <span class="built_in">i32</span>);</span><br><span class="line"></span><br><span class="line">        <span class="built_in">println!</span>(<span class="string">"&#123;&#125; =&gt; &#123;&#125;"</span>, x, i)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">12</span> =&gt; <span class="number">2</span></span><br><span class="line"><span class="number">13</span> =&gt; -<span class="number">1</span></span><br></pre></td></tr></table></figure><br><h3 id="223-font-color-0c0a3e-for-else-loop-font"><a class="header-anchor" href="#223-font-color-0c0a3e-for-else-loop-font">¶</a>223. <font color="0c0a3e">for else loop</font></h3><blockquote><p>Loop through list items checking a condition. Do something else if no matches are found.<br>A typical use case is looping through a series of containers looking for one that matches a condition. If found, an item is inserted; otherwise, a new container is created.<br>These are mostly used as an inner nested loop, and in a location where refactoring inner logic into a separate function reduces clarity.</p></blockquote><p><em>for else循环</em></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">items := []<span class="keyword">string</span>&#123;<span class="string">"foo"</span>, <span class="string">"bar"</span>, <span class="string">"baz"</span>, <span class="string">"qux"</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> _, item := <span class="keyword">range</span> items &#123;</span><br><span class="line"><span class="keyword">if</span> item == <span class="string">"baz"</span> &#123;</span><br><span class="line">fmt.Println(<span class="string">"found it"</span>)</span><br><span class="line"><span class="keyword">goto</span> forelse</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#123;</span><br><span class="line">fmt.Println(<span class="string">"never found it"</span>)</span><br><span class="line">&#125;</span><br><span class="line">        forelse:</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>found it</code></p><hr><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fn</span> <span class="title">main</span></span>() &#123;</span><br><span class="line">    <span class="keyword">let</span> items: &amp;[&amp;<span class="built_in">str</span>] = &amp;[<span class="string">"foo"</span>, <span class="string">"bar"</span>, <span class="string">"baz"</span>, <span class="string">"qux"</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> <span class="keyword">mut</span> found = <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">for</span> item <span class="keyword">in</span> items &#123;</span><br><span class="line">        <span class="keyword">if</span> item == &amp;<span class="string">"baz"</span> &#123;</span><br><span class="line">            <span class="built_in">println!</span>(<span class="string">"found it"</span>);</span><br><span class="line">            found = <span class="literal">true</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> !found &#123;</span><br><span class="line">        <span class="built_in">println!</span>(<span class="string">"never found it"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>found it</code></p><p>or</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fn</span> <span class="title">main</span></span>() &#123;</span><br><span class="line">     <span class="keyword">let</span> items: &amp;[&amp;<span class="built_in">str</span>] = &amp;[<span class="string">"foo"</span>, <span class="string">"bar"</span>, <span class="string">"baz"</span>, <span class="string">"qux"</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">let</span> <span class="literal">None</span> = items.iter().find(|&amp;&amp;item| item == <span class="string">"rockstar programmer"</span>) &#123;</span><br><span class="line">        <span class="built_in">println!</span>(<span class="string">"NotFound"</span>);</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>NotFound</code></p><p>or</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fn</span> <span class="title">main</span></span>() &#123;</span><br><span class="line">    <span class="keyword">let</span> items: &amp;[&amp;<span class="built_in">str</span>] = &amp;[<span class="string">"foo"</span>, <span class="string">"bar"</span>, <span class="string">"baz"</span>, <span class="string">"qux"</span>];</span><br><span class="line"></span><br><span class="line">    items</span><br><span class="line">        .iter()</span><br><span class="line">        .find(|&amp;&amp;item| item == <span class="string">"rockstar programmer"</span>)</span><br><span class="line">        .or_else(|| &#123;</span><br><span class="line">            <span class="built_in">println!</span>(<span class="string">"NotFound"</span>);</span><br><span class="line">            <span class="literal">Some</span>(&amp;<span class="string">"rockstar programmer"</span>)</span><br><span class="line">        &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>NotFound</code></p><br><h3 id="224-font-color-0c0a3e-Add-element-to-the-beginning-of-the-list-font"><a class="header-anchor" href="#224-font-color-0c0a3e-Add-element-to-the-beginning-of-the-list-font">¶</a>224. <font color="0c0a3e">Add element to the beginning of the list</font></h3><blockquote><p>Insert element x at the beginning of list items.</p></blockquote><p><em>将元素添加到列表的开头</em></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> T <span class="keyword">int</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">items := []T&#123;<span class="number">42</span>, <span class="number">1337</span>&#125;</span><br><span class="line"><span class="keyword">var</span> x T = <span class="number">7</span></span><br><span class="line"></span><br><span class="line">items = <span class="built_in">append</span>([]T&#123;x&#125;, items...)</span><br><span class="line"></span><br><span class="line">fmt.Println(items)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>[7 42 1337]</code></p><p>or</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> T <span class="keyword">int</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">items := []T&#123;<span class="number">42</span>, <span class="number">1337</span>&#125;</span><br><span class="line"><span class="keyword">var</span> x T = <span class="number">7</span></span><br><span class="line"></span><br><span class="line">items = <span class="built_in">append</span>(items, x)</span><br><span class="line"><span class="built_in">copy</span>(items[<span class="number">1</span>:], items)</span><br><span class="line">items[<span class="number">0</span>] = x</span><br><span class="line"></span><br><span class="line">fmt.Println(items)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>[7 42 1337]</code></p><hr><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">use</span> std::collections::VecDeque;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">fn</span> <span class="title">main</span></span>() &#123;</span><br><span class="line">    <span class="keyword">let</span> <span class="keyword">mut</span> items = VecDeque::new();</span><br><span class="line">    items.push_back(<span class="number">22</span>);</span><br><span class="line">    items.push_back(<span class="number">33</span>);</span><br><span class="line">    <span class="keyword">let</span> x = <span class="number">11</span>;</span><br><span class="line"></span><br><span class="line">    items.push_front(x);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">println!</span>(<span class="string">"&#123;:?&#125;"</span>, items);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>[11, 22, 33]</code></p><br><h3 id="225-font-color-0c0a3e-Declare-and-use-an-optional-argument-font"><a class="header-anchor" href="#225-font-color-0c0a3e-Declare-and-use-an-optional-argument-font">¶</a>225. <font color="0c0a3e">Declare and use an optional argument</font></h3><blockquote><p>Declare an optional integer argument x to procedure f, printing out “Present” and its value if it is present, “Not present” otherwise</p></blockquote><p><em>声明并使用可选参数</em></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">f</span><span class="params">(x ...<span class="keyword">int</span>)</span></span> &#123;</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(x) &gt; <span class="number">0</span> &#123;</span><br><span class="line"><span class="built_in">println</span>(<span class="string">"Present"</span>, x[<span class="number">0</span>])</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="built_in">println</span>(<span class="string">"Not present"</span>)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">f()</span><br><span class="line">f(<span class="number">1</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><em>Go does not have optional arguments, but to some extend, they can be mimicked with a variadic parameter.<br>x is a variadic parameter, which must be the last parameter for the function f.<br>Strictly speaking, x is a list of integers, which might have more than one element. These additional elements are ignored.</em></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Not present</span><br><span class="line">Present <span class="number">1</span></span><br></pre></td></tr></table></figure><hr><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fn</span> <span class="title">f</span></span>(x: <span class="built_in">Option</span>&lt;()&gt;) &#123;</span><br><span class="line">    <span class="keyword">match</span> x &#123;</span><br><span class="line">        <span class="literal">Some</span>(x) =&gt; <span class="built_in">println!</span>(<span class="string">"Present &#123;&#125;"</span>, x),</span><br><span class="line">        <span class="literal">None</span> =&gt; <span class="built_in">println!</span>(<span class="string">"Not present"</span>),</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><h3 id="226-font-color-0c0a3e-Delete-last-element-from-list-font"><a class="header-anchor" href="#226-font-color-0c0a3e-Delete-last-element-from-list-font">¶</a>226. <font color="0c0a3e">Delete last element from list</font></h3><blockquote><p>Remove the last element from list items.</p></blockquote><p><em>从列表中删除最后一个元素</em></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">items := []<span class="keyword">string</span>&#123;<span class="string">"banana"</span>, <span class="string">"apple"</span>, <span class="string">"kiwi"</span>&#125;</span><br><span class="line">fmt.Println(items)</span><br><span class="line"></span><br><span class="line">items = items[:<span class="built_in">len</span>(items)<span class="number">-1</span>]</span><br><span class="line">fmt.Println(items)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[banana apple kiwi]</span><br><span class="line">[banana apple]</span><br></pre></td></tr></table></figure><hr><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fn</span> <span class="title">main</span></span>() &#123;</span><br><span class="line">    <span class="keyword">let</span> <span class="keyword">mut</span> items = <span class="built_in">vec!</span>[<span class="number">11</span>, <span class="number">22</span>, <span class="number">33</span>];</span><br><span class="line"></span><br><span class="line">    items.pop();</span><br><span class="line"></span><br><span class="line">    <span class="built_in">println!</span>(<span class="string">"&#123;:?&#125;"</span>, items);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>[11, 22]</code></p><br><h3 id="227-font-color-0c0a3e-Copy-list-font"><a class="header-anchor" href="#227-font-color-0c0a3e-Copy-list-font">¶</a>227. <font color="0c0a3e">Copy list</font></h3><blockquote><p>Create new list y containing the same elements as list x.<br>Subsequent modifications of y must not affect x (except for the contents referenced by the elements themselves if they contain pointers).</p></blockquote><p><em>复制列表</em></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">type</span> T <span class="keyword">string</span></span><br><span class="line">x := []T&#123;<span class="string">"Never"</span>, <span class="string">"gonna"</span>, <span class="string">"shower"</span>&#125;</span><br><span class="line"></span><br><span class="line">y := <span class="built_in">make</span>([]T, <span class="built_in">len</span>(x))</span><br><span class="line"><span class="built_in">copy</span>(y, x)</span><br><span class="line"></span><br><span class="line">y[<span class="number">2</span>] = <span class="string">"give"</span></span><br><span class="line">y = <span class="built_in">append</span>(y, <span class="string">"you"</span>, <span class="string">"up"</span>)</span><br><span class="line"></span><br><span class="line">fmt.Println(x)</span><br><span class="line">fmt.Println(y)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[Never gonna shower]</span><br><span class="line">[Never gonna give you up]</span><br></pre></td></tr></table></figure><hr><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fn</span> <span class="title">main</span></span>() &#123;</span><br><span class="line">    <span class="keyword">let</span> <span class="keyword">mut</span> x = <span class="built_in">vec!</span>[<span class="number">4</span>, <span class="number">3</span>, <span class="number">2</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> y = x.clone();</span><br><span class="line"></span><br><span class="line">    x[<span class="number">0</span>] = <span class="number">99</span>;</span><br><span class="line">    <span class="built_in">println!</span>(<span class="string">"x is &#123;:?&#125;"</span>, x);</span><br><span class="line">    <span class="built_in">println!</span>(<span class="string">"y is &#123;:?&#125;"</span>, y);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">x is [<span class="number">99</span>, <span class="number">3</span>, <span class="number">2</span>]</span><br><span class="line">y is [<span class="number">4</span>, <span class="number">3</span>, <span class="number">2</span>]</span><br></pre></td></tr></table></figure><br><h3 id="228-font-color-0c0a3e-Copy-a-file-font"><a class="header-anchor" href="#228-font-color-0c0a3e-Copy-a-file-font">¶</a>228. <font color="0c0a3e">Copy a file</font></h3><blockquote><p>Copy the file at path src to dst.</p></blockquote><p><em>复制文件</em></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line"><span class="string">"io/ioutil"</span></span><br><span class="line"><span class="string">"log"</span></span><br><span class="line"><span class="string">"os"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">src, dst := <span class="string">"/tmp/file1"</span>, <span class="string">"/tmp/file2"</span></span><br><span class="line"></span><br><span class="line">err := <span class="built_in">copy</span>(dst, src)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatalln(err)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">stat, err := os.Stat(dst)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatalln(err)</span><br><span class="line">&#125;</span><br><span class="line">fmt.Println(dst, <span class="string">"exists, it has size"</span>, stat.Size(), <span class="string">"and mode"</span>, stat.Mode())</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">copy</span><span class="params">(dst, src <span class="keyword">string</span>)</span> <span class="title">error</span></span> &#123;</span><br><span class="line">data, err := ioutil.ReadFile(src)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line">stat, err := os.Stat(src)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> ioutil.WriteFile(dst, data, stat.Mode())</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">init</span><span class="params">()</span></span> &#123;</span><br><span class="line">data := []<span class="keyword">byte</span>(<span class="string">"Hello"</span>)</span><br><span class="line">err := ioutil.WriteFile(<span class="string">"/tmp/file1"</span>, data, <span class="number">0644</span>)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatalln(err)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>/tmp/file2 exists, it has size 5 and mode -rw-r--r--</code></p><p>or</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line"><span class="string">"io/ioutil"</span></span><br><span class="line"><span class="string">"log"</span></span><br><span class="line"><span class="string">"os"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">src, dst := <span class="string">"/tmp/file1"</span>, <span class="string">"/tmp/file2"</span></span><br><span class="line"></span><br><span class="line">err := <span class="built_in">copy</span>(dst, src)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatalln(err)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">stat, err := os.Stat(dst)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatalln(err)</span><br><span class="line">&#125;</span><br><span class="line">fmt.Println(dst, <span class="string">"exists, it has size"</span>, stat.Size(), <span class="string">"and mode"</span>, stat.Mode())</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">copy</span><span class="params">(dst, src <span class="keyword">string</span>)</span> <span class="title">error</span></span> &#123;</span><br><span class="line">data, err := ioutil.ReadFile(src)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line">stat, err := os.Stat(src)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line">err = ioutil.WriteFile(dst, data, stat.Mode())</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> os.Chmod(dst, stat.Mode())</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">init</span><span class="params">()</span></span> &#123;</span><br><span class="line">data := []<span class="keyword">byte</span>(<span class="string">"Hello"</span>)</span><br><span class="line">err := ioutil.WriteFile(<span class="string">"/tmp/file1"</span>, data, <span class="number">0777</span>)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatalln(err)</span><br><span class="line">&#125;</span><br><span class="line">err = os.Chmod(<span class="string">"/tmp/file1"</span>, <span class="number">0777</span>)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatalln(err)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>/tmp/file2 exists, it has size 5 and mode -rwxrwxrwx</code></p><p>or</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line"><span class="string">"io"</span></span><br><span class="line"><span class="string">"io/ioutil"</span></span><br><span class="line"><span class="string">"log"</span></span><br><span class="line"><span class="string">"os"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">src, dst := <span class="string">"/tmp/file1"</span>, <span class="string">"/tmp/file2"</span></span><br><span class="line"></span><br><span class="line">err := <span class="built_in">copy</span>(dst, src)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatalln(err)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">stat, err := os.Stat(dst)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatalln(err)</span><br><span class="line">&#125;</span><br><span class="line">fmt.Println(dst, <span class="string">"exists, it has size"</span>, stat.Size(), <span class="string">"and mode"</span>, stat.Mode())</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">copy</span><span class="params">(dst, src <span class="keyword">string</span>)</span> <span class="title">error</span></span> &#123;</span><br><span class="line">f, err := os.Open(src)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">defer</span> f.Close()</span><br><span class="line">stat, err := f.Stat()</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line">g, err := os.OpenFile(dst, os.O_WRONLY|os.O_CREATE|os.O_TRUNC, stat.Mode())</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">defer</span> g.Close()</span><br><span class="line">_, err = io.Copy(g, f)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> os.Chmod(dst, stat.Mode())</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">init</span><span class="params">()</span></span> &#123;</span><br><span class="line">data := []<span class="keyword">byte</span>(<span class="string">"Hello"</span>)</span><br><span class="line">err := ioutil.WriteFile(<span class="string">"/tmp/file1"</span>, data, <span class="number">0777</span>)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatalln(err)</span><br><span class="line">&#125;</span><br><span class="line">err = os.Chmod(<span class="string">"/tmp/file1"</span>, <span class="number">0777</span>)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatalln(err)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>/tmp/file2 exists, it has size 5 and mode -rwxrwxrwx</code></p><hr><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">use</span> std::fs;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">fn</span> <span class="title">main</span></span>() &#123;</span><br><span class="line">    <span class="keyword">let</span> src = <span class="string">"/etc/fstabZ"</span>;</span><br><span class="line">    <span class="keyword">let</span> dst = <span class="string">"fstab.bck"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> r = fs::copy(src, dst);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">match</span> r &#123;</span><br><span class="line">        <span class="literal">Ok</span>(v) =&gt; <span class="built_in">println!</span>(<span class="string">"Copied &#123;:?&#125; bytes"</span>, v),</span><br><span class="line">        <span class="literal">Err</span>(e) =&gt; <span class="built_in">println!</span>(<span class="string">"error copying &#123;:?&#125; to &#123;:?&#125;: &#123;:?&#125;"</span>, src, dst, e),</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>error copying &quot;/etc/fstabZ&quot; to &quot;fstab.bck&quot;: Os { code: 2, kind: NotFound, message: &quot;No such file or directory&quot; }</code></p><br><h3 id="231-font-color-0c0a3e-Test-if-bytes-are-a-valid-UTF-8-string-font"><a class="header-anchor" href="#231-font-color-0c0a3e-Test-if-bytes-are-a-valid-UTF-8-string-font">¶</a>231. <font color="0c0a3e">Test if bytes are a valid UTF-8 string</font></h3><blockquote><p>Set b to true if the byte sequence s consists entirely of valid UTF-8 character code points, false otherwise.</p></blockquote><p><em>测试字节是否是有效的UTF-8字符串</em></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line"><span class="string">"unicode/utf8"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">&#123;</span><br><span class="line">s := []<span class="keyword">byte</span>(<span class="string">"Hello, 世界"</span>)</span><br><span class="line">b := utf8.Valid(s)</span><br><span class="line">fmt.Println(b)</span><br><span class="line">&#125;</span><br><span class="line">&#123;</span><br><span class="line">s := []<span class="keyword">byte</span>&#123;<span class="number">0xff</span>, <span class="number">0xfe</span>, <span class="number">0xfd</span>&#125;</span><br><span class="line">b := utf8.Valid(s)</span><br><span class="line">fmt.Println(b)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="literal">true</span></span><br><span class="line"><span class="literal">false</span></span><br></pre></td></tr></table></figure><hr><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fn</span> <span class="title">main</span></span>() &#123;</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">let</span> bytes = [<span class="number">0xc3</span>, <span class="number">0x81</span>, <span class="number">0x72</span>, <span class="number">0x76</span>, <span class="number">0xc3</span>, <span class="number">0xad</span>, <span class="number">0x7a</span>];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> b = std::<span class="built_in">str</span>::from_utf8(&amp;bytes).is_ok();</span><br><span class="line">        <span class="built_in">println!</span>(<span class="string">"&#123;&#125;"</span>, b);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">let</span> bytes = [<span class="number">0xc3</span>, <span class="number">0x81</span>, <span class="number">0x81</span>, <span class="number">0x76</span>, <span class="number">0xc3</span>, <span class="number">0xad</span>, <span class="number">0x7a</span>];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> b = std::<span class="built_in">str</span>::from_utf8(&amp;bytes).is_ok();</span><br><span class="line">        <span class="built_in">println!</span>(<span class="string">"&#123;&#125;"</span>, b);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="literal">true</span></span><br><span class="line"><span class="literal">false</span></span><br></pre></td></tr></table></figure><br><h3 id="234-font-color-0c0a3e-Encode-bytes-to-base64-font"><a class="header-anchor" href="#234-font-color-0c0a3e-Encode-bytes-to-base64-font">¶</a>234. <font color="0c0a3e">Encode bytes to base64</font></h3><blockquote><p>Assign to string s the standard base64 encoding of the byte array data, as specified by RFC 4648.</p></blockquote><p><em>将字节编码为base64</em></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"encoding/base64"</span></span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">data := []<span class="keyword">byte</span>(<span class="string">"Hello world"</span>)</span><br><span class="line">s := base64.StdEncoding.EncodeToString(data)</span><br><span class="line">fmt.Println(s)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>SGVsbG8gd29ybGQ=</code></p><hr><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//use base64;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">fn</span> <span class="title">main</span></span>() &#123;</span><br><span class="line">    <span class="keyword">let</span> d = <span class="string">"Hello, World!"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> b64txt = base64::encode(d);</span><br><span class="line">    <span class="built_in">println!</span>(<span class="string">"&#123;&#125;"</span>, b64txt);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>SGVsbG8sIFdvcmxkIQ==</code></p><br><h3 id="235-font-color-0c0a3e-Decode-base64-font"><a class="header-anchor" href="#235-font-color-0c0a3e-Decode-base64-font">¶</a>235. <font color="0c0a3e">Decode base64</font></h3><blockquote><p>Assign to byte array data the bytes represented by the base64 string s, as specified by RFC 4648.</p></blockquote><p><em>解码base64</em></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"encoding/base64"</span></span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">str := <span class="string">"SGVsbG8gd29ybGQ="</span></span><br><span class="line"></span><br><span class="line">data, err := base64.StdEncoding.DecodeString(str)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(<span class="string">"error:"</span>, err)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">fmt.Printf(<span class="string">"%q\n"</span>, data)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>&quot;Hello world&quot;</code></p><hr><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//use base64;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">fn</span> <span class="title">main</span></span>() &#123;</span><br><span class="line">    <span class="keyword">let</span> d = <span class="string">"SGVsbG8sIFdvcmxkIQ=="</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> bytes = base64::decode(d).unwrap();</span><br><span class="line">    <span class="built_in">println!</span>(<span class="string">"Hex: &#123;:x?&#125;"</span>, bytes);</span><br><span class="line">    <span class="built_in">println!</span>(<span class="string">"Txt: &#123;&#125;"</span>, std::<span class="built_in">str</span>::from_utf8(&amp;bytes).unwrap());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Hex: [<span class="number">48</span>, <span class="number">65</span>, <span class="number">6</span>c, <span class="number">6</span>c, <span class="number">6</span>f, <span class="number">2</span>c, <span class="number">20</span>, <span class="number">57</span>, <span class="number">6</span>f, <span class="number">72</span>, <span class="number">6</span>c, <span class="number">64</span>, <span class="number">21</span>]</span><br><span class="line">Txt: Hello, World!</span><br></pre></td></tr></table></figure><br><h3 id="237-font-color-0c0a3e-Xor-integers-font"><a class="header-anchor" href="#237-font-color-0c0a3e-Xor-integers-font">¶</a>237. <font color="0c0a3e">Xor integers</font></h3><blockquote><p>Assign to c the result of (a xor b)</p></blockquote><p><strong>异或运算</strong></p><p><em>异或整数</em></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">a, b := <span class="number">230</span>, <span class="number">42</span></span><br><span class="line">c := a ^ b</span><br><span class="line"></span><br><span class="line">fmt.Printf(<span class="string">"a is %12b\n"</span>, a)</span><br><span class="line">fmt.Printf(<span class="string">"b is %12b\n"</span>, b)</span><br><span class="line">fmt.Printf(<span class="string">"c is %12b\n"</span>, c)</span><br><span class="line">fmt.Println(<span class="string">"c =="</span>, c)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">a is     <span class="number">11100110</span></span><br><span class="line">b is       <span class="number">101010</span></span><br><span class="line">c is     <span class="number">11001100</span></span><br><span class="line">c == <span class="number">204</span></span><br></pre></td></tr></table></figure><p>or</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line"><span class="string">"math/big"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">a, b := big.NewInt(<span class="number">230</span>), big.NewInt(<span class="number">42</span>)</span><br><span class="line">c := <span class="built_in">new</span>(big.Int)</span><br><span class="line">c.Xor(a, b)</span><br><span class="line"></span><br><span class="line">fmt.Printf(<span class="string">"a is %12b\n"</span>, a)</span><br><span class="line">fmt.Printf(<span class="string">"b is %12b\n"</span>, b)</span><br><span class="line">fmt.Printf(<span class="string">"c is %12b\n"</span>, c)</span><br><span class="line">fmt.Println(<span class="string">"c =="</span>, c)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">a is     <span class="number">11100110</span></span><br><span class="line">b is       <span class="number">101010</span></span><br><span class="line">c is     <span class="number">11001100</span></span><br><span class="line">c == <span class="number">204</span></span><br></pre></td></tr></table></figure><hr><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fn</span> <span class="title">main</span></span>() &#123;</span><br><span class="line">    <span class="keyword">let</span> a = <span class="number">230</span>;</span><br><span class="line">    <span class="keyword">let</span> b = <span class="number">42</span>;</span><br><span class="line">    <span class="keyword">let</span> c = a ^ b;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">println!</span>(<span class="string">"&#123;&#125;"</span>, c);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>204</code></p><br><h3 id="238-font-color-0c0a3e-Xor-byte-arrays-font"><a class="header-anchor" href="#238-font-color-0c0a3e-Xor-byte-arrays-font">¶</a>238. <font color="0c0a3e">Xor byte arrays</font></h3><blockquote><p>Write in a new byte array c the xor result of byte arrays a and b.<br>a and b have the same size.</p></blockquote><p><em>异或字节数组</em></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">a, b := []<span class="keyword">byte</span>(<span class="string">"Hello"</span>), []<span class="keyword">byte</span>(<span class="string">"world"</span>)</span><br><span class="line"></span><br><span class="line">c := <span class="built_in">make</span>([]<span class="keyword">byte</span>, <span class="built_in">len</span>(a))</span><br><span class="line"><span class="keyword">for</span> i := <span class="keyword">range</span> a &#123;</span><br><span class="line">c[i] = a[i] ^ b[i]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">fmt.Printf(<span class="string">"a is %08b\n"</span>, a)</span><br><span class="line">fmt.Printf(<span class="string">"b is %08b\n"</span>, b)</span><br><span class="line">fmt.Printf(<span class="string">"c is %08b\n"</span>, c)</span><br><span class="line">fmt.Println(<span class="string">"c =="</span>, c)</span><br><span class="line">fmt.Printf(<span class="string">"c as string would be %q\n"</span>, <span class="keyword">string</span>(c))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">a is [<span class="number">01001000</span> <span class="number">01100101</span> <span class="number">01101100</span> <span class="number">01101100</span> <span class="number">01101111</span>]</span><br><span class="line">b is [<span class="number">01110111</span> <span class="number">01101111</span> <span class="number">01110010</span> <span class="number">01101100</span> <span class="number">01100100</span>]</span><br><span class="line">c is [<span class="number">00111111</span> <span class="number">00001010</span> <span class="number">00011110</span> <span class="number">00000000</span> <span class="number">00001011</span>]</span><br><span class="line">c == [<span class="number">63</span> <span class="number">10</span> <span class="number">30</span> <span class="number">0</span> <span class="number">11</span>]</span><br><span class="line">c as <span class="keyword">string</span> would be <span class="string">"?\n\x1e\x00\v"</span></span><br></pre></td></tr></table></figure><p>or</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> T [<span class="number">5</span>]<span class="keyword">byte</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> a, b T</span><br><span class="line"><span class="built_in">copy</span>(a[:], <span class="string">"Hello"</span>)</span><br><span class="line"><span class="built_in">copy</span>(b[:], <span class="string">"world"</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> c T</span><br><span class="line"><span class="keyword">for</span> i := <span class="keyword">range</span> a &#123;</span><br><span class="line">c[i] = a[i] ^ b[i]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">fmt.Printf(<span class="string">"a is %08b\n"</span>, a)</span><br><span class="line">fmt.Printf(<span class="string">"b is %08b\n"</span>, b)</span><br><span class="line">fmt.Printf(<span class="string">"c is %08b\n"</span>, c)</span><br><span class="line">fmt.Println(<span class="string">"c =="</span>, c)</span><br><span class="line">fmt.Printf(<span class="string">"c as string would be %q\n"</span>, <span class="keyword">string</span>(c[:]))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">a is [<span class="number">01001000</span> <span class="number">01100101</span> <span class="number">01101100</span> <span class="number">01101100</span> <span class="number">01101111</span>]</span><br><span class="line">b is [<span class="number">01110111</span> <span class="number">01101111</span> <span class="number">01110010</span> <span class="number">01101100</span> <span class="number">01100100</span>]</span><br><span class="line">c is [<span class="number">00111111</span> <span class="number">00001010</span> <span class="number">00011110</span> <span class="number">00000000</span> <span class="number">00001011</span>]</span><br><span class="line">c == [<span class="number">63</span> <span class="number">10</span> <span class="number">30</span> <span class="number">0</span> <span class="number">11</span>]</span><br><span class="line">c as <span class="keyword">string</span> would be <span class="string">"?\n\x1e\x00\v"</span></span><br></pre></td></tr></table></figure><hr><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fn</span> <span class="title">main</span></span>() &#123;</span><br><span class="line">    <span class="keyword">let</span> a: &amp;[<span class="built_in">u8</span>] = <span class="string">"Hello"</span>.as_bytes();</span><br><span class="line">    <span class="keyword">let</span> b: &amp;[<span class="built_in">u8</span>] = <span class="string">"world"</span>.as_bytes();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> c: <span class="built_in">Vec</span>&lt;_&gt; = a.iter().zip(b).map(|(x, y)| x ^ y).collect();</span><br><span class="line"></span><br><span class="line">    <span class="built_in">println!</span>(<span class="string">"&#123;:?&#125;"</span>, c);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>[63, 10, 30, 0, 11]</code></p><br><h3 id="239-font-color-0c0a3e-Find-first-regular-expression-match-font"><a class="header-anchor" href="#239-font-color-0c0a3e-Find-first-regular-expression-match-font">¶</a>239. <font color="0c0a3e">Find first regular expression match</font></h3><blockquote><p>Assign to string x the first word of string s consisting of exactly 3 digits, or the empty string if no such match exists.<br>A word containing more digits, or 3 digits as a substring fragment, must not match.</p></blockquote><p><em>查找第一个正则表达式匹配项</em></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line"><span class="string">"regexp"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">re := regexp.MustCompile(<span class="string">`\b\d\d\d\b`</span>)</span><br><span class="line"><span class="keyword">for</span> _, s := <span class="keyword">range</span> []<span class="keyword">string</span>&#123;</span><br><span class="line"><span class="string">""</span>,</span><br><span class="line"><span class="string">"12"</span>,</span><br><span class="line"><span class="string">"123"</span>,</span><br><span class="line"><span class="string">"1234"</span>,</span><br><span class="line"><span class="string">"I have 12 goats, 3988 otters, 224 shrimps and 456 giraffes"</span>,</span><br><span class="line"><span class="string">"See p.456, for word boundaries"</span>,</span><br><span class="line">&#125; &#123;</span><br><span class="line">x := re.FindString(s)</span><br><span class="line">fmt.Printf(<span class="string">"%q -&gt; %q\n"</span>, s, x)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">""</span> -&gt; <span class="string">""</span></span><br><span class="line"><span class="string">"12"</span> -&gt; <span class="string">""</span></span><br><span class="line"><span class="string">"123"</span> -&gt; <span class="string">"123"</span></span><br><span class="line"><span class="string">"1234"</span> -&gt; <span class="string">""</span></span><br><span class="line"><span class="string">"I have 12 goats, 3988 otters, 224 shrimps and 456 giraffes"</span> -&gt; <span class="string">"224"</span></span><br><span class="line"><span class="string">"See p.456, for word boundaries"</span> -&gt; <span class="string">"456"</span></span><br></pre></td></tr></table></figure><hr><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">use</span> regex::Regex;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">fn</span> <span class="title">main</span></span>() &#123;</span><br><span class="line">    <span class="keyword">let</span> sentences = <span class="built_in">vec!</span>[</span><br><span class="line">        <span class="string">""</span>,</span><br><span class="line">        <span class="string">"12"</span>,</span><br><span class="line">        <span class="string">"123"</span>,</span><br><span class="line">        <span class="string">"1234"</span>,</span><br><span class="line">        <span class="string">"I have 12 goats, 3988 otters, 224 shrimps and 456 giraffes"</span>,</span><br><span class="line">        <span class="string">"See p.456, for word boundaries"</span>,</span><br><span class="line">    ];</span><br><span class="line">    <span class="keyword">for</span> s <span class="keyword">in</span> sentences &#123;</span><br><span class="line">        <span class="keyword">let</span> re = Regex::new(<span class="string">r"\b\d\d\d\b"</span>).expect(<span class="string">"failed to compile regex"</span>);</span><br><span class="line">        <span class="keyword">let</span> x = re.find(s).map(|x| x.as_str()).unwrap_or(<span class="string">""</span>);</span><br><span class="line">        <span class="built_in">println!</span>(<span class="string">"[&#123;&#125;] -&gt; [&#123;&#125;]"</span>, &amp;s, &amp;x);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[] -&gt; []</span><br><span class="line">[<span class="number">12</span>] -&gt; []</span><br><span class="line">[<span class="number">123</span>] -&gt; [<span class="number">123</span>]</span><br><span class="line">[<span class="number">1234</span>] -&gt; []</span><br><span class="line">[I have <span class="number">12</span> goats, <span class="number">3988</span> otters, <span class="number">224</span> shrimps and <span class="number">456</span> giraffes] -&gt; [<span class="number">224</span>]</span><br><span class="line">[See p.<span class="number">456</span>, <span class="keyword">for</span> word boundaries] -&gt; [<span class="number">456</span>]</span><br></pre></td></tr></table></figure><br><h3 id="240-font-color-0c0a3e-Sort-2-lists-together-font"><a class="header-anchor" href="#240-font-color-0c0a3e-Sort-2-lists-together-font">¶</a>240. <font color="0c0a3e">Sort 2 lists together</font></h3><blockquote><p>Lists a and b have the same length. Apply the same permutation to a and b to have them sorted based on the values of a.</p></blockquote><p><em>将两个列表排序在一起.列表a和b的长度相同。对a和b应用相同的排列，根据a的值对它们进行排序。</em></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line"><span class="string">"sort"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> K <span class="keyword">int</span></span><br><span class="line"><span class="keyword">type</span> T <span class="keyword">string</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> sorter <span class="keyword">struct</span> &#123;</span><br><span class="line">k []K</span><br><span class="line">t []T</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(s *sorter)</span> <span class="title">Len</span><span class="params">()</span> <span class="title">int</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">len</span>(s.k)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(s *sorter)</span> <span class="title">Swap</span><span class="params">(i, j <span class="keyword">int</span>)</span></span> &#123;</span><br><span class="line"><span class="comment">// Swap affects 2 slices at once.</span></span><br><span class="line">s.k[i], s.k[j] = s.k[j], s.k[i]</span><br><span class="line">s.t[i], s.t[j] = s.t[j], s.t[i]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(s *sorter)</span> <span class="title">Less</span><span class="params">(i, j <span class="keyword">int</span>)</span> <span class="title">bool</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> s.k[i] &lt; s.k[j]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">a := []K&#123;<span class="number">9</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">8</span>&#125;</span><br><span class="line">b := []T&#123;<span class="string">"nine"</span>, <span class="string">"three"</span>, <span class="string">"four"</span>, <span class="string">"eight"</span>&#125;</span><br><span class="line"></span><br><span class="line">sort.Sort(&amp;sorter&#123;</span><br><span class="line">k: a,</span><br><span class="line">t: b,</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">fmt.Println(a)</span><br><span class="line">fmt.Println(b)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[<span class="number">3</span> <span class="number">4</span> <span class="number">8</span> <span class="number">9</span>]</span><br><span class="line">[three four eight nine]</span><br></pre></td></tr></table></figure><hr><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fn</span> <span class="title">main</span></span>() &#123;</span><br><span class="line">    <span class="keyword">let</span> a = <span class="built_in">vec!</span>[<span class="number">30</span>, <span class="number">20</span>, <span class="number">40</span>, <span class="number">10</span>];</span><br><span class="line">    <span class="keyword">let</span> b = <span class="built_in">vec!</span>[<span class="number">101</span>, <span class="number">102</span>, <span class="number">103</span>, <span class="number">104</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> <span class="keyword">mut</span> tmp: <span class="built_in">Vec</span>&lt;_&gt; = a.iter().zip(b).collect();</span><br><span class="line">    tmp.as_mut_slice().sort_by_key(|(&amp;x, _y)| x);</span><br><span class="line">    <span class="keyword">let</span> (aa, bb): (<span class="built_in">Vec</span>&lt;<span class="built_in">i32</span>&gt;, <span class="built_in">Vec</span>&lt;<span class="built_in">i32</span>&gt;) = tmp.into_iter().unzip();</span><br><span class="line"></span><br><span class="line">    <span class="built_in">println!</span>(<span class="string">"&#123;:?&#125;, &#123;:?&#125;"</span>, aa, bb);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>[10, 20, 30, 40], [104, 102, 101, 103]</code></p><br>]]></content>
    
    <summary type="html">
    
      
      
        &lt;br&gt;
&lt;h3 id=&quot;221-font-color-0c0a3e-Remove-all-non-digits-characters-font&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#221-font-color-0c0a3e-Remove-all-n
      
    
    </summary>
    
    
      <category term="Rust" scheme="http://www.dashen.tech/tags/Rust/"/>
    
  </entry>
  
  <entry>
    <title>Rust vs Go:常用语法对比(11)</title>
    <link href="http://www.dashen.tech/2021/09/12/Rust-vs-Go-%E5%B8%B8%E7%94%A8%E8%AF%AD%E6%B3%95%E5%AF%B9%E6%AF%94-11/"/>
    <id>http://www.dashen.tech/2021/09/12/Rust-vs-Go-常用语法对比-11/</id>
    <published>2021-09-12T14:43:58.000Z</published>
    <updated>2021-09-21T02:56:54.269Z</updated>
    
    <content type="html"><![CDATA[<br><h3 id="202-font-color-0c0a3e-Sum-of-squares-font"><a class="header-anchor" href="#202-font-color-0c0a3e-Sum-of-squares-font">¶</a>202. <font color="0c0a3e">Sum of squares</font></h3><blockquote><p>Calculate the sum of squares s of data, an array of floating point values.</p></blockquote><p><em>计算平方和</em></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"math"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">data := []<span class="keyword">float64</span>&#123;<span class="number">0.06</span>, <span class="number">0.82</span>, <span class="number">-0.01</span>, <span class="number">-0.34</span>, <span class="number">-0.55</span>&#125;</span><br><span class="line"><span class="keyword">var</span> s <span class="keyword">float64</span></span><br><span class="line"><span class="keyword">for</span> _, d := <span class="keyword">range</span> data &#123;</span><br><span class="line">s += math.Pow(d, <span class="number">2</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">println</span>(s)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>+1.094200e+000</code></p><hr><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fn</span> <span class="title">main</span></span>() &#123;</span><br><span class="line">    <span class="keyword">let</span> data: <span class="built_in">Vec</span>&lt;<span class="built_in">f32</span>&gt; = <span class="built_in">vec!</span>[<span class="number">2.0</span>, <span class="number">3.5</span>, <span class="number">4.0</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> s = data.iter().map(|x| x.powi(<span class="number">2</span>)).sum::&lt;<span class="built_in">f32</span>&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="built_in">println!</span>(<span class="string">"&#123;&#125;"</span>, s);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>32.25</code></p><br><h3 id="205-font-color-0c0a3e-Get-an-environment-variable-font"><a class="header-anchor" href="#205-font-color-0c0a3e-Get-an-environment-variable-font">¶</a>205. <font color="0c0a3e">Get an environment variable</font></h3><blockquote><p>Read an environment variable with the name “FOO” and assign it to the string variable foo. If it does not exist or if the system does not support environment variables, assign a value of “none”.</p></blockquote><p><em>获取环境变量</em></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line"><span class="string">"os"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">foo, ok := os.LookupEnv(<span class="string">"FOO"</span>)</span><br><span class="line"><span class="keyword">if</span> !ok &#123;</span><br><span class="line">foo = <span class="string">"none"</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">fmt.Println(foo)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>none</code></p><p>or</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line"><span class="string">"os"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">foo := os.Getenv(<span class="string">"FOO"</span>)</span><br><span class="line"><span class="keyword">if</span> foo == <span class="string">""</span> &#123;</span><br><span class="line">foo = <span class="string">"none"</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">fmt.Println(foo)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>none</code></p><hr><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">use</span> std::env;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">fn</span> <span class="title">main</span></span>() &#123;</span><br><span class="line">    <span class="keyword">let</span> foo;</span><br><span class="line">    <span class="keyword">match</span> env::var(<span class="string">"FOO"</span>) &#123;</span><br><span class="line">        <span class="literal">Ok</span>(val) =&gt; foo = val,</span><br><span class="line">        <span class="literal">Err</span>(_e) =&gt; foo = <span class="string">"none"</span>.to_string(),</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">println!</span>(<span class="string">"&#123;&#125;"</span>, foo);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">let</span> user;</span><br><span class="line">    <span class="keyword">match</span> env::var(<span class="string">"USER"</span>) &#123;</span><br><span class="line">        <span class="literal">Ok</span>(val) =&gt; user = val,</span><br><span class="line">        <span class="literal">Err</span>(_e) =&gt; user = <span class="string">"none"</span>.to_string(),</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">println!</span>(<span class="string">"&#123;&#125;"</span>, user);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">none</span><br><span class="line">playground</span><br></pre></td></tr></table></figure><p>or</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">use</span> std::env;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">fn</span> <span class="title">main</span></span>() &#123;</span><br><span class="line">    <span class="keyword">let</span> foo = env::var(<span class="string">"FOO"</span>).unwrap_or(<span class="string">"none"</span>.to_string());</span><br><span class="line">    <span class="built_in">println!</span>(<span class="string">"&#123;&#125;"</span>, foo);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> user = env::var(<span class="string">"USER"</span>).unwrap_or(<span class="string">"none"</span>.to_string());</span><br><span class="line">    <span class="built_in">println!</span>(<span class="string">"&#123;&#125;"</span>, user);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">none</span><br><span class="line">playground</span><br></pre></td></tr></table></figure><p>or</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">use</span> std::env;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">fn</span> <span class="title">main</span></span>() &#123;</span><br><span class="line">    <span class="keyword">let</span> foo = <span class="keyword">match</span> env::var(<span class="string">"FOO"</span>) &#123;</span><br><span class="line">        <span class="literal">Ok</span>(val) =&gt; val,</span><br><span class="line">        <span class="literal">Err</span>(_e) =&gt; <span class="string">"none"</span>.to_string(),</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="built_in">println!</span>(<span class="string">"&#123;&#125;"</span>, foo);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> user = <span class="keyword">match</span> env::var(<span class="string">"USER"</span>) &#123;</span><br><span class="line">        <span class="literal">Ok</span>(val) =&gt; val,</span><br><span class="line">        <span class="literal">Err</span>(_e) =&gt; <span class="string">"none"</span>.to_string(),</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="built_in">println!</span>(<span class="string">"&#123;&#125;"</span>, user);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">none</span><br><span class="line">playground</span><br></pre></td></tr></table></figure><p>or</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">use</span> std::env;</span><br><span class="line"><span class="keyword">if</span> <span class="keyword">let</span> <span class="literal">Ok</span>(tnt_root) = env::var(<span class="string">"TNT_ROOT"</span>) &#123;</span><br><span class="line">     <span class="comment">//</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><h3 id="206-font-color-0c0a3e-Switch-statement-with-strings-font"><a class="header-anchor" href="#206-font-color-0c0a3e-Switch-statement-with-strings-font">¶</a>206. <font color="0c0a3e">Switch statement with strings</font></h3><blockquote><p>Execute different procedures foo, bar, baz and barfl if the string str contains the name of the respective procedure. Do it in a way natural to the language.</p></blockquote><p><em>switch语句</em></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">str := <span class="string">"baz"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">switch</span> str &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">"foo"</span>:</span><br><span class="line">foo()</span><br><span class="line"><span class="keyword">case</span> <span class="string">"bar"</span>:</span><br><span class="line">bar()</span><br><span class="line"><span class="keyword">case</span> <span class="string">"baz"</span>:</span><br><span class="line">baz()</span><br><span class="line"><span class="keyword">case</span> <span class="string">"barfl"</span>:</span><br><span class="line">barfl()</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">foo</span><span class="params">()</span></span> &#123;</span><br><span class="line">fmt.Println(<span class="string">"Called foo"</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">bar</span><span class="params">()</span></span> &#123;</span><br><span class="line">fmt.Println(<span class="string">"Called bar"</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">baz</span><span class="params">()</span></span> &#123;</span><br><span class="line">fmt.Println(<span class="string">"Called baz"</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">barfl</span><span class="params">()</span></span> &#123;</span><br><span class="line">fmt.Println(<span class="string">"Called barfl"</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>Called baz</code></p><hr><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fn</span> <span class="title">main</span></span>() &#123;</span><br><span class="line">    <span class="function"><span class="keyword">fn</span> <span class="title">foo</span></span>() &#123;&#125;</span><br><span class="line">    <span class="function"><span class="keyword">fn</span> <span class="title">bar</span></span>() &#123;&#125;</span><br><span class="line">    <span class="function"><span class="keyword">fn</span> <span class="title">baz</span></span>() &#123;&#125;</span><br><span class="line">    <span class="function"><span class="keyword">fn</span> <span class="title">barfl</span></span>() &#123;&#125;</span><br><span class="line">    <span class="keyword">let</span> str_ = <span class="string">"x"</span>;</span><br><span class="line">    <span class="keyword">match</span> str_ &#123;</span><br><span class="line">        <span class="string">"foo"</span> =&gt; foo(),</span><br><span class="line">        <span class="string">"bar"</span> =&gt; bar(),</span><br><span class="line">        <span class="string">"baz"</span> =&gt; baz(),</span><br><span class="line">        <span class="string">"barfl"</span> =&gt; barfl(),</span><br><span class="line">        _ =&gt; &#123;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><h3 id="207-font-color-0c0a3e-Allocate-a-list-that-is-automatically-deallocated-font"><a class="header-anchor" href="#207-font-color-0c0a3e-Allocate-a-list-that-is-automatically-deallocated-font">¶</a>207. <font color="0c0a3e">Allocate a list that is automatically deallocated</font></h3><blockquote><p>Allocate a list a containing n elements (n assumed to be too large for a stack) that is automatically deallocated when the program exits the scope it is declared in.</p></blockquote><p><em>分配一个自动解除分配的列表</em></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> T <span class="keyword">byte</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">n := <span class="number">10</span>_000_000</span><br><span class="line">a := <span class="built_in">make</span>([]T, n)</span><br><span class="line">fmt.Println(<span class="built_in">len</span>(a))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><em>Elements have type T.<br>a is garbage-collected after the program exits its scope, unless we let it “escape” by taking its reference.<br>The runtime decides if a lives in the stack on in the heap.</em></p><p><code>10000000</code></p><hr><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> a = <span class="built_in">vec!</span>[<span class="number">0</span>; n];</span><br></pre></td></tr></table></figure><p><code>Heap allocations are deallocated when the variable goes out of scope.</code></p><br><h3 id="208-font-color-0c0a3e-Formula-with-arrays-font"><a class="header-anchor" href="#208-font-color-0c0a3e-Formula-with-arrays-font">¶</a>208. <font color="0c0a3e">Formula with arrays</font></h3><blockquote><p>Given the arrays a,b,c,d of equal length and the scalar e, calculate a = e*(a+b*c+cos(d)).<br>Store the results in a.</p></blockquote><p><em>对数组元素进行运算</em></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line"><span class="string">"math"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">applyFormula</span><span class="params">(a, b, c, d []<span class="keyword">float64</span>, e <span class="keyword">float64</span>)</span></span> &#123;</span><br><span class="line"><span class="keyword">for</span> i, v := <span class="keyword">range</span> a &#123;</span><br><span class="line">a[i] = e * (v + b[i] + c[i] + math.Cos(d[i]))</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">a := []<span class="keyword">float64</span>&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>&#125;</span><br><span class="line">b := []<span class="keyword">float64</span>&#123;<span class="number">5.5</span>, <span class="number">6.6</span>, <span class="number">7.7</span>, <span class="number">8.8</span>&#125;</span><br><span class="line">c := []<span class="keyword">float64</span>&#123;<span class="number">9</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">12</span>&#125;</span><br><span class="line">d := []<span class="keyword">float64</span>&#123;<span class="number">13</span>, <span class="number">14</span>, <span class="number">15</span>, <span class="number">16</span>&#125;</span><br><span class="line">e := <span class="number">42.0</span></span><br><span class="line"></span><br><span class="line">fmt.Println(<span class="string">"a is    "</span>, a)</span><br><span class="line">applyFormula(a, b, c, d, e)</span><br><span class="line">fmt.Println(<span class="string">"a is now"</span>, a)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a is     [<span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span>]</span><br><span class="line">a is now [<span class="number">689.1127648209083</span> <span class="number">786.9429631647291</span> <span class="number">879.4931076599294</span> <span class="number">1001.3783018264178</span>]</span><br></pre></td></tr></table></figure><hr><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">fn</span> <span class="title">main</span></span>() &#123;</span><br><span class="line">    <span class="keyword">let</span> <span class="keyword">mut</span> a: [<span class="built_in">f32</span>; <span class="number">5</span>] = [<span class="number">5</span>., <span class="number">2</span>., <span class="number">8</span>., <span class="number">9</span>., <span class="number">0.5</span>]; <span class="comment">// we want it to be mutable</span></span><br><span class="line">    <span class="keyword">let</span> b: [<span class="built_in">f32</span>; <span class="number">5</span>] = [<span class="number">7</span>., <span class="number">9</span>., <span class="number">8</span>., <span class="number">0.965</span>, <span class="number">0.98</span>]; </span><br><span class="line">    <span class="keyword">let</span> c: [<span class="built_in">f32</span>; <span class="number">5</span>] = [<span class="number">0</span>., <span class="number">0.8</span>, <span class="number">789456</span>., <span class="number">123456</span>., <span class="number">0.0003</span>]; </span><br><span class="line">    <span class="keyword">let</span> d: [<span class="built_in">f32</span>; <span class="number">5</span>] = [<span class="number">332</span>., <span class="number">0.1</span>, <span class="number">8</span>., <span class="number">9874</span>., <span class="number">0.3</span>]; </span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> e: <span class="built_in">f32</span> = <span class="number">85</span>.;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="number">0</span>..a.len() &#123;</span><br><span class="line">        a[i] = e * (a[i] + b[i] * c[i] + d[i].cos());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">println!</span>(<span class="string">"&#123;:?&#125;"</span>, a); <span class="comment">//Don't have any idea about the output</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>[470.29297, 866.57544, 536830750.0, 10127158.0, 123.7286]</code></p><br><h3 id="209-font-color-0c0a3e-Type-with-automatic-deep-deallocation-font"><a class="header-anchor" href="#209-font-color-0c0a3e-Type-with-automatic-deep-deallocation-font">¶</a>209. <font color="0c0a3e">Type with automatic deep deallocation</font></h3><blockquote><p>Declare a type t which contains a string s and an integer array n with variable size, and allocate a variable v of type t. Allocate v.s and v.n and set them to the values “Hello, world!” for s and [1,4,9,16,25], respectively. Deallocate v, automatically deallocating v.s and v.n (no memory leaks).</p></blockquote><p><em>自动深度解除分配的类型</em></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">f()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">f</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">type</span> t <span class="keyword">struct</span> &#123;</span><br><span class="line">s <span class="keyword">string</span></span><br><span class="line">n []<span class="keyword">int</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">v := t&#123;</span><br><span class="line">s: <span class="string">"Hello, world!"</span>,</span><br><span class="line">n: []<span class="keyword">int</span>&#123;<span class="number">1</span>, <span class="number">4</span>, <span class="number">9</span>, <span class="number">16</span>, <span class="number">25</span>&#125;,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Pretend to use v (otherwise this is a compile error)</span></span><br><span class="line">_ = v</span><br><span class="line"></span><br><span class="line"><span class="comment">// When f exits, v and all its fields are garbage-collected, recursively</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><em>After v goes out of scope, v and all its fields will be garbage-collected, recursively</em></p><hr><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">T</span></span> &#123;</span><br><span class="line">s: <span class="built_in">String</span>,</span><br><span class="line">n: <span class="built_in">Vec</span>&lt;<span class="built_in">usize</span>&gt;,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">fn</span> <span class="title">main</span></span>() &#123;</span><br><span class="line"><span class="keyword">let</span> v = T &#123;</span><br><span class="line">s: <span class="string">"Hello, world!"</span>.into(),</span><br><span class="line">n: <span class="built_in">vec!</span>[<span class="number">1</span>,<span class="number">4</span>,<span class="number">9</span>,<span class="number">16</span>,<span class="number">25</span>]</span><br><span class="line">&#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><em>When a variable goes out of scope, all member variables are deallocated recursively.</em></p><br><h3 id="211-font-color-0c0a3e-Create-folder-font"><a class="header-anchor" href="#211-font-color-0c0a3e-Create-folder-font">¶</a>211. <font color="0c0a3e">Create folder</font></h3><blockquote><p>Create the folder at path on the filesystem</p></blockquote><p><em>创建文件夹</em></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line"><span class="string">"os"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">path := <span class="string">"foo"</span></span><br><span class="line">_, err := os.Stat(path)</span><br><span class="line">b := !os.IsNotExist(err)</span><br><span class="line">fmt.Println(path, <span class="string">"exists:"</span>, b)</span><br><span class="line"></span><br><span class="line">err = os.Mkdir(path, os.ModeDir)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="built_in">panic</span>(err)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">info, err2 := os.Stat(path)</span><br><span class="line">b = !os.IsNotExist(err2)</span><br><span class="line">fmt.Println(path, <span class="string">"exists:"</span>, b)</span><br><span class="line">fmt.Println(path, <span class="string">"is a directory:"</span>, info.IsDir())</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">foo exists: <span class="literal">false</span></span><br><span class="line">foo exists: <span class="literal">true</span></span><br><span class="line">foo is a directory: <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>or</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line"><span class="string">"os"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">path := <span class="string">"foo/bar"</span></span><br><span class="line">_, err := os.Stat(path)</span><br><span class="line">b := !os.IsNotExist(err)</span><br><span class="line">fmt.Println(path, <span class="string">"exists:"</span>, b)</span><br><span class="line"></span><br><span class="line">err = os.Mkdir(path, os.ModeDir)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(<span class="string">"Could not create"</span>, path, <span class="string">"with os.Mkdir"</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">info, err2 := os.Stat(path)</span><br><span class="line">b = !os.IsNotExist(err2)</span><br><span class="line">fmt.Println(path, <span class="string">"exists:"</span>, b)</span><br><span class="line"></span><br><span class="line">err = os.MkdirAll(path, os.ModeDir)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(<span class="string">"Could not create"</span>, path, <span class="string">"with os.MkdirAll"</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">info, err2 = os.Stat(path)</span><br><span class="line">b = !os.IsNotExist(err2)</span><br><span class="line">fmt.Println(path, <span class="string">"exists:"</span>, b)</span><br><span class="line">fmt.Println(path, <span class="string">"is a directory:"</span>, info.IsDir())</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">foo/bar exists: <span class="literal">false</span></span><br><span class="line">Could not create foo/bar with os.Mkdir</span><br><span class="line">foo/bar exists: <span class="literal">false</span></span><br><span class="line">foo/bar exists: <span class="literal">true</span></span><br><span class="line">foo/bar is a directory: <span class="literal">true</span></span><br></pre></td></tr></table></figure><hr><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">use</span> std::fs;</span><br><span class="line"><span class="keyword">use</span> std::path::Path;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">fn</span> <span class="title">main</span></span>() &#123;</span><br><span class="line">    <span class="keyword">let</span> path = <span class="string">"/tmp/goofy"</span>;</span><br><span class="line">    <span class="keyword">let</span> b: <span class="built_in">bool</span> = Path::new(path).is_dir();</span><br><span class="line">    <span class="built_in">println!</span>(<span class="string">"&#123;&#125; exists: &#123;&#125;"</span>, path, b);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> r = fs::create_dir(path);</span><br><span class="line">    <span class="keyword">match</span> r &#123;</span><br><span class="line">        <span class="literal">Err</span>(e) =&gt; &#123;</span><br><span class="line">            <span class="built_in">println!</span>(<span class="string">"error creating &#123;&#125;: &#123;&#125;"</span>, path, e);</span><br><span class="line">            std::process::exit(<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="literal">Ok</span>(_) =&gt; <span class="built_in">println!</span>(<span class="string">"created &#123;&#125;: OK"</span>, path),</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> b: <span class="built_in">bool</span> = Path::new(path).is_dir();</span><br><span class="line">    <span class="built_in">println!</span>(<span class="string">"&#123;&#125; exists: &#123;&#125;"</span>, path, b);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">/tmp/goofy exists: <span class="literal">false</span></span><br><span class="line">created /tmp/goofy: OK</span><br><span class="line">/tmp/goofy exists: <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>or</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">use</span> std::fs;</span><br><span class="line"><span class="keyword">use</span> std::path::Path;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">fn</span> <span class="title">main</span></span>() &#123;</span><br><span class="line">    <span class="keyword">let</span> path = <span class="string">"/tmp/friends/goofy"</span>;</span><br><span class="line">    <span class="keyword">let</span> b: <span class="built_in">bool</span> = Path::new(path).is_dir();</span><br><span class="line">    <span class="built_in">println!</span>(<span class="string">"&#123;&#125; exists: &#123;&#125;"</span>, path, b);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// fs::create_dir can't create parent folders</span></span><br><span class="line">    <span class="keyword">let</span> r = fs::create_dir(path);</span><br><span class="line">    <span class="keyword">match</span> r &#123;</span><br><span class="line">        <span class="literal">Err</span>(e) =&gt; <span class="built_in">println!</span>(<span class="string">"error creating &#123;&#125;: &#123;&#125;"</span>, path, e),</span><br><span class="line">        <span class="literal">Ok</span>(_) =&gt; <span class="built_in">println!</span>(<span class="string">"created &#123;&#125;: OK"</span>, path),</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> b: <span class="built_in">bool</span> = Path::new(path).is_dir();</span><br><span class="line">    <span class="built_in">println!</span>(<span class="string">"&#123;&#125; exists: &#123;&#125;"</span>, path, b);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// fs::create_dir_all does create parent folders</span></span><br><span class="line">    <span class="keyword">let</span> r = fs::create_dir_all(path);</span><br><span class="line">    <span class="keyword">match</span> r &#123;</span><br><span class="line">        <span class="literal">Err</span>(e) =&gt; <span class="built_in">println!</span>(<span class="string">"error creating &#123;&#125;: &#123;&#125;"</span>, path, e),</span><br><span class="line">        <span class="literal">Ok</span>(_) =&gt; <span class="built_in">println!</span>(<span class="string">"created &#123;&#125;: OK"</span>, path),</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> b: <span class="built_in">bool</span> = Path::new(path).is_dir();</span><br><span class="line">    <span class="built_in">println!</span>(<span class="string">"&#123;&#125; exists: &#123;&#125;"</span>, path, b);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">/tmp/friends/goofy exists: <span class="literal">false</span></span><br><span class="line">error creating /tmp/friends/goofy: No such file or directory (os error <span class="number">2</span>)</span><br><span class="line">/tmp/friends/goofy exists: <span class="literal">false</span></span><br><span class="line">created /tmp/friends/goofy: OK</span><br><span class="line">/tmp/friends/goofy exists: <span class="literal">true</span></span><br></pre></td></tr></table></figure><br><h3 id="212-font-color-0c0a3e-Check-if-folder-exists-font"><a class="header-anchor" href="#212-font-color-0c0a3e-Check-if-folder-exists-font">¶</a>212. <font color="0c0a3e">Check if folder exists</font></h3><blockquote><p>Set boolean b to true if path exists on the filesystem and is a directory; false otherwise.</p></blockquote><p><em>检查文件夹是否存在</em></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line"><span class="string">"os"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">path := <span class="string">"foo"</span></span><br><span class="line">info, err := os.Stat(path)</span><br><span class="line">b := !os.IsNotExist(err) &amp;&amp; info.IsDir()</span><br><span class="line">fmt.Println(path, <span class="string">"is a directory:"</span>, b)</span><br><span class="line"></span><br><span class="line">err = os.Mkdir(path, os.ModeDir)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="built_in">panic</span>(err)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">info, err = os.Stat(path)</span><br><span class="line">b = !os.IsNotExist(err) &amp;&amp; info.IsDir()</span><br><span class="line">fmt.Println(path, <span class="string">"is a directory:"</span>, b)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">foo is a directory: <span class="literal">false</span></span><br><span class="line">foo is a directory: <span class="literal">true</span></span><br></pre></td></tr></table></figure><hr><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">use</span> std::path::Path;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">fn</span> <span class="title">main</span></span>() &#123;</span><br><span class="line">    <span class="keyword">let</span> path = <span class="string">"/etc"</span>;</span><br><span class="line">    <span class="keyword">let</span> b: <span class="built_in">bool</span> = Path::new(path).is_dir();</span><br><span class="line">    <span class="built_in">println!</span>(<span class="string">"&#123;&#125;: &#123;&#125;"</span>, path, b);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> path = <span class="string">"/goofy"</span>;</span><br><span class="line">    <span class="keyword">let</span> b: <span class="built_in">bool</span> = Path::new(path).is_dir();</span><br><span class="line">    <span class="built_in">println!</span>(<span class="string">"&#123;&#125;: &#123;&#125;"</span>, path, b);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/etc: <span class="literal">true</span></span><br><span class="line">/goofy: <span class="literal">false</span></span><br></pre></td></tr></table></figure><br><h3 id="215-font-color-0c0a3e-Pad-string-on-the-left-font"><a class="header-anchor" href="#215-font-color-0c0a3e-Pad-string-on-the-left-font">¶</a>215. <font color="0c0a3e">Pad string on the left</font></h3><blockquote><p>Prepend extra character c at the beginning of string s to make sure its length is at least m.<br>The length is the number of characters, not the number of bytes.</p></blockquote><p><em>左侧补齐字符串</em></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line"><span class="string">"strings"</span></span><br><span class="line"><span class="string">"unicode/utf8"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">m := <span class="number">3</span></span><br><span class="line">c := <span class="string">"-"</span></span><br><span class="line"><span class="keyword">for</span> _, s := <span class="keyword">range</span> []<span class="keyword">string</span>&#123;</span><br><span class="line"><span class="string">""</span>,</span><br><span class="line"><span class="string">"a"</span>,</span><br><span class="line"><span class="string">"ab"</span>,</span><br><span class="line"><span class="string">"abc"</span>,</span><br><span class="line"><span class="string">"abcd"</span>,</span><br><span class="line"><span class="string">"é"</span>,</span><br><span class="line">&#125; &#123;</span><br><span class="line"><span class="keyword">if</span> n := utf8.RuneCountInString(s); n &lt; m &#123;</span><br><span class="line">s = strings.Repeat(c, m-n) + s</span><br><span class="line">&#125;</span><br><span class="line">fmt.Println(s)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">--a</span><br><span class="line">-ab</span><br><span class="line">abc</span><br><span class="line">abcd</span><br><span class="line">--é</span><br></pre></td></tr></table></figure><hr><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">use</span> unicode_width::&#123;UnicodeWidthChar, UnicodeWidthStr&#125;;</span><br><span class="line"><span class="keyword">if</span> <span class="keyword">let</span> <span class="literal">Some</span>(columns_short) = m.checked_sub(s.width()) &#123;</span><br><span class="line">    <span class="keyword">let</span> padding_width = c</span><br><span class="line">        .width()</span><br><span class="line">        .filter(|n| *n &gt; <span class="number">0</span>)</span><br><span class="line">        .expect(<span class="string">"padding character should be visible"</span>);</span><br><span class="line">    <span class="comment">// Saturate the columns_short</span></span><br><span class="line">    <span class="keyword">let</span> padding_needed = columns_short + padding_width - <span class="number">1</span> / padding_width;</span><br><span class="line">    <span class="keyword">let</span> <span class="keyword">mut</span> t = <span class="built_in">String</span>::with_capacity(s.len() + padding_needed);</span><br><span class="line">    t.extend((<span class="number">0</span>..padding_needed).map(|_| c)</span><br><span class="line">    t.push_str(&amp;s);</span><br><span class="line">    s = t;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>*This uses the Unicode display width to determine the padding needed. This will be appropriate for most uses of monospaced text.</p><p>It assumes that m won’t combine with other characters to form a grapheme.*</p><br><h3 id="217-font-color-0c0a3e-Create-a-Zip-archive-font"><a class="header-anchor" href="#217-font-color-0c0a3e-Create-a-Zip-archive-font">¶</a>217. <font color="0c0a3e">Create a Zip archive</font></h3><blockquote><p>Create a zip-file with filename name and add the files listed in list to that zip-file.</p></blockquote><p><em>创建压缩文件</em></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"archive/zip"</span></span><br><span class="line"><span class="string">"bytes"</span></span><br><span class="line"><span class="string">"io"</span></span><br><span class="line"><span class="string">"io/ioutil"</span></span><br><span class="line"><span class="string">"log"</span></span><br><span class="line"><span class="string">"os"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">list := []<span class="keyword">string</span>&#123;</span><br><span class="line"><span class="string">"readme.txt"</span>,</span><br><span class="line"><span class="string">"gopher.txt"</span>,</span><br><span class="line"><span class="string">"todo.txt"</span>,</span><br><span class="line">&#125;</span><br><span class="line">name := <span class="string">"archive.zip"</span></span><br><span class="line"></span><br><span class="line">err := makeZip(list, name)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatal(err)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">makeZip</span><span class="params">(list []<span class="keyword">string</span>, name <span class="keyword">string</span>)</span> <span class="title">error</span></span> &#123;</span><br><span class="line"><span class="comment">// Create a buffer to write our archive to.</span></span><br><span class="line">buf := <span class="built_in">new</span>(bytes.Buffer)</span><br><span class="line"></span><br><span class="line"><span class="comment">// Create a new zip archive.</span></span><br><span class="line">w := zip.NewWriter(buf)</span><br><span class="line"></span><br><span class="line"><span class="comment">// Add some files to the archive.</span></span><br><span class="line"><span class="keyword">for</span> _, filename := <span class="keyword">range</span> list &#123;</span><br><span class="line"><span class="comment">// Open file for reading</span></span><br><span class="line">input, err := os.Open(filename)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// Create ZIP entry for writing</span></span><br><span class="line">output, err := w.Create(filename)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">_, err = io.Copy(output, input)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Make sure to check the error on Close.</span></span><br><span class="line">err := w.Close()</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">N := buf.Len()</span><br><span class="line">err = ioutil.WriteFile(name, buf.Bytes(), <span class="number">0777</span>)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line">log.Println(<span class="string">"Written a ZIP file of"</span>, N, <span class="string">"bytes"</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">init</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="comment">// Create some files in the filesystem.</span></span><br><span class="line"><span class="keyword">var</span> files = []<span class="keyword">struct</span> &#123;</span><br><span class="line">Name, Body <span class="keyword">string</span></span><br><span class="line">&#125;&#123;</span><br><span class="line">&#123;<span class="string">"readme.txt"</span>, <span class="string">"This archive contains some text files."</span>&#125;,</span><br><span class="line">&#123;<span class="string">"gopher.txt"</span>, <span class="string">"Gopher names:\nGeorge\nGeoffrey\nGonzo"</span>&#125;,</span><br><span class="line">&#123;<span class="string">"todo.txt"</span>, <span class="string">"Get animal handling licence.\nWrite more examples."</span>&#125;,</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> _, file := <span class="keyword">range</span> files &#123;</span><br><span class="line">err := ioutil.WriteFile(file.Name, []<span class="keyword">byte</span>(file.Body), <span class="number">0777</span>)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatal(err)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><em>list contains filenames of files existing in the filesystem.<br>In this example, the zip data is buffered in memory before writing to the filesystem.</em></p><p><code>2009/11/10 23:00:00 Written a ZIP file of 492 bytes</code></p><hr><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">use</span> zip::write::FileOptions;</span><br><span class="line"><span class="keyword">let</span> path = std::path::Path::new(_name);</span><br><span class="line"><span class="keyword">let</span> file = std::fs::File::create(&amp;path).unwrap();</span><br><span class="line"><span class="keyword">let</span> <span class="keyword">mut</span> zip = zip::ZipWriter::new(file); zip.start_file(<span class="string">"readme.txt"</span>, FileOptions::default())?;                                                          </span><br><span class="line">zip.write_all(<span class="string">b"Hello, World!\n"</span>)?;</span><br><span class="line">zip.finish()?;</span><br></pre></td></tr></table></figure><p>or</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">use</span> zip::write::FileOptions;</span><br><span class="line"><span class="function"><span class="keyword">fn</span> <span class="title">zip</span></span>(_name: &amp;<span class="built_in">str</span>, _list: <span class="built_in">Vec</span>&lt;&amp;<span class="built_in">str</span>&gt;) -&gt; zip::result::ZipResult&lt;()&gt;</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">let</span> path = std::path::Path::new(_name);</span><br><span class="line">    <span class="keyword">let</span> file = std::fs::File::create(&amp;path).unwrap();</span><br><span class="line">    <span class="keyword">let</span> <span class="keyword">mut</span> zip = zip::ZipWriter::new(file);</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> _list.iter() &#123;</span><br><span class="line">        zip.start_file(i <span class="keyword">as</span> &amp;<span class="built_in">str</span>, FileOptions::default())?;</span><br><span class="line">    &#125;</span><br><span class="line">    zip.finish()?;</span><br><span class="line">    <span class="literal">Ok</span>(())</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><h3 id="218-font-color-0c0a3e-List-intersection-font"><a class="header-anchor" href="#218-font-color-0c0a3e-List-intersection-font">¶</a>218. <font color="0c0a3e">List intersection</font></h3><blockquote><p>Create list c containing all unique elements that are contained in both lists a and b.<br>c should not contain any duplicates, even if a and b do.<br>The order of c doesn’t matter.</p></blockquote><p><em>列表的交集</em></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> T <span class="keyword">int</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">a := []T&#123;<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>&#125;</span><br><span class="line">b := []T&#123;<span class="number">1</span>, <span class="number">3</span>, <span class="number">9</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">9</span>, <span class="number">7</span>, <span class="number">7</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Convert to sets</span></span><br><span class="line">seta := <span class="built_in">make</span>(<span class="keyword">map</span>[T]<span class="keyword">bool</span>, <span class="built_in">len</span>(a))</span><br><span class="line"><span class="keyword">for</span> _, x := <span class="keyword">range</span> a &#123;</span><br><span class="line">seta[x] = <span class="literal">true</span></span><br><span class="line">&#125;</span><br><span class="line">setb := <span class="built_in">make</span>(<span class="keyword">map</span>[T]<span class="keyword">bool</span>, <span class="built_in">len</span>(a))</span><br><span class="line"><span class="keyword">for</span> _, y := <span class="keyword">range</span> b &#123;</span><br><span class="line">setb[y] = <span class="literal">true</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Iterate in one pass</span></span><br><span class="line"><span class="keyword">var</span> c []T</span><br><span class="line"><span class="keyword">for</span> x := <span class="keyword">range</span> seta &#123;</span><br><span class="line"><span class="keyword">if</span> setb[x] &#123;</span><br><span class="line">c = <span class="built_in">append</span>(c, x)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">fmt.Println(c)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>[5 7 9]</code></p><hr><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">use</span> std::collections::HashSet;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">fn</span> <span class="title">main</span></span>() &#123;</span><br><span class="line">    <span class="keyword">let</span> a = <span class="built_in">vec!</span>[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>];</span><br><span class="line">    <span class="keyword">let</span> b = <span class="built_in">vec!</span>[<span class="number">2</span>, <span class="number">4</span>, <span class="number">6</span>, <span class="number">8</span>, <span class="number">2</span>, <span class="number">2</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> unique_a = a.iter().collect::&lt;HashSet&lt;_&gt;&gt;();</span><br><span class="line">    <span class="keyword">let</span> unique_b = b.iter().collect::&lt;HashSet&lt;_&gt;&gt;();</span><br><span class="line">    <span class="keyword">let</span> c = unique_a.intersection(&amp;unique_b).collect::&lt;<span class="built_in">Vec</span>&lt;_&gt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="built_in">println!</span>(<span class="string">"c: &#123;:?&#125;"</span>, c);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>c: [2, 4]</code></p><p>or</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">use</span> std::collections::HashSet;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">fn</span> <span class="title">main</span></span>() &#123;</span><br><span class="line">    <span class="keyword">let</span> a = <span class="built_in">vec!</span>[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>];</span><br><span class="line">    <span class="keyword">let</span> b = <span class="built_in">vec!</span>[<span class="number">2</span>, <span class="number">4</span>, <span class="number">6</span>, <span class="number">8</span>, <span class="number">2</span>, <span class="number">2</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> set_a: HashSet&lt;_&gt; = a.into_iter().collect();</span><br><span class="line">    <span class="keyword">let</span> set_b: HashSet&lt;_&gt; = b.into_iter().collect();</span><br><span class="line">    <span class="keyword">let</span> c = set_a.intersection(&amp;set_b);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">println!</span>(<span class="string">"c: &#123;:?&#125;"</span>, c);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>c: [2, 4]</code></p><br><h3 id="219-font-color-0c0a3e-Replace-multiple-spaces-with-single-space-font"><a class="header-anchor" href="#219-font-color-0c0a3e-Replace-multiple-spaces-with-single-space-font">¶</a>219. <font color="0c0a3e">Replace multiple spaces with single space</font></h3><blockquote><p>Create string t from the value of string s with each sequence of spaces replaced by a single space.<br>Explain if only the space characters will be replaced, or the other whitespaces as well: tabs, newlines.</p></blockquote><p><em>用单个空格替换多个空格</em></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line"><span class="string">"regexp"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">// regexp created only once, and then reused</span></span><br><span class="line"><span class="keyword">var</span> whitespaces = regexp.MustCompile(<span class="string">`\s+`</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">s := <span class="string">`</span></span><br><span class="line"><span class="string">one   two</span></span><br><span class="line"><span class="string">   three</span></span><br><span class="line"><span class="string">`</span></span><br><span class="line"></span><br><span class="line">t := whitespaces.ReplaceAllString(s, <span class="string">" "</span>)</span><br><span class="line"></span><br><span class="line">fmt.Printf(<span class="string">"t=%q"</span>, t)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>t=&quot; one two three &quot;</code></p><hr><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">use</span> regex::Regex;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">fn</span> <span class="title">main</span></span>() &#123;</span><br><span class="line">    <span class="keyword">let</span> s = <span class="string">"</span></span><br><span class="line"><span class="string">one   two</span></span><br><span class="line"><span class="string">   three</span></span><br><span class="line"><span class="string">"</span>;</span><br><span class="line">    <span class="keyword">let</span> re = Regex::new(<span class="string">r"\s+"</span>).unwrap();</span><br><span class="line">    <span class="keyword">let</span> t = re.replace_all(s, <span class="string">" "</span>);</span><br><span class="line">    <span class="built_in">println!</span>(<span class="string">"&#123;&#125;"</span>, t);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>one two three</code></p><br><h3 id="220-font-color-0c0a3e-Create-a-tuple-value-font"><a class="header-anchor" href="#220-font-color-0c0a3e-Create-a-tuple-value-font">¶</a>220. <font color="0c0a3e">Create a tuple value</font></h3><blockquote><p>Create t consisting of 3 values having different types.<br>Explain if the elements of t are strongly typed or not.</p></blockquote><p><em>创建元组值a</em></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">t := []<span class="keyword">interface</span>&#123;&#125;&#123;</span><br><span class="line"><span class="number">2.5</span>,</span><br><span class="line"><span class="string">"hello"</span>,</span><br><span class="line"><span class="built_in">make</span>(<span class="keyword">chan</span> <span class="keyword">int</span>),</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>A slice of empty interface may hold any values (not strongly typed).</strong></p><hr><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fn</span> <span class="title">main</span></span>() &#123;</span><br><span class="line">    <span class="keyword">let</span> <span class="keyword">mut</span> t = (<span class="number">2.5</span>, <span class="string">"hello"</span>, -<span class="number">1</span>);</span><br><span class="line">    </span><br><span class="line">    t.<span class="number">2</span> -= <span class="number">4</span>;</span><br><span class="line">    <span class="built_in">println!</span>(<span class="string">"&#123;:?&#125;"</span>, t);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>(2.5, &quot;hello&quot;, -5)</code></p><br>]]></content>
    
    <summary type="html">
    
      
      
        &lt;br&gt;
&lt;h3 id=&quot;202-font-color-0c0a3e-Sum-of-squares-font&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#202-font-color-0c0a3e-Sum-of-squares-font&quot;&gt;¶&lt;/a&gt;202.
      
    
    </summary>
    
    
      <category term="Rust" scheme="http://www.dashen.tech/tags/Rust/"/>
    
  </entry>
  
  <entry>
    <title>Rust vs Go:常用语法对比(10)</title>
    <link href="http://www.dashen.tech/2021/09/11/Rust-vs-Go-%E5%B8%B8%E7%94%A8%E8%AF%AD%E6%B3%95%E5%AF%B9%E6%AF%94-10/"/>
    <id>http://www.dashen.tech/2021/09/11/Rust-vs-Go-常用语法对比-10/</id>
    <published>2021-09-11T14:43:58.000Z</published>
    <updated>2021-10-08T08:13:27.359Z</updated>
    
    <content type="html"><![CDATA[<br><h3 id="182-font-color-0c0a3e-Quine-program-font"><a class="header-anchor" href="#182-font-color-0c0a3e-Quine-program-font">¶</a>182. <font color="0c0a3e">Quine program</font></h3><blockquote><p>Output the source of the program.</p></blockquote><p><em>输出程序的源代码</em></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">fmt.Printf(<span class="string">"%s%c%s%c\n"</span>, s, <span class="number">0x60</span>, s, <span class="number">0x60</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> s = <span class="string">`package main</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">import "fmt"</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">func main() &#123;</span></span><br><span class="line"><span class="string">fmt.Printf("%s%c%s%c\n", s, 0x60, s, 0x60)</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">var s = `</span></span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">fmt.Printf(<span class="string">"%s%c%s%c\n"</span>, s, <span class="number">0x60</span>, s, <span class="number">0x60</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> s = <span class="string">`package main</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">import "fmt"</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">func main() &#123;</span></span><br><span class="line"><span class="string">fmt.Printf("%s%c%s%c\n", s, 0x60, s, 0x60)</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">var s = `</span></span><br></pre></td></tr></table></figure><br><p>另一种写法：</p><p><a href="https://taoshu.in/go/how-to-use-go-embed.html" target="_blank" rel="noopener">//go:embed 入门</a></p><p>Quine 是一种可以输出自身源码的程序。利用 go:embed 我们可以轻松实现 quine 程序：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    _ <span class="string">"embed"</span></span><br><span class="line">    <span class="string">"fmt"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">//go:embed quine.go</span></span><br><span class="line"><span class="keyword">var</span> src <span class="keyword">string</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    fmt.Print(src)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fn</span> <span class="title">main</span></span>() &#123;</span><br><span class="line">    <span class="keyword">let</span> x = <span class="string">"fn main() &#123;\n    let x = "</span>;</span><br><span class="line">    <span class="keyword">let</span> y = <span class="string">"print!(\"&#123;&#125;&#123;:?&#125;;\n    let y = &#123;:?&#125;;\n    &#123;&#125;\", x, x, y, y)\n&#125;\n"</span>;</span><br><span class="line">    <span class="built_in">print!</span>(<span class="string">"&#123;&#125;&#123;:?&#125;;</span></span><br><span class="line"><span class="string">    let y = &#123;:?&#125;;</span></span><br><span class="line"><span class="string">    &#123;&#125;"</span>, x, x, y, y)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fn</span> <span class="title">main</span></span>() &#123;</span><br><span class="line">    <span class="keyword">let</span> x = <span class="string">"fn main() &#123;\n    let x = "</span>;</span><br><span class="line">    <span class="keyword">let</span> y = <span class="string">"print!(\"&#123;&#125;&#123;:?&#125;;\n    let y = &#123;:?&#125;;\n    &#123;&#125;\", x, x, y, y)\n&#125;\n"</span>;</span><br><span class="line">    <span class="built_in">print!</span>(<span class="string">"&#123;&#125;&#123;:?&#125;;</span></span><br><span class="line"><span class="string">    let y = &#123;:?&#125;;</span></span><br><span class="line"><span class="string">    &#123;&#125;"</span>, x, x, y, y)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>or</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fn</span> <span class="title">main</span></span>()&#123;<span class="built_in">print!</span>(<span class="string">"&#123;&#125;,&#123;0:?&#125;)&#125;&#125;"</span>,<span class="string">"fn main()&#123;print!(\"&#123;&#125;,&#123;0:?&#125;)&#125;&#125;\""</span>)&#125;</span><br></pre></td></tr></table></figure><p>输出：</p><p><code>fn main(){print!(&quot;{},{0:?})}}&quot;,&quot;fn main(){print!(\&quot;{},{0:?})}}\&quot;&quot;)}</code></p><br><h3 id="184-font-color-0c0a3e-Tomorrow-font"><a class="header-anchor" href="#184-font-color-0c0a3e-Tomorrow-font">¶</a>184. <font color="0c0a3e">Tomorrow</font></h3><blockquote><p>Assign to variable t a string representing the day, month and year of the day after the current date.</p></blockquote><p><em>明天的日期</em></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">"time"</span></span><br><span class="line">t := time.Now().Add(<span class="number">24</span> * time.Hour).Format(<span class="string">"2006-01-02"</span>)</span><br></pre></td></tr></table></figure><hr><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fn</span> <span class="title">main</span></span>() &#123;</span><br><span class="line">    <span class="keyword">let</span> t = chrono::Utc::now().date().succ().to_string();</span><br><span class="line">    <span class="built_in">println!</span>(<span class="string">"&#123;&#125;"</span>, t);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>2021-07-18UTC</code></p><br><h3 id="185-font-color-0c0a3e-Execute-function-in-30-seconds-font"><a class="header-anchor" href="#185-font-color-0c0a3e-Execute-function-in-30-seconds-font">¶</a>185. <font color="0c0a3e">Execute function in 30 seconds</font></h3><blockquote><p>Schedule the execution of f(42) in 30 seconds.</p></blockquote><p><em>30秒内执行功能</em></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">"time"</span></span><br><span class="line">timer := time.AfterFunc(</span><br><span class="line"><span class="number">30</span>*time.Second,</span><br><span class="line"><span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line">f(<span class="number">42</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>or</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line"><span class="string">"time"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">fmt.Println(<span class="string">"Scheduling f(42)"</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">go</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line">time.Sleep(<span class="number">3</span> * time.Second)</span><br><span class="line">f(<span class="number">42</span>)</span><br><span class="line">&#125;()</span><br><span class="line"></span><br><span class="line"><span class="comment">// Poor man's waiting of completion of f.</span></span><br><span class="line"><span class="comment">// Don't do this in prod, use proper synchronization instead.</span></span><br><span class="line">time.Sleep(<span class="number">4</span> * time.Second)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">f</span><span class="params">(i <span class="keyword">int</span>)</span></span> &#123;</span><br><span class="line">fmt.Println(<span class="string">"Received"</span>, i)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>Scheduling f(42)</code></p><hr><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">use</span> std::time::Duration;</span><br><span class="line"><span class="keyword">use</span> std::thread::sleep;</span><br><span class="line">sleep(Duration::new(<span class="number">30</span>, <span class="number">0</span>));</span><br><span class="line">f(<span class="number">42</span>);</span><br></pre></td></tr></table></figure><br><h3 id="186-font-color-0c0a3e-Exit-program-cleanly-font"><a class="header-anchor" href="#186-font-color-0c0a3e-Exit-program-cleanly-font">¶</a>186. <font color="0c0a3e">Exit program cleanly</font></h3><blockquote><p>Exit a program cleanly indicating no error to OS</p></blockquote><p><em>干净地退出程序</em></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line"><span class="string">"os"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">fmt.Println(<span class="string">"A"</span>)</span><br><span class="line">os.Exit(<span class="number">0</span>)</span><br><span class="line">fmt.Println(<span class="string">"B"</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>A</code></p><p>or</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line"><span class="string">"os"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">process1()</span><br><span class="line">process2()</span><br><span class="line">process3()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">process1</span><span class="params">()</span></span> &#123;</span><br><span class="line">fmt.Println(<span class="string">"process 1"</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">process2</span><span class="params">()</span></span> &#123;</span><br><span class="line">fmt.Println(<span class="string">"process 2"</span>)</span><br><span class="line"><span class="keyword">defer</span> fmt.Println(<span class="string">"A"</span>)</span><br><span class="line"><span class="keyword">defer</span> os.Exit(<span class="number">0</span>)</span><br><span class="line"><span class="keyword">defer</span> fmt.Println(<span class="string">"B"</span>)</span><br><span class="line">fmt.Println(<span class="string">"C"</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">process3</span><span class="params">()</span></span> &#123;</span><br><span class="line">fmt.Println(<span class="string">"process 3"</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">process <span class="number">1</span></span><br><span class="line">process <span class="number">2</span></span><br><span class="line">C</span><br><span class="line">B</span><br></pre></td></tr></table></figure><hr><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">use</span> std::process::exit;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">fn</span> <span class="title">main</span></span>() &#123;</span><br><span class="line">    <span class="built_in">println!</span>(<span class="string">"A"</span>);</span><br><span class="line">    exit(<span class="number">0</span>);</span><br><span class="line">    <span class="built_in">println!</span>(<span class="string">"B"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>A</code></p><br><h3 id="189-font-color-0c0a3e-Filter-and-transform-list-font"><a class="header-anchor" href="#189-font-color-0c0a3e-Filter-and-transform-list-font">¶</a>189. <font color="0c0a3e">Filter and transform list</font></h3><blockquote><p>Produce a new list y containing the result of function T applied to all elements e of list x that match the predicate P.</p></blockquote><p><em>过滤和转换列表</em></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">P</span><span class="params">(e <span class="keyword">int</span>)</span> <span class="title">bool</span></span> &#123;</span><br><span class="line"><span class="comment">// Predicate "is even"</span></span><br><span class="line"><span class="keyword">return</span> e%<span class="number">2</span> == <span class="number">0</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Result = <span class="keyword">int</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">T</span><span class="params">(e <span class="keyword">int</span>)</span> <span class="title">Result</span></span> &#123;</span><br><span class="line"><span class="comment">// Transformation "square"</span></span><br><span class="line"><span class="keyword">return</span> e * e</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">x := []<span class="keyword">int</span>&#123;<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> y []Result</span><br><span class="line"><span class="keyword">for</span> _, e := <span class="keyword">range</span> x &#123;</span><br><span class="line"><span class="keyword">if</span> P(e) &#123;</span><br><span class="line">y = <span class="built_in">append</span>(y, T(e))</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">fmt.Println(y)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>[16 36 64 100]</code></p><hr><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> y = x.iter()</span><br><span class="line">.filter(P)</span><br><span class="line">        .map(T)</span><br><span class="line">.collect::&lt;<span class="built_in">Vec</span>&lt;_&gt;&gt;();</span><br></pre></td></tr></table></figure><br><h3 id="190-font-color-0c0a3e-Call-an-external-C-function-font"><a class="header-anchor" href="#190-font-color-0c0a3e-Call-an-external-C-function-font">¶</a>190. <font color="0c0a3e">Call an external C function</font></h3><blockquote><p>Declare an external C function with the prototype<br>void foo(double *a, int n);<br>and call it, passing an array (or a list) of size 10 to a and 10 to n.<br>Use only standard features of your language.</p></blockquote><p><em>调用外部C函数</em></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// void foo(double *a, int n);</span></span><br><span class="line"><span class="comment">// double a[] = &#123;0, 1, 2, 3, 4, 5, 6, 7, 8, 9&#125;;</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">"C"</span></span><br><span class="line"></span><br><span class="line">C.foo(C.a, <span class="number">10</span>)</span><br></pre></td></tr></table></figure><hr><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">extern</span> <span class="string">"C"</span> &#123;</span><br><span class="line">    <span class="comment">/// # Safety</span></span><br><span class="line">    <span class="comment">///</span></span><br><span class="line">    <span class="comment">/// `a` must point to an array of at least size 10</span></span><br><span class="line">    <span class="function"><span class="keyword">fn</span> <span class="title">foo</span></span>(a: *<span class="keyword">mut</span> libc::c_double, n: libc::c_int);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> <span class="keyword">mut</span> a = [<span class="number">0.0</span>, <span class="number">1.0</span>, <span class="number">2.0</span>, <span class="number">3.0</span>, <span class="number">4.0</span>, <span class="number">5.0</span>, <span class="number">6.0</span>, <span class="number">7.0</span>, <span class="number">8.0</span>, <span class="number">9.0</span>];</span><br><span class="line"><span class="keyword">let</span> n = <span class="number">10</span>;</span><br><span class="line"><span class="keyword">unsafe</span> &#123;</span><br><span class="line">    foo(a.as_mut_ptr(), n);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><h3 id="191-font-color-0c0a3e-Check-if-any-value-in-a-list-is-larger-than-a-limit-font"><a class="header-anchor" href="#191-font-color-0c0a3e-Check-if-any-value-in-a-list-is-larger-than-a-limit-font">¶</a>191. <font color="0c0a3e">Check if any value in a list is larger than a limit</font></h3><blockquote><p>Given a one-dimensional array a, check if any value is larger than x, and execute the procedure f if that is the case</p></blockquote><p><em>检查列表中是否有任何值大于限制</em></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">f</span><span class="params">()</span></span> &#123;</span><br><span class="line">fmt.Println(<span class="string">"Larger found"</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">a := []<span class="keyword">int</span>&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>&#125;</span><br><span class="line">x := <span class="number">4</span></span><br><span class="line"><span class="keyword">for</span> _, v := <span class="keyword">range</span> a &#123;</span><br><span class="line"><span class="keyword">if</span> v &gt; x &#123;</span><br><span class="line">f()</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>Larger found</code></p><hr><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fn</span> <span class="title">main</span></span>() &#123;</span><br><span class="line">    <span class="keyword">let</span> a = [<span class="number">5</span>, <span class="number">6</span>, <span class="number">8</span>, -<span class="number">20</span>, <span class="number">9</span>, <span class="number">42</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> x = <span class="number">35</span>;</span><br><span class="line">    <span class="keyword">if</span> a.iter().any(|&amp;elem| elem &gt; x) &#123;</span><br><span class="line">        f()</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> x = <span class="number">50</span>;</span><br><span class="line">    <span class="keyword">if</span> a.iter().any(|&amp;elem| elem &gt; x) &#123;</span><br><span class="line">        g()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">fn</span> <span class="title">f</span></span>() &#123;</span><br><span class="line">    <span class="built_in">println!</span>(<span class="string">"F"</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">fn</span> <span class="title">g</span></span>() &#123;</span><br><span class="line">    <span class="built_in">println!</span>(<span class="string">"G"</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>F</code></p><br><h3 id="192-font-color-0c0a3e-Declare-a-real-variable-with-at-least-20-digits-font"><a class="header-anchor" href="#192-font-color-0c0a3e-Declare-a-real-variable-with-at-least-20-digits-font">¶</a>192. <font color="0c0a3e">Declare a real variable with at least 20 digits</font></h3><blockquote><p>Declare a real variable a with at least 20 digits; if the type does not exist, issue an error at compile time.</p></blockquote><p><em>声明一个至少有20位数字的实变量</em></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line"><span class="string">"math/big"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">a, _, err := big.ParseFloat(<span class="string">"123456789.123456789123465789"</span>, <span class="number">10</span>, <span class="number">200</span>, big.ToZero)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="built_in">panic</span>(err)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">fmt.Println(a)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>1.234567891234567891234657889999999999999999999999999999999999e+08</code></p><hr><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">use</span> rust_decimal::Decimal;</span><br><span class="line"><span class="keyword">use</span> std::<span class="built_in">str</span>::FromStr;</span><br><span class="line"><span class="keyword">let</span> a = Decimal::from_str(<span class="string">"1234567890.123456789012345"</span>).unwrap();</span><br></pre></td></tr></table></figure><br><h3 id="197-font-color-0c0a3e-Get-a-list-of-lines-from-a-file-font"><a class="header-anchor" href="#197-font-color-0c0a3e-Get-a-list-of-lines-from-a-file-font">¶</a>197. <font color="0c0a3e"> Get a list of lines from a file</font></h3><blockquote><p>Retrieve the contents of file at path into a list of strings lines, in which each element is a line of the file.</p></blockquote><p><em>从文件中获取行列表.将文件路径中的内容检索到字符串行列表中，其中每个元素都是文件的一行。</em></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line"><span class="string">"io/ioutil"</span></span><br><span class="line"><span class="string">"log"</span></span><br><span class="line"><span class="string">"strings"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">readLines</span><span class="params">(path <span class="keyword">string</span>)</span> <span class="params">([]<span class="keyword">string</span>, error)</span></span> &#123;</span><br><span class="line">b, err := ioutil.ReadFile(path)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span>, err</span><br><span class="line">&#125;</span><br><span class="line">lines := strings.Split(<span class="keyword">string</span>(b), <span class="string">"\n"</span>)</span><br><span class="line"><span class="keyword">return</span> lines, <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">lines, err := readLines(<span class="string">"/tmp/file1"</span>)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatalln(err)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i, line := <span class="keyword">range</span> lines &#123;</span><br><span class="line">fmt.Printf(<span class="string">"line %d: %s\n"</span>, i, line)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">init</span><span class="params">()</span></span> &#123;</span><br><span class="line">data := []<span class="keyword">byte</span>(<span class="string">`foo</span></span><br><span class="line"><span class="string">bar</span></span><br><span class="line"><span class="string">baz`</span>)</span><br><span class="line">err := ioutil.WriteFile(<span class="string">"/tmp/file1"</span>, data, <span class="number">0644</span>)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatalln(err)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">line <span class="number">0</span>: foo</span><br><span class="line">line <span class="number">1</span>: bar</span><br><span class="line">line <span class="number">2</span>: baz</span><br></pre></td></tr></table></figure><hr><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">use</span> std::fs::File;</span><br><span class="line"><span class="keyword">use</span> std::io::prelude::*;</span><br><span class="line"><span class="keyword">use</span> std::io::BufReader;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">fn</span> <span class="title">main</span></span>() &#123;</span><br><span class="line">    <span class="keyword">let</span> path = <span class="string">"/etc/hosts"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> lines = BufReader::new(File::open(path).unwrap())</span><br><span class="line">        .lines()</span><br><span class="line">        .collect::&lt;<span class="built_in">Vec</span>&lt;_&gt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="built_in">println!</span>(<span class="string">"&#123;:?&#125;"</span>, lines);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>[Ok(&quot;127.0.0.1\tlocalhost&quot;), Ok(&quot;::1\tlocalhost ip6-localhost ip6-loopback&quot;), Ok(&quot;fe00::0\tip6-localnet&quot;), Ok(&quot;ff00::0\tip6-mcastprefix&quot;), Ok(&quot;ff02::1\tip6-allnodes&quot;), Ok(&quot;ff02::2\tip6-allrouters&quot;)]</code></p><br><h3 id="198-font-color-0c0a3e-Abort-program-execution-with-error-condition-font"><a class="header-anchor" href="#198-font-color-0c0a3e-Abort-program-execution-with-error-condition-font">¶</a>198. <font color="0c0a3e">Abort program execution with error condition</font></h3><blockquote><p>Abort program execution with error condition x (where x is an integer value)</p></blockquote><p><em>出现错误情况时中止程序执行</em></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"os"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">x := <span class="number">1</span></span><br><span class="line">os.Exit(x)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><em>Program exited: status 1.</em></p><hr><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">use</span> std::process;</span><br><span class="line">process::exit(x);</span><br></pre></td></tr></table></figure><br><h3 id="200-font-color-0c0a3e-Return-hypotenuse-font"><a class="header-anchor" href="#200-font-color-0c0a3e-Return-hypotenuse-font">¶</a>200. <font color="0c0a3e">Return hypotenuse</font></h3><blockquote><p>Returns the hypotenuse h of the triangle where the sides adjacent to the square angle have lengths x and y.</p></blockquote><p><em>返回三角形的斜边h，其中与直角相邻的边的长度为x和y。</em></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line"><span class="string">"math"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">x := <span class="number">1.0</span></span><br><span class="line">y := <span class="number">1.0</span></span><br><span class="line"></span><br><span class="line">h := math.Hypot(x, y)</span><br><span class="line">fmt.Println(h)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>1.4142135623730951</code></p><hr><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fn</span> <span class="title">main</span></span>() &#123;</span><br><span class="line">    <span class="keyword">let</span> (x, y) = (<span class="number">1.0</span>, <span class="number">1.0</span>);</span><br><span class="line">    <span class="keyword">let</span> h = hypot(x, y);</span><br><span class="line">    <span class="built_in">println!</span>(<span class="string">"&#123;&#125;"</span>, h);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">fn</span> <span class="title">hypot</span></span>(x: <span class="built_in">f64</span>, y: <span class="built_in">f64</span>) -&gt; <span class="built_in">f64</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> num = x.powi(<span class="number">2</span>) + y.powi(<span class="number">2</span>);</span><br><span class="line">    num.powf(<span class="number">0.5</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>1.4142135623730951</code></p><br>]]></content>
    
    <summary type="html">
    
      
      
        &lt;br&gt;
&lt;h3 id=&quot;182-font-color-0c0a3e-Quine-program-font&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#182-font-color-0c0a3e-Quine-program-font&quot;&gt;¶&lt;/a&gt;182. &lt;
      
    
    </summary>
    
    
      <category term="Rust" scheme="http://www.dashen.tech/tags/Rust/"/>
    
  </entry>
  
</feed>
